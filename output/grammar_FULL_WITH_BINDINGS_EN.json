{
  "grammarEntries" : [ {
    "id" : "14",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian clerics?", "Which is a Belgian cleric?", "Which was a Belgian cleric?", "Which were Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "16",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian office holders?", "Which is a Belgian office holder?", "Which was a Belgian office holder?", "Which were Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "18",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian agents?", "Which is a Belgian agent?", "Which was a Belgian agent?", "Which were Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "20",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian economists?", "Which is a Belgian economist?", "Which was a Belgian economist?", "Which were Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "22",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian motorcycle riders?", "Which is a Belgian motorcycle rider?", "Which was a Belgian motorcycle rider?", "Which were Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "24",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian artists?", "Which is a Belgian artist?", "Which was a Belgian artist?", "Which were Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "26",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian athletes?", "Which is a Belgian athlete?", "Which was a Belgian athlete?", "Which were Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "28",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian scientists?", "Which is a Belgian scientist?", "Which was a Belgian scientist?", "Which were Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "30",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian architects?", "Which is a Belgian architect?", "Which was a Belgian architect?", "Which were Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "32",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian golf players?", "Which is a Belgian golf player?", "Which was a Belgian golf player?", "Which were Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "34",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian racing drivers?", "Which is a Belgian racing driver?", "Which was a Belgian racing driver?", "Which were Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "36",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian politicians?", "Which is a Belgian politician?", "Which was a Belgian politician?", "Which were Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "38",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian swimmers?", "Which is a Belgian swimmer?", "Which was a Belgian swimmer?", "Which were Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "40",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian volleyball players?", "Which is a Belgian volleyball player?", "Which was a Belgian volleyball player?", "Which were Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "42",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian persons?", "Which is a Belgian person?", "Which was a Belgian person?", "Which were Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "44",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian Christian Bishops?", "Which is a Belgian Christian Bishop?", "Which was a Belgian Christian Bishop?", "Which were Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "46",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian comics creators?", "Which is a Belgian comics creator?", "Which was a Belgian comics creator?", "Which were Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "48",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian writers?", "Which is a Belgian writer?", "Which was a Belgian writer?", "Which were Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "50",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian motorsport racers?", "Which is a Belgian motorsport racer?", "Which was a Belgian motorsport racer?", "Which were Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "52",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian humans?", "Which is a Belgian human?", "Which was a Belgian human?", "Which were Belgian humans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "54",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian golfers?", "Which is a Belgian golfer?", "Which was a Belgian golfer?", "Which were Belgian golfers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "56",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "AA",
    "sentences" : [ "Which are Belgian musical artists?", "Which is a Belgian musical artist?", "Which was a Belgian musical artist?", "Which were Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?isA <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?isA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "isA",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : false
  }, {
    "id" : "68",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian cleric?", "Give me the Alma Mater of Belgian clerics?", "Tell me the Alma Mater of a Belgian cleric?", "Tell me the Alma Mater of Belgian clerics?", "What is the Alma Mater of a Belgian cleric?", "What is the Alma Mater of Belgian clerics?", "What was the Alma Mater of a Belgian cleric?", "What was the Alma Mater of Belgian clerics?", "Which university is the Alma Mater of a Belgian cleric?", "Which university is the Alma Mater of Belgian clerics?", "Which university was the Alma Mater of a Belgian cleric?", "Which university was the Alma Mater of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "69",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian office holder?", "Give me the Alma Mater of Belgian office holders?", "Tell me the Alma Mater of a Belgian office holder?", "Tell me the Alma Mater of Belgian office holders?", "What is the Alma Mater of a Belgian office holder?", "What is the Alma Mater of Belgian office holders?", "What was the Alma Mater of a Belgian office holder?", "What was the Alma Mater of Belgian office holders?", "Which university is the Alma Mater of a Belgian office holder?", "Which university is the Alma Mater of Belgian office holders?", "Which university was the Alma Mater of a Belgian office holder?", "Which university was the Alma Mater of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "70",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian agent?", "Give me the Alma Mater of Belgian agents?", "Tell me the Alma Mater of a Belgian agent?", "Tell me the Alma Mater of Belgian agents?", "What is the Alma Mater of a Belgian agent?", "What is the Alma Mater of Belgian agents?", "What was the Alma Mater of a Belgian agent?", "What was the Alma Mater of Belgian agents?", "Which university is the Alma Mater of a Belgian agent?", "Which university is the Alma Mater of Belgian agents?", "Which university was the Alma Mater of a Belgian agent?", "Which university was the Alma Mater of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "71",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian economist?", "Give me the Alma Mater of Belgian economists?", "Tell me the Alma Mater of a Belgian economist?", "Tell me the Alma Mater of Belgian economists?", "What is the Alma Mater of a Belgian economist?", "What is the Alma Mater of Belgian economists?", "What was the Alma Mater of a Belgian economist?", "What was the Alma Mater of Belgian economists?", "Which university is the Alma Mater of a Belgian economist?", "Which university is the Alma Mater of Belgian economists?", "Which university was the Alma Mater of a Belgian economist?", "Which university was the Alma Mater of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "72",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorcycle rider?", "Give me the Alma Mater of Belgian motorcycle riders?", "Tell me the Alma Mater of a Belgian motorcycle rider?", "Tell me the Alma Mater of Belgian motorcycle riders?", "What is the Alma Mater of a Belgian motorcycle rider?", "What is the Alma Mater of Belgian motorcycle riders?", "What was the Alma Mater of a Belgian motorcycle rider?", "What was the Alma Mater of Belgian motorcycle riders?", "Which university is the Alma Mater of a Belgian motorcycle rider?", "Which university is the Alma Mater of Belgian motorcycle riders?", "Which university was the Alma Mater of a Belgian motorcycle rider?", "Which university was the Alma Mater of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "73",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian artist?", "Give me the Alma Mater of Belgian artists?", "Tell me the Alma Mater of a Belgian artist?", "Tell me the Alma Mater of Belgian artists?", "What is the Alma Mater of a Belgian artist?", "What is the Alma Mater of Belgian artists?", "What was the Alma Mater of a Belgian artist?", "What was the Alma Mater of Belgian artists?", "Which university is the Alma Mater of a Belgian artist?", "Which university is the Alma Mater of Belgian artists?", "Which university was the Alma Mater of a Belgian artist?", "Which university was the Alma Mater of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "74",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian athlete?", "Give me the Alma Mater of Belgian athletes?", "Tell me the Alma Mater of a Belgian athlete?", "Tell me the Alma Mater of Belgian athletes?", "What is the Alma Mater of a Belgian athlete?", "What is the Alma Mater of Belgian athletes?", "What was the Alma Mater of a Belgian athlete?", "What was the Alma Mater of Belgian athletes?", "Which university is the Alma Mater of a Belgian athlete?", "Which university is the Alma Mater of Belgian athletes?", "Which university was the Alma Mater of a Belgian athlete?", "Which university was the Alma Mater of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "75",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian scientist?", "Give me the Alma Mater of Belgian scientists?", "Tell me the Alma Mater of a Belgian scientist?", "Tell me the Alma Mater of Belgian scientists?", "What is the Alma Mater of a Belgian scientist?", "What is the Alma Mater of Belgian scientists?", "What was the Alma Mater of a Belgian scientist?", "What was the Alma Mater of Belgian scientists?", "Which university is the Alma Mater of a Belgian scientist?", "Which university is the Alma Mater of Belgian scientists?", "Which university was the Alma Mater of a Belgian scientist?", "Which university was the Alma Mater of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "76",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian architect?", "Give me the Alma Mater of Belgian architects?", "Tell me the Alma Mater of a Belgian architect?", "Tell me the Alma Mater of Belgian architects?", "What is the Alma Mater of a Belgian architect?", "What is the Alma Mater of Belgian architects?", "What was the Alma Mater of a Belgian architect?", "What was the Alma Mater of Belgian architects?", "Which university is the Alma Mater of a Belgian architect?", "Which university is the Alma Mater of Belgian architects?", "Which university was the Alma Mater of a Belgian architect?", "Which university was the Alma Mater of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "77",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian golf player?", "Give me the Alma Mater of Belgian golf players?", "Tell me the Alma Mater of a Belgian golf player?", "Tell me the Alma Mater of Belgian golf players?", "What is the Alma Mater of a Belgian golf player?", "What is the Alma Mater of Belgian golf players?", "What was the Alma Mater of a Belgian golf player?", "What was the Alma Mater of Belgian golf players?", "Which university is the Alma Mater of a Belgian golf player?", "Which university is the Alma Mater of Belgian golf players?", "Which university was the Alma Mater of a Belgian golf player?", "Which university was the Alma Mater of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "78",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian racing driver?", "Give me the Alma Mater of Belgian racing drivers?", "Tell me the Alma Mater of a Belgian racing driver?", "Tell me the Alma Mater of Belgian racing drivers?", "What is the Alma Mater of a Belgian racing driver?", "What is the Alma Mater of Belgian racing drivers?", "What was the Alma Mater of a Belgian racing driver?", "What was the Alma Mater of Belgian racing drivers?", "Which university is the Alma Mater of a Belgian racing driver?", "Which university is the Alma Mater of Belgian racing drivers?", "Which university was the Alma Mater of a Belgian racing driver?", "Which university was the Alma Mater of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "79",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian politician?", "Give me the Alma Mater of Belgian politicians?", "Tell me the Alma Mater of a Belgian politician?", "Tell me the Alma Mater of Belgian politicians?", "What is the Alma Mater of a Belgian politician?", "What is the Alma Mater of Belgian politicians?", "What was the Alma Mater of a Belgian politician?", "What was the Alma Mater of Belgian politicians?", "Which university is the Alma Mater of a Belgian politician?", "Which university is the Alma Mater of Belgian politicians?", "Which university was the Alma Mater of a Belgian politician?", "Which university was the Alma Mater of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "80",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian swimmer?", "Give me the Alma Mater of Belgian swimmers?", "Tell me the Alma Mater of a Belgian swimmer?", "Tell me the Alma Mater of Belgian swimmers?", "What is the Alma Mater of a Belgian swimmer?", "What is the Alma Mater of Belgian swimmers?", "What was the Alma Mater of a Belgian swimmer?", "What was the Alma Mater of Belgian swimmers?", "Which university is the Alma Mater of a Belgian swimmer?", "Which university is the Alma Mater of Belgian swimmers?", "Which university was the Alma Mater of a Belgian swimmer?", "Which university was the Alma Mater of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "81",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian volleyball player?", "Give me the Alma Mater of Belgian volleyball players?", "Tell me the Alma Mater of a Belgian volleyball player?", "Tell me the Alma Mater of Belgian volleyball players?", "What is the Alma Mater of a Belgian volleyball player?", "What is the Alma Mater of Belgian volleyball players?", "What was the Alma Mater of a Belgian volleyball player?", "What was the Alma Mater of Belgian volleyball players?", "Which university is the Alma Mater of a Belgian volleyball player?", "Which university is the Alma Mater of Belgian volleyball players?", "Which university was the Alma Mater of a Belgian volleyball player?", "Which university was the Alma Mater of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "82",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian person?", "Give me the Alma Mater of Belgian persons?", "Tell me the Alma Mater of a Belgian person?", "Tell me the Alma Mater of Belgian persons?", "What is the Alma Mater of a Belgian person?", "What is the Alma Mater of Belgian persons?", "What was the Alma Mater of a Belgian person?", "What was the Alma Mater of Belgian persons?", "Which university is the Alma Mater of a Belgian person?", "Which university is the Alma Mater of Belgian persons?", "Which university was the Alma Mater of a Belgian person?", "Which university was the Alma Mater of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "83",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian Christian Bishop?", "Give me the Alma Mater of Belgian Christian Bishops?", "Tell me the Alma Mater of a Belgian Christian Bishop?", "Tell me the Alma Mater of Belgian Christian Bishops?", "What is the Alma Mater of a Belgian Christian Bishop?", "What is the Alma Mater of Belgian Christian Bishops?", "What was the Alma Mater of a Belgian Christian Bishop?", "What was the Alma Mater of Belgian Christian Bishops?", "Which university is the Alma Mater of a Belgian Christian Bishop?", "Which university is the Alma Mater of Belgian Christian Bishops?", "Which university was the Alma Mater of a Belgian Christian Bishop?", "Which university was the Alma Mater of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "84",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian comics creator?", "Give me the Alma Mater of Belgian comics creators?", "Tell me the Alma Mater of a Belgian comics creator?", "Tell me the Alma Mater of Belgian comics creators?", "What is the Alma Mater of a Belgian comics creator?", "What is the Alma Mater of Belgian comics creators?", "What was the Alma Mater of a Belgian comics creator?", "What was the Alma Mater of Belgian comics creators?", "Which university is the Alma Mater of a Belgian comics creator?", "Which university is the Alma Mater of Belgian comics creators?", "Which university was the Alma Mater of a Belgian comics creator?", "Which university was the Alma Mater of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "85",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian writer?", "Give me the Alma Mater of Belgian writers?", "Tell me the Alma Mater of a Belgian writer?", "Tell me the Alma Mater of Belgian writers?", "What is the Alma Mater of a Belgian writer?", "What is the Alma Mater of Belgian writers?", "What was the Alma Mater of a Belgian writer?", "What was the Alma Mater of Belgian writers?", "Which university is the Alma Mater of a Belgian writer?", "Which university is the Alma Mater of Belgian writers?", "Which university was the Alma Mater of a Belgian writer?", "Which university was the Alma Mater of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "86",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorsport racer?", "Give me the Alma Mater of Belgian motorsport racers?", "Tell me the Alma Mater of a Belgian motorsport racer?", "Tell me the Alma Mater of Belgian motorsport racers?", "What is the Alma Mater of a Belgian motorsport racer?", "What is the Alma Mater of Belgian motorsport racers?", "What was the Alma Mater of a Belgian motorsport racer?", "What was the Alma Mater of Belgian motorsport racers?", "Which university is the Alma Mater of a Belgian motorsport racer?", "Which university is the Alma Mater of Belgian motorsport racers?", "Which university was the Alma Mater of a Belgian motorsport racer?", "Which university was the Alma Mater of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "87",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian musical artist?", "Give me the Alma Mater of Belgian musical artists?", "Tell me the Alma Mater of a Belgian musical artist?", "Tell me the Alma Mater of Belgian musical artists?", "What is the Alma Mater of a Belgian musical artist?", "What is the Alma Mater of Belgian musical artists?", "What was the Alma Mater of a Belgian musical artist?", "What was the Alma Mater of Belgian musical artists?", "Which university is the Alma Mater of a Belgian musical artist?", "Which university is the Alma Mater of Belgian musical artists?", "Which university was the Alma Mater of a Belgian musical artist?", "Which university was the Alma Mater of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "90",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian cleric?", "Give me the birth date of Belgian clerics?", "Tell me the birth date of a Belgian cleric?", "Tell me the birth date of Belgian clerics?", "What is the birth date of a Belgian cleric?", "What is the birth date of Belgian clerics?", "What was the birth date of a Belgian cleric?", "What was the birth date of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "91",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian office holder?", "Give me the birth date of Belgian office holders?", "Tell me the birth date of a Belgian office holder?", "Tell me the birth date of Belgian office holders?", "What is the birth date of a Belgian office holder?", "What is the birth date of Belgian office holders?", "What was the birth date of a Belgian office holder?", "What was the birth date of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "92",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian agent?", "Give me the birth date of Belgian agents?", "Tell me the birth date of a Belgian agent?", "Tell me the birth date of Belgian agents?", "What is the birth date of a Belgian agent?", "What is the birth date of Belgian agents?", "What was the birth date of a Belgian agent?", "What was the birth date of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "93",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian economist?", "Give me the birth date of Belgian economists?", "Tell me the birth date of a Belgian economist?", "Tell me the birth date of Belgian economists?", "What is the birth date of a Belgian economist?", "What is the birth date of Belgian economists?", "What was the birth date of a Belgian economist?", "What was the birth date of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "94",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorcycle rider?", "Give me the birth date of Belgian motorcycle riders?", "Tell me the birth date of a Belgian motorcycle rider?", "Tell me the birth date of Belgian motorcycle riders?", "What is the birth date of a Belgian motorcycle rider?", "What is the birth date of Belgian motorcycle riders?", "What was the birth date of a Belgian motorcycle rider?", "What was the birth date of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "95",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian artist?", "Give me the birth date of Belgian artists?", "Tell me the birth date of a Belgian artist?", "Tell me the birth date of Belgian artists?", "What is the birth date of a Belgian artist?", "What is the birth date of Belgian artists?", "What was the birth date of a Belgian artist?", "What was the birth date of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "96",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian athlete?", "Give me the birth date of Belgian athletes?", "Tell me the birth date of a Belgian athlete?", "Tell me the birth date of Belgian athletes?", "What is the birth date of a Belgian athlete?", "What is the birth date of Belgian athletes?", "What was the birth date of a Belgian athlete?", "What was the birth date of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "97",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian scientist?", "Give me the birth date of Belgian scientists?", "Tell me the birth date of a Belgian scientist?", "Tell me the birth date of Belgian scientists?", "What is the birth date of a Belgian scientist?", "What is the birth date of Belgian scientists?", "What was the birth date of a Belgian scientist?", "What was the birth date of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "98",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian architect?", "Give me the birth date of Belgian architects?", "Tell me the birth date of a Belgian architect?", "Tell me the birth date of Belgian architects?", "What is the birth date of a Belgian architect?", "What is the birth date of Belgian architects?", "What was the birth date of a Belgian architect?", "What was the birth date of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "99",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian golf player?", "Give me the birth date of Belgian golf players?", "Tell me the birth date of a Belgian golf player?", "Tell me the birth date of Belgian golf players?", "What is the birth date of a Belgian golf player?", "What is the birth date of Belgian golf players?", "What was the birth date of a Belgian golf player?", "What was the birth date of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "100",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian racing driver?", "Give me the birth date of Belgian racing drivers?", "Tell me the birth date of a Belgian racing driver?", "Tell me the birth date of Belgian racing drivers?", "What is the birth date of a Belgian racing driver?", "What is the birth date of Belgian racing drivers?", "What was the birth date of a Belgian racing driver?", "What was the birth date of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "101",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian politician?", "Give me the birth date of Belgian politicians?", "Tell me the birth date of a Belgian politician?", "Tell me the birth date of Belgian politicians?", "What is the birth date of a Belgian politician?", "What is the birth date of Belgian politicians?", "What was the birth date of a Belgian politician?", "What was the birth date of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "102",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian swimmer?", "Give me the birth date of Belgian swimmers?", "Tell me the birth date of a Belgian swimmer?", "Tell me the birth date of Belgian swimmers?", "What is the birth date of a Belgian swimmer?", "What is the birth date of Belgian swimmers?", "What was the birth date of a Belgian swimmer?", "What was the birth date of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "103",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian volleyball player?", "Give me the birth date of Belgian volleyball players?", "Tell me the birth date of a Belgian volleyball player?", "Tell me the birth date of Belgian volleyball players?", "What is the birth date of a Belgian volleyball player?", "What is the birth date of Belgian volleyball players?", "What was the birth date of a Belgian volleyball player?", "What was the birth date of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "104",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian person?", "Give me the birth date of Belgian persons?", "Tell me the birth date of a Belgian person?", "Tell me the birth date of Belgian persons?", "What is the birth date of a Belgian person?", "What is the birth date of Belgian persons?", "What was the birth date of a Belgian person?", "What was the birth date of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "105",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian Christian Bishop?", "Give me the birth date of Belgian Christian Bishops?", "Tell me the birth date of a Belgian Christian Bishop?", "Tell me the birth date of Belgian Christian Bishops?", "What is the birth date of a Belgian Christian Bishop?", "What is the birth date of Belgian Christian Bishops?", "What was the birth date of a Belgian Christian Bishop?", "What was the birth date of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "106",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian comics creator?", "Give me the birth date of Belgian comics creators?", "Tell me the birth date of a Belgian comics creator?", "Tell me the birth date of Belgian comics creators?", "What is the birth date of a Belgian comics creator?", "What is the birth date of Belgian comics creators?", "What was the birth date of a Belgian comics creator?", "What was the birth date of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "107",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian writer?", "Give me the birth date of Belgian writers?", "Tell me the birth date of a Belgian writer?", "Tell me the birth date of Belgian writers?", "What is the birth date of a Belgian writer?", "What is the birth date of Belgian writers?", "What was the birth date of a Belgian writer?", "What was the birth date of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "108",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorsport racer?", "Give me the birth date of Belgian motorsport racers?", "Tell me the birth date of a Belgian motorsport racer?", "Tell me the birth date of Belgian motorsport racers?", "What is the birth date of a Belgian motorsport racer?", "What is the birth date of Belgian motorsport racers?", "What was the birth date of a Belgian motorsport racer?", "What was the birth date of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "109",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian musical artist?", "Give me the birth date of Belgian musical artists?", "Tell me the birth date of a Belgian musical artist?", "Tell me the birth date of Belgian musical artists?", "What is the birth date of a Belgian musical artist?", "What is the birth date of Belgian musical artists?", "What was the birth date of a Belgian musical artist?", "What was the birth date of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "112",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian cleric?", "Give me the occupation of Belgian clerics?", "Tell me the occupation of a Belgian cleric?", "Tell me the occupation of Belgian clerics?", "What is the occupation of a Belgian cleric?", "What is the occupation of Belgian clerics?", "What was the occupation of a Belgian cleric?", "What was the occupation of Belgian clerics?", "Which person function is the occupation of a Belgian cleric?", "Which person function is the occupation of Belgian clerics?", "Which person function was the occupation of a Belgian cleric?", "Which person function was the occupation of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "113",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian office holder?", "Give me the occupation of Belgian office holders?", "Tell me the occupation of a Belgian office holder?", "Tell me the occupation of Belgian office holders?", "What is the occupation of a Belgian office holder?", "What is the occupation of Belgian office holders?", "What was the occupation of a Belgian office holder?", "What was the occupation of Belgian office holders?", "Which person function is the occupation of a Belgian office holder?", "Which person function is the occupation of Belgian office holders?", "Which person function was the occupation of a Belgian office holder?", "Which person function was the occupation of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "114",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian agent?", "Give me the occupation of Belgian agents?", "Tell me the occupation of a Belgian agent?", "Tell me the occupation of Belgian agents?", "What is the occupation of a Belgian agent?", "What is the occupation of Belgian agents?", "What was the occupation of a Belgian agent?", "What was the occupation of Belgian agents?", "Which person function is the occupation of a Belgian agent?", "Which person function is the occupation of Belgian agents?", "Which person function was the occupation of a Belgian agent?", "Which person function was the occupation of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "115",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian economist?", "Give me the occupation of Belgian economists?", "Tell me the occupation of a Belgian economist?", "Tell me the occupation of Belgian economists?", "What is the occupation of a Belgian economist?", "What is the occupation of Belgian economists?", "What was the occupation of a Belgian economist?", "What was the occupation of Belgian economists?", "Which person function is the occupation of a Belgian economist?", "Which person function is the occupation of Belgian economists?", "Which person function was the occupation of a Belgian economist?", "Which person function was the occupation of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorcycle rider?", "Give me the occupation of Belgian motorcycle riders?", "Tell me the occupation of a Belgian motorcycle rider?", "Tell me the occupation of Belgian motorcycle riders?", "What is the occupation of a Belgian motorcycle rider?", "What is the occupation of Belgian motorcycle riders?", "What was the occupation of a Belgian motorcycle rider?", "What was the occupation of Belgian motorcycle riders?", "Which person function is the occupation of a Belgian motorcycle rider?", "Which person function is the occupation of Belgian motorcycle riders?", "Which person function was the occupation of a Belgian motorcycle rider?", "Which person function was the occupation of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian artist?", "Give me the occupation of Belgian artists?", "Tell me the occupation of a Belgian artist?", "Tell me the occupation of Belgian artists?", "What is the occupation of a Belgian artist?", "What is the occupation of Belgian artists?", "What was the occupation of a Belgian artist?", "What was the occupation of Belgian artists?", "Which person function is the occupation of a Belgian artist?", "Which person function is the occupation of Belgian artists?", "Which person function was the occupation of a Belgian artist?", "Which person function was the occupation of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian athlete?", "Give me the occupation of Belgian athletes?", "Tell me the occupation of a Belgian athlete?", "Tell me the occupation of Belgian athletes?", "What is the occupation of a Belgian athlete?", "What is the occupation of Belgian athletes?", "What was the occupation of a Belgian athlete?", "What was the occupation of Belgian athletes?", "Which person function is the occupation of a Belgian athlete?", "Which person function is the occupation of Belgian athletes?", "Which person function was the occupation of a Belgian athlete?", "Which person function was the occupation of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian scientist?", "Give me the occupation of Belgian scientists?", "Tell me the occupation of a Belgian scientist?", "Tell me the occupation of Belgian scientists?", "What is the occupation of a Belgian scientist?", "What is the occupation of Belgian scientists?", "What was the occupation of a Belgian scientist?", "What was the occupation of Belgian scientists?", "Which person function is the occupation of a Belgian scientist?", "Which person function is the occupation of Belgian scientists?", "Which person function was the occupation of a Belgian scientist?", "Which person function was the occupation of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian architect?", "Give me the occupation of Belgian architects?", "Tell me the occupation of a Belgian architect?", "Tell me the occupation of Belgian architects?", "What is the occupation of a Belgian architect?", "What is the occupation of Belgian architects?", "What was the occupation of a Belgian architect?", "What was the occupation of Belgian architects?", "Which person function is the occupation of a Belgian architect?", "Which person function is the occupation of Belgian architects?", "Which person function was the occupation of a Belgian architect?", "Which person function was the occupation of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian golf player?", "Give me the occupation of Belgian golf players?", "Tell me the occupation of a Belgian golf player?", "Tell me the occupation of Belgian golf players?", "What is the occupation of a Belgian golf player?", "What is the occupation of Belgian golf players?", "What was the occupation of a Belgian golf player?", "What was the occupation of Belgian golf players?", "Which person function is the occupation of a Belgian golf player?", "Which person function is the occupation of Belgian golf players?", "Which person function was the occupation of a Belgian golf player?", "Which person function was the occupation of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian racing driver?", "Give me the occupation of Belgian racing drivers?", "Tell me the occupation of a Belgian racing driver?", "Tell me the occupation of Belgian racing drivers?", "What is the occupation of a Belgian racing driver?", "What is the occupation of Belgian racing drivers?", "What was the occupation of a Belgian racing driver?", "What was the occupation of Belgian racing drivers?", "Which person function is the occupation of a Belgian racing driver?", "Which person function is the occupation of Belgian racing drivers?", "Which person function was the occupation of a Belgian racing driver?", "Which person function was the occupation of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian politician?", "Give me the occupation of Belgian politicians?", "Tell me the occupation of a Belgian politician?", "Tell me the occupation of Belgian politicians?", "What is the occupation of a Belgian politician?", "What is the occupation of Belgian politicians?", "What was the occupation of a Belgian politician?", "What was the occupation of Belgian politicians?", "Which person function is the occupation of a Belgian politician?", "Which person function is the occupation of Belgian politicians?", "Which person function was the occupation of a Belgian politician?", "Which person function was the occupation of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian swimmer?", "Give me the occupation of Belgian swimmers?", "Tell me the occupation of a Belgian swimmer?", "Tell me the occupation of Belgian swimmers?", "What is the occupation of a Belgian swimmer?", "What is the occupation of Belgian swimmers?", "What was the occupation of a Belgian swimmer?", "What was the occupation of Belgian swimmers?", "Which person function is the occupation of a Belgian swimmer?", "Which person function is the occupation of Belgian swimmers?", "Which person function was the occupation of a Belgian swimmer?", "Which person function was the occupation of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian volleyball player?", "Give me the occupation of Belgian volleyball players?", "Tell me the occupation of a Belgian volleyball player?", "Tell me the occupation of Belgian volleyball players?", "What is the occupation of a Belgian volleyball player?", "What is the occupation of Belgian volleyball players?", "What was the occupation of a Belgian volleyball player?", "What was the occupation of Belgian volleyball players?", "Which person function is the occupation of a Belgian volleyball player?", "Which person function is the occupation of Belgian volleyball players?", "Which person function was the occupation of a Belgian volleyball player?", "Which person function was the occupation of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian person?", "Give me the occupation of Belgian persons?", "Tell me the occupation of a Belgian person?", "Tell me the occupation of Belgian persons?", "What is the occupation of a Belgian person?", "What is the occupation of Belgian persons?", "What was the occupation of a Belgian person?", "What was the occupation of Belgian persons?", "Which person function is the occupation of a Belgian person?", "Which person function is the occupation of Belgian persons?", "Which person function was the occupation of a Belgian person?", "Which person function was the occupation of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian Christian Bishop?", "Give me the occupation of Belgian Christian Bishops?", "Tell me the occupation of a Belgian Christian Bishop?", "Tell me the occupation of Belgian Christian Bishops?", "What is the occupation of a Belgian Christian Bishop?", "What is the occupation of Belgian Christian Bishops?", "What was the occupation of a Belgian Christian Bishop?", "What was the occupation of Belgian Christian Bishops?", "Which person function is the occupation of a Belgian Christian Bishop?", "Which person function is the occupation of Belgian Christian Bishops?", "Which person function was the occupation of a Belgian Christian Bishop?", "Which person function was the occupation of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian comics creator?", "Give me the occupation of Belgian comics creators?", "Tell me the occupation of a Belgian comics creator?", "Tell me the occupation of Belgian comics creators?", "What is the occupation of a Belgian comics creator?", "What is the occupation of Belgian comics creators?", "What was the occupation of a Belgian comics creator?", "What was the occupation of Belgian comics creators?", "Which person function is the occupation of a Belgian comics creator?", "Which person function is the occupation of Belgian comics creators?", "Which person function was the occupation of a Belgian comics creator?", "Which person function was the occupation of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian writer?", "Give me the occupation of Belgian writers?", "Tell me the occupation of a Belgian writer?", "Tell me the occupation of Belgian writers?", "What is the occupation of a Belgian writer?", "What is the occupation of Belgian writers?", "What was the occupation of a Belgian writer?", "What was the occupation of Belgian writers?", "Which person function is the occupation of a Belgian writer?", "Which person function is the occupation of Belgian writers?", "Which person function was the occupation of a Belgian writer?", "Which person function was the occupation of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorsport racer?", "Give me the occupation of Belgian motorsport racers?", "Tell me the occupation of a Belgian motorsport racer?", "Tell me the occupation of Belgian motorsport racers?", "What is the occupation of a Belgian motorsport racer?", "What is the occupation of Belgian motorsport racers?", "What was the occupation of a Belgian motorsport racer?", "What was the occupation of Belgian motorsport racers?", "Which person function is the occupation of a Belgian motorsport racer?", "Which person function is the occupation of Belgian motorsport racers?", "Which person function was the occupation of a Belgian motorsport racer?", "Which person function was the occupation of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian musical artist?", "Give me the occupation of Belgian musical artists?", "Tell me the occupation of a Belgian musical artist?", "Tell me the occupation of Belgian musical artists?", "What is the occupation of a Belgian musical artist?", "What is the occupation of Belgian musical artists?", "What was the occupation of a Belgian musical artist?", "What was the occupation of Belgian musical artists?", "Which person function is the occupation of a Belgian musical artist?", "Which person function is the occupation of Belgian musical artists?", "Which person function was the occupation of a Belgian musical artist?", "Which person function was the occupation of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian cleric?", "Give me the birth place of Belgian clerics?", "Tell me the birth place of a Belgian cleric?", "Tell me the birth place of Belgian clerics?", "What is the birth place of a Belgian cleric?", "What is the birth place of Belgian clerics?", "What was the birth place of a Belgian cleric?", "What was the birth place of Belgian clerics?", "Which place is the birth place of a Belgian cleric?", "Which place is the birth place of Belgian clerics?", "Which place was the birth place of a Belgian cleric?", "Which place was the birth place of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian office holder?", "Give me the birth place of Belgian office holders?", "Tell me the birth place of a Belgian office holder?", "Tell me the birth place of Belgian office holders?", "What is the birth place of a Belgian office holder?", "What is the birth place of Belgian office holders?", "What was the birth place of a Belgian office holder?", "What was the birth place of Belgian office holders?", "Which place is the birth place of a Belgian office holder?", "Which place is the birth place of Belgian office holders?", "Which place was the birth place of a Belgian office holder?", "Which place was the birth place of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian agent?", "Give me the birth place of Belgian agents?", "Tell me the birth place of a Belgian agent?", "Tell me the birth place of Belgian agents?", "What is the birth place of a Belgian agent?", "What is the birth place of Belgian agents?", "What was the birth place of a Belgian agent?", "What was the birth place of Belgian agents?", "Which place is the birth place of a Belgian agent?", "Which place is the birth place of Belgian agents?", "Which place was the birth place of a Belgian agent?", "Which place was the birth place of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian economist?", "Give me the birth place of Belgian economists?", "Tell me the birth place of a Belgian economist?", "Tell me the birth place of Belgian economists?", "What is the birth place of a Belgian economist?", "What is the birth place of Belgian economists?", "What was the birth place of a Belgian economist?", "What was the birth place of Belgian economists?", "Which place is the birth place of a Belgian economist?", "Which place is the birth place of Belgian economists?", "Which place was the birth place of a Belgian economist?", "Which place was the birth place of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorcycle rider?", "Give me the birth place of Belgian motorcycle riders?", "Tell me the birth place of a Belgian motorcycle rider?", "Tell me the birth place of Belgian motorcycle riders?", "What is the birth place of a Belgian motorcycle rider?", "What is the birth place of Belgian motorcycle riders?", "What was the birth place of a Belgian motorcycle rider?", "What was the birth place of Belgian motorcycle riders?", "Which place is the birth place of a Belgian motorcycle rider?", "Which place is the birth place of Belgian motorcycle riders?", "Which place was the birth place of a Belgian motorcycle rider?", "Which place was the birth place of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian artist?", "Give me the birth place of Belgian artists?", "Tell me the birth place of a Belgian artist?", "Tell me the birth place of Belgian artists?", "What is the birth place of a Belgian artist?", "What is the birth place of Belgian artists?", "What was the birth place of a Belgian artist?", "What was the birth place of Belgian artists?", "Which place is the birth place of a Belgian artist?", "Which place is the birth place of Belgian artists?", "Which place was the birth place of a Belgian artist?", "Which place was the birth place of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian athlete?", "Give me the birth place of Belgian athletes?", "Tell me the birth place of a Belgian athlete?", "Tell me the birth place of Belgian athletes?", "What is the birth place of a Belgian athlete?", "What is the birth place of Belgian athletes?", "What was the birth place of a Belgian athlete?", "What was the birth place of Belgian athletes?", "Which place is the birth place of a Belgian athlete?", "Which place is the birth place of Belgian athletes?", "Which place was the birth place of a Belgian athlete?", "Which place was the birth place of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian scientist?", "Give me the birth place of Belgian scientists?", "Tell me the birth place of a Belgian scientist?", "Tell me the birth place of Belgian scientists?", "What is the birth place of a Belgian scientist?", "What is the birth place of Belgian scientists?", "What was the birth place of a Belgian scientist?", "What was the birth place of Belgian scientists?", "Which place is the birth place of a Belgian scientist?", "Which place is the birth place of Belgian scientists?", "Which place was the birth place of a Belgian scientist?", "Which place was the birth place of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian architect?", "Give me the birth place of Belgian architects?", "Tell me the birth place of a Belgian architect?", "Tell me the birth place of Belgian architects?", "What is the birth place of a Belgian architect?", "What is the birth place of Belgian architects?", "What was the birth place of a Belgian architect?", "What was the birth place of Belgian architects?", "Which place is the birth place of a Belgian architect?", "Which place is the birth place of Belgian architects?", "Which place was the birth place of a Belgian architect?", "Which place was the birth place of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian golf player?", "Give me the birth place of Belgian golf players?", "Tell me the birth place of a Belgian golf player?", "Tell me the birth place of Belgian golf players?", "What is the birth place of a Belgian golf player?", "What is the birth place of Belgian golf players?", "What was the birth place of a Belgian golf player?", "What was the birth place of Belgian golf players?", "Which place is the birth place of a Belgian golf player?", "Which place is the birth place of Belgian golf players?", "Which place was the birth place of a Belgian golf player?", "Which place was the birth place of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian racing driver?", "Give me the birth place of Belgian racing drivers?", "Tell me the birth place of a Belgian racing driver?", "Tell me the birth place of Belgian racing drivers?", "What is the birth place of a Belgian racing driver?", "What is the birth place of Belgian racing drivers?", "What was the birth place of a Belgian racing driver?", "What was the birth place of Belgian racing drivers?", "Which place is the birth place of a Belgian racing driver?", "Which place is the birth place of Belgian racing drivers?", "Which place was the birth place of a Belgian racing driver?", "Which place was the birth place of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian politician?", "Give me the birth place of Belgian politicians?", "Tell me the birth place of a Belgian politician?", "Tell me the birth place of Belgian politicians?", "What is the birth place of a Belgian politician?", "What is the birth place of Belgian politicians?", "What was the birth place of a Belgian politician?", "What was the birth place of Belgian politicians?", "Which place is the birth place of a Belgian politician?", "Which place is the birth place of Belgian politicians?", "Which place was the birth place of a Belgian politician?", "Which place was the birth place of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian swimmer?", "Give me the birth place of Belgian swimmers?", "Tell me the birth place of a Belgian swimmer?", "Tell me the birth place of Belgian swimmers?", "What is the birth place of a Belgian swimmer?", "What is the birth place of Belgian swimmers?", "What was the birth place of a Belgian swimmer?", "What was the birth place of Belgian swimmers?", "Which place is the birth place of a Belgian swimmer?", "Which place is the birth place of Belgian swimmers?", "Which place was the birth place of a Belgian swimmer?", "Which place was the birth place of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian volleyball player?", "Give me the birth place of Belgian volleyball players?", "Tell me the birth place of a Belgian volleyball player?", "Tell me the birth place of Belgian volleyball players?", "What is the birth place of a Belgian volleyball player?", "What is the birth place of Belgian volleyball players?", "What was the birth place of a Belgian volleyball player?", "What was the birth place of Belgian volleyball players?", "Which place is the birth place of a Belgian volleyball player?", "Which place is the birth place of Belgian volleyball players?", "Which place was the birth place of a Belgian volleyball player?", "Which place was the birth place of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian person?", "Give me the birth place of Belgian persons?", "Tell me the birth place of a Belgian person?", "Tell me the birth place of Belgian persons?", "What is the birth place of a Belgian person?", "What is the birth place of Belgian persons?", "What was the birth place of a Belgian person?", "What was the birth place of Belgian persons?", "Which place is the birth place of a Belgian person?", "Which place is the birth place of Belgian persons?", "Which place was the birth place of a Belgian person?", "Which place was the birth place of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian Christian Bishop?", "Give me the birth place of Belgian Christian Bishops?", "Tell me the birth place of a Belgian Christian Bishop?", "Tell me the birth place of Belgian Christian Bishops?", "What is the birth place of a Belgian Christian Bishop?", "What is the birth place of Belgian Christian Bishops?", "What was the birth place of a Belgian Christian Bishop?", "What was the birth place of Belgian Christian Bishops?", "Which place is the birth place of a Belgian Christian Bishop?", "Which place is the birth place of Belgian Christian Bishops?", "Which place was the birth place of a Belgian Christian Bishop?", "Which place was the birth place of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian comics creator?", "Give me the birth place of Belgian comics creators?", "Tell me the birth place of a Belgian comics creator?", "Tell me the birth place of Belgian comics creators?", "What is the birth place of a Belgian comics creator?", "What is the birth place of Belgian comics creators?", "What was the birth place of a Belgian comics creator?", "What was the birth place of Belgian comics creators?", "Which place is the birth place of a Belgian comics creator?", "Which place is the birth place of Belgian comics creators?", "Which place was the birth place of a Belgian comics creator?", "Which place was the birth place of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian writer?", "Give me the birth place of Belgian writers?", "Tell me the birth place of a Belgian writer?", "Tell me the birth place of Belgian writers?", "What is the birth place of a Belgian writer?", "What is the birth place of Belgian writers?", "What was the birth place of a Belgian writer?", "What was the birth place of Belgian writers?", "Which place is the birth place of a Belgian writer?", "Which place is the birth place of Belgian writers?", "Which place was the birth place of a Belgian writer?", "Which place was the birth place of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorsport racer?", "Give me the birth place of Belgian motorsport racers?", "Tell me the birth place of a Belgian motorsport racer?", "Tell me the birth place of Belgian motorsport racers?", "What is the birth place of a Belgian motorsport racer?", "What is the birth place of Belgian motorsport racers?", "What was the birth place of a Belgian motorsport racer?", "What was the birth place of Belgian motorsport racers?", "Which place is the birth place of a Belgian motorsport racer?", "Which place is the birth place of Belgian motorsport racers?", "Which place was the birth place of a Belgian motorsport racer?", "Which place was the birth place of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian musical artist?", "Give me the birth place of Belgian musical artists?", "Tell me the birth place of a Belgian musical artist?", "Tell me the birth place of Belgian musical artists?", "What is the birth place of a Belgian musical artist?", "What is the birth place of Belgian musical artists?", "What was the birth place of a Belgian musical artist?", "What was the birth place of Belgian musical artists?", "Which place is the birth place of a Belgian musical artist?", "Which place is the birth place of Belgian musical artists?", "Which place was the birth place of a Belgian musical artist?", "Which place was the birth place of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian cleric?", "Give me the spouse of Belgian clerics?", "Tell me the spouse of a Belgian cleric?", "Tell me the spouse of Belgian clerics?", "What is the spouse of a Belgian cleric?", "What is the spouse of Belgian clerics?", "What was the spouse of a Belgian cleric?", "What was the spouse of Belgian clerics?", "Which person is the spouse of a Belgian cleric?", "Which person is the spouse of Belgian clerics?", "Which person was the spouse of a Belgian cleric?", "Which person was the spouse of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian office holder?", "Give me the spouse of Belgian office holders?", "Tell me the spouse of a Belgian office holder?", "Tell me the spouse of Belgian office holders?", "What is the spouse of a Belgian office holder?", "What is the spouse of Belgian office holders?", "What was the spouse of a Belgian office holder?", "What was the spouse of Belgian office holders?", "Which person is the spouse of a Belgian office holder?", "Which person is the spouse of Belgian office holders?", "Which person was the spouse of a Belgian office holder?", "Which person was the spouse of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian agent?", "Give me the spouse of Belgian agents?", "Tell me the spouse of a Belgian agent?", "Tell me the spouse of Belgian agents?", "What is the spouse of a Belgian agent?", "What is the spouse of Belgian agents?", "What was the spouse of a Belgian agent?", "What was the spouse of Belgian agents?", "Which person is the spouse of a Belgian agent?", "Which person is the spouse of Belgian agents?", "Which person was the spouse of a Belgian agent?", "Which person was the spouse of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian economist?", "Give me the spouse of Belgian economists?", "Tell me the spouse of a Belgian economist?", "Tell me the spouse of Belgian economists?", "What is the spouse of a Belgian economist?", "What is the spouse of Belgian economists?", "What was the spouse of a Belgian economist?", "What was the spouse of Belgian economists?", "Which person is the spouse of a Belgian economist?", "Which person is the spouse of Belgian economists?", "Which person was the spouse of a Belgian economist?", "Which person was the spouse of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorcycle rider?", "Give me the spouse of Belgian motorcycle riders?", "Tell me the spouse of a Belgian motorcycle rider?", "Tell me the spouse of Belgian motorcycle riders?", "What is the spouse of a Belgian motorcycle rider?", "What is the spouse of Belgian motorcycle riders?", "What was the spouse of a Belgian motorcycle rider?", "What was the spouse of Belgian motorcycle riders?", "Which person is the spouse of a Belgian motorcycle rider?", "Which person is the spouse of Belgian motorcycle riders?", "Which person was the spouse of a Belgian motorcycle rider?", "Which person was the spouse of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian artist?", "Give me the spouse of Belgian artists?", "Tell me the spouse of a Belgian artist?", "Tell me the spouse of Belgian artists?", "What is the spouse of a Belgian artist?", "What is the spouse of Belgian artists?", "What was the spouse of a Belgian artist?", "What was the spouse of Belgian artists?", "Which person is the spouse of a Belgian artist?", "Which person is the spouse of Belgian artists?", "Which person was the spouse of a Belgian artist?", "Which person was the spouse of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian athlete?", "Give me the spouse of Belgian athletes?", "Tell me the spouse of a Belgian athlete?", "Tell me the spouse of Belgian athletes?", "What is the spouse of a Belgian athlete?", "What is the spouse of Belgian athletes?", "What was the spouse of a Belgian athlete?", "What was the spouse of Belgian athletes?", "Which person is the spouse of a Belgian athlete?", "Which person is the spouse of Belgian athletes?", "Which person was the spouse of a Belgian athlete?", "Which person was the spouse of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian scientist?", "Give me the spouse of Belgian scientists?", "Tell me the spouse of a Belgian scientist?", "Tell me the spouse of Belgian scientists?", "What is the spouse of a Belgian scientist?", "What is the spouse of Belgian scientists?", "What was the spouse of a Belgian scientist?", "What was the spouse of Belgian scientists?", "Which person is the spouse of a Belgian scientist?", "Which person is the spouse of Belgian scientists?", "Which person was the spouse of a Belgian scientist?", "Which person was the spouse of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian architect?", "Give me the spouse of Belgian architects?", "Tell me the spouse of a Belgian architect?", "Tell me the spouse of Belgian architects?", "What is the spouse of a Belgian architect?", "What is the spouse of Belgian architects?", "What was the spouse of a Belgian architect?", "What was the spouse of Belgian architects?", "Which person is the spouse of a Belgian architect?", "Which person is the spouse of Belgian architects?", "Which person was the spouse of a Belgian architect?", "Which person was the spouse of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian golf player?", "Give me the spouse of Belgian golf players?", "Tell me the spouse of a Belgian golf player?", "Tell me the spouse of Belgian golf players?", "What is the spouse of a Belgian golf player?", "What is the spouse of Belgian golf players?", "What was the spouse of a Belgian golf player?", "What was the spouse of Belgian golf players?", "Which person is the spouse of a Belgian golf player?", "Which person is the spouse of Belgian golf players?", "Which person was the spouse of a Belgian golf player?", "Which person was the spouse of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian racing driver?", "Give me the spouse of Belgian racing drivers?", "Tell me the spouse of a Belgian racing driver?", "Tell me the spouse of Belgian racing drivers?", "What is the spouse of a Belgian racing driver?", "What is the spouse of Belgian racing drivers?", "What was the spouse of a Belgian racing driver?", "What was the spouse of Belgian racing drivers?", "Which person is the spouse of a Belgian racing driver?", "Which person is the spouse of Belgian racing drivers?", "Which person was the spouse of a Belgian racing driver?", "Which person was the spouse of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian politician?", "Give me the spouse of Belgian politicians?", "Tell me the spouse of a Belgian politician?", "Tell me the spouse of Belgian politicians?", "What is the spouse of a Belgian politician?", "What is the spouse of Belgian politicians?", "What was the spouse of a Belgian politician?", "What was the spouse of Belgian politicians?", "Which person is the spouse of a Belgian politician?", "Which person is the spouse of Belgian politicians?", "Which person was the spouse of a Belgian politician?", "Which person was the spouse of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian swimmer?", "Give me the spouse of Belgian swimmers?", "Tell me the spouse of a Belgian swimmer?", "Tell me the spouse of Belgian swimmers?", "What is the spouse of a Belgian swimmer?", "What is the spouse of Belgian swimmers?", "What was the spouse of a Belgian swimmer?", "What was the spouse of Belgian swimmers?", "Which person is the spouse of a Belgian swimmer?", "Which person is the spouse of Belgian swimmers?", "Which person was the spouse of a Belgian swimmer?", "Which person was the spouse of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian volleyball player?", "Give me the spouse of Belgian volleyball players?", "Tell me the spouse of a Belgian volleyball player?", "Tell me the spouse of Belgian volleyball players?", "What is the spouse of a Belgian volleyball player?", "What is the spouse of Belgian volleyball players?", "What was the spouse of a Belgian volleyball player?", "What was the spouse of Belgian volleyball players?", "Which person is the spouse of a Belgian volleyball player?", "Which person is the spouse of Belgian volleyball players?", "Which person was the spouse of a Belgian volleyball player?", "Which person was the spouse of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian person?", "Give me the spouse of Belgian persons?", "Tell me the spouse of a Belgian person?", "Tell me the spouse of Belgian persons?", "What is the spouse of a Belgian person?", "What is the spouse of Belgian persons?", "What was the spouse of a Belgian person?", "What was the spouse of Belgian persons?", "Which person is the spouse of a Belgian person?", "Which person is the spouse of Belgian persons?", "Which person was the spouse of a Belgian person?", "Which person was the spouse of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian Christian Bishop?", "Give me the spouse of Belgian Christian Bishops?", "Tell me the spouse of a Belgian Christian Bishop?", "Tell me the spouse of Belgian Christian Bishops?", "What is the spouse of a Belgian Christian Bishop?", "What is the spouse of Belgian Christian Bishops?", "What was the spouse of a Belgian Christian Bishop?", "What was the spouse of Belgian Christian Bishops?", "Which person is the spouse of a Belgian Christian Bishop?", "Which person is the spouse of Belgian Christian Bishops?", "Which person was the spouse of a Belgian Christian Bishop?", "Which person was the spouse of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian comics creator?", "Give me the spouse of Belgian comics creators?", "Tell me the spouse of a Belgian comics creator?", "Tell me the spouse of Belgian comics creators?", "What is the spouse of a Belgian comics creator?", "What is the spouse of Belgian comics creators?", "What was the spouse of a Belgian comics creator?", "What was the spouse of Belgian comics creators?", "Which person is the spouse of a Belgian comics creator?", "Which person is the spouse of Belgian comics creators?", "Which person was the spouse of a Belgian comics creator?", "Which person was the spouse of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian writer?", "Give me the spouse of Belgian writers?", "Tell me the spouse of a Belgian writer?", "Tell me the spouse of Belgian writers?", "What is the spouse of a Belgian writer?", "What is the spouse of Belgian writers?", "What was the spouse of a Belgian writer?", "What was the spouse of Belgian writers?", "Which person is the spouse of a Belgian writer?", "Which person is the spouse of Belgian writers?", "Which person was the spouse of a Belgian writer?", "Which person was the spouse of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorsport racer?", "Give me the spouse of Belgian motorsport racers?", "Tell me the spouse of a Belgian motorsport racer?", "Tell me the spouse of Belgian motorsport racers?", "What is the spouse of a Belgian motorsport racer?", "What is the spouse of Belgian motorsport racers?", "What was the spouse of a Belgian motorsport racer?", "What was the spouse of Belgian motorsport racers?", "Which person is the spouse of a Belgian motorsport racer?", "Which person is the spouse of Belgian motorsport racers?", "Which person was the spouse of a Belgian motorsport racer?", "Which person was the spouse of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian musical artist?", "Give me the spouse of Belgian musical artists?", "Tell me the spouse of a Belgian musical artist?", "Tell me the spouse of Belgian musical artists?", "What is the spouse of a Belgian musical artist?", "What is the spouse of Belgian musical artists?", "What was the spouse of a Belgian musical artist?", "What was the spouse of Belgian musical artists?", "Which person is the spouse of a Belgian musical artist?", "Which person is the spouse of Belgian musical artists?", "Which person was the spouse of a Belgian musical artist?", "Which person was the spouse of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bordered a Belgian human?", "What bordered Belgian humans?", "What borders a Belgian human?", "What borders Belgian humans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/State> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bordered a Belgian golfer?", "What bordered Belgian golfers?", "What borders a Belgian golfer?", "What borders Belgian golfers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/State> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian cleric?", "What born Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian office holder?", "What born Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian agent?", "What born Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian economist?", "What born Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian motorcycle rider?", "What born Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian artist?", "What born Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian athlete?", "What born Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian scientist?", "What born Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian architect?", "What born Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian golf player?", "What born Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian racing driver?", "What born Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian politician?", "What born Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian swimmer?", "What born Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian volleyball player?", "What born Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian person?", "What born Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian Christian Bishop?", "What born Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian comics creator?", "What born Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian writer?", "What born Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian motorsport racer?", "What born Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born a Belgian musical artist?", "What born Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian cleric?", "What is directed by Belgian clerics?", "What was directed by a Belgian cleric?", "What was directed by Belgian clerics?", "Which movie is directed by a Belgian cleric?", "Which movie is directed by Belgian clerics?", "Which movie was directed by a Belgian cleric?", "Which movie was directed by Belgian clerics?", "Which movies are directed by a Belgian cleric?", "Which movies are directed by Belgian clerics?", "Which movies were directed by a Belgian cleric?", "Which movies were directed by Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian office holder?", "What is directed by Belgian office holders?", "What was directed by a Belgian office holder?", "What was directed by Belgian office holders?", "Which movie is directed by a Belgian office holder?", "Which movie is directed by Belgian office holders?", "Which movie was directed by a Belgian office holder?", "Which movie was directed by Belgian office holders?", "Which movies are directed by a Belgian office holder?", "Which movies are directed by Belgian office holders?", "Which movies were directed by a Belgian office holder?", "Which movies were directed by Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian agent?", "What is directed by Belgian agents?", "What was directed by a Belgian agent?", "What was directed by Belgian agents?", "Which movie is directed by a Belgian agent?", "Which movie is directed by Belgian agents?", "Which movie was directed by a Belgian agent?", "Which movie was directed by Belgian agents?", "Which movies are directed by a Belgian agent?", "Which movies are directed by Belgian agents?", "Which movies were directed by a Belgian agent?", "Which movies were directed by Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian economist?", "What is directed by Belgian economists?", "What was directed by a Belgian economist?", "What was directed by Belgian economists?", "Which movie is directed by a Belgian economist?", "Which movie is directed by Belgian economists?", "Which movie was directed by a Belgian economist?", "Which movie was directed by Belgian economists?", "Which movies are directed by a Belgian economist?", "Which movies are directed by Belgian economists?", "Which movies were directed by a Belgian economist?", "Which movies were directed by Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian motorcycle rider?", "What is directed by Belgian motorcycle riders?", "What was directed by a Belgian motorcycle rider?", "What was directed by Belgian motorcycle riders?", "Which movie is directed by a Belgian motorcycle rider?", "Which movie is directed by Belgian motorcycle riders?", "Which movie was directed by a Belgian motorcycle rider?", "Which movie was directed by Belgian motorcycle riders?", "Which movies are directed by a Belgian motorcycle rider?", "Which movies are directed by Belgian motorcycle riders?", "Which movies were directed by a Belgian motorcycle rider?", "Which movies were directed by Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian artist?", "What is directed by Belgian artists?", "What was directed by a Belgian artist?", "What was directed by Belgian artists?", "Which movie is directed by a Belgian artist?", "Which movie is directed by Belgian artists?", "Which movie was directed by a Belgian artist?", "Which movie was directed by Belgian artists?", "Which movies are directed by a Belgian artist?", "Which movies are directed by Belgian artists?", "Which movies were directed by a Belgian artist?", "Which movies were directed by Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian athlete?", "What is directed by Belgian athletes?", "What was directed by a Belgian athlete?", "What was directed by Belgian athletes?", "Which movie is directed by a Belgian athlete?", "Which movie is directed by Belgian athletes?", "Which movie was directed by a Belgian athlete?", "Which movie was directed by Belgian athletes?", "Which movies are directed by a Belgian athlete?", "Which movies are directed by Belgian athletes?", "Which movies were directed by a Belgian athlete?", "Which movies were directed by Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian scientist?", "What is directed by Belgian scientists?", "What was directed by a Belgian scientist?", "What was directed by Belgian scientists?", "Which movie is directed by a Belgian scientist?", "Which movie is directed by Belgian scientists?", "Which movie was directed by a Belgian scientist?", "Which movie was directed by Belgian scientists?", "Which movies are directed by a Belgian scientist?", "Which movies are directed by Belgian scientists?", "Which movies were directed by a Belgian scientist?", "Which movies were directed by Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian architect?", "What is directed by Belgian architects?", "What was directed by a Belgian architect?", "What was directed by Belgian architects?", "Which movie is directed by a Belgian architect?", "Which movie is directed by Belgian architects?", "Which movie was directed by a Belgian architect?", "Which movie was directed by Belgian architects?", "Which movies are directed by a Belgian architect?", "Which movies are directed by Belgian architects?", "Which movies were directed by a Belgian architect?", "Which movies were directed by Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian golf player?", "What is directed by Belgian golf players?", "What was directed by a Belgian golf player?", "What was directed by Belgian golf players?", "Which movie is directed by a Belgian golf player?", "Which movie is directed by Belgian golf players?", "Which movie was directed by a Belgian golf player?", "Which movie was directed by Belgian golf players?", "Which movies are directed by a Belgian golf player?", "Which movies are directed by Belgian golf players?", "Which movies were directed by a Belgian golf player?", "Which movies were directed by Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian racing driver?", "What is directed by Belgian racing drivers?", "What was directed by a Belgian racing driver?", "What was directed by Belgian racing drivers?", "Which movie is directed by a Belgian racing driver?", "Which movie is directed by Belgian racing drivers?", "Which movie was directed by a Belgian racing driver?", "Which movie was directed by Belgian racing drivers?", "Which movies are directed by a Belgian racing driver?", "Which movies are directed by Belgian racing drivers?", "Which movies were directed by a Belgian racing driver?", "Which movies were directed by Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian politician?", "What is directed by Belgian politicians?", "What was directed by a Belgian politician?", "What was directed by Belgian politicians?", "Which movie is directed by a Belgian politician?", "Which movie is directed by Belgian politicians?", "Which movie was directed by a Belgian politician?", "Which movie was directed by Belgian politicians?", "Which movies are directed by a Belgian politician?", "Which movies are directed by Belgian politicians?", "Which movies were directed by a Belgian politician?", "Which movies were directed by Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian swimmer?", "What is directed by Belgian swimmers?", "What was directed by a Belgian swimmer?", "What was directed by Belgian swimmers?", "Which movie is directed by a Belgian swimmer?", "Which movie is directed by Belgian swimmers?", "Which movie was directed by a Belgian swimmer?", "Which movie was directed by Belgian swimmers?", "Which movies are directed by a Belgian swimmer?", "Which movies are directed by Belgian swimmers?", "Which movies were directed by a Belgian swimmer?", "Which movies were directed by Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian volleyball player?", "What is directed by Belgian volleyball players?", "What was directed by a Belgian volleyball player?", "What was directed by Belgian volleyball players?", "Which movie is directed by a Belgian volleyball player?", "Which movie is directed by Belgian volleyball players?", "Which movie was directed by a Belgian volleyball player?", "Which movie was directed by Belgian volleyball players?", "Which movies are directed by a Belgian volleyball player?", "Which movies are directed by Belgian volleyball players?", "Which movies were directed by a Belgian volleyball player?", "Which movies were directed by Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian person?", "What is directed by Belgian persons?", "What was directed by a Belgian person?", "What was directed by Belgian persons?", "Which movie is directed by a Belgian person?", "Which movie is directed by Belgian persons?", "Which movie was directed by a Belgian person?", "Which movie was directed by Belgian persons?", "Which movies are directed by a Belgian person?", "Which movies are directed by Belgian persons?", "Which movies were directed by a Belgian person?", "Which movies were directed by Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian Christian Bishop?", "What is directed by Belgian Christian Bishops?", "What was directed by a Belgian Christian Bishop?", "What was directed by Belgian Christian Bishops?", "Which movie is directed by a Belgian Christian Bishop?", "Which movie is directed by Belgian Christian Bishops?", "Which movie was directed by a Belgian Christian Bishop?", "Which movie was directed by Belgian Christian Bishops?", "Which movies are directed by a Belgian Christian Bishop?", "Which movies are directed by Belgian Christian Bishops?", "Which movies were directed by a Belgian Christian Bishop?", "Which movies were directed by Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian comics creator?", "What is directed by Belgian comics creators?", "What was directed by a Belgian comics creator?", "What was directed by Belgian comics creators?", "Which movie is directed by a Belgian comics creator?", "Which movie is directed by Belgian comics creators?", "Which movie was directed by a Belgian comics creator?", "Which movie was directed by Belgian comics creators?", "Which movies are directed by a Belgian comics creator?", "Which movies are directed by Belgian comics creators?", "Which movies were directed by a Belgian comics creator?", "Which movies were directed by Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian writer?", "What is directed by Belgian writers?", "What was directed by a Belgian writer?", "What was directed by Belgian writers?", "Which movie is directed by a Belgian writer?", "Which movie is directed by Belgian writers?", "Which movie was directed by a Belgian writer?", "Which movie was directed by Belgian writers?", "Which movies are directed by a Belgian writer?", "Which movies are directed by Belgian writers?", "Which movies were directed by a Belgian writer?", "Which movies were directed by Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian motorsport racer?", "What is directed by Belgian motorsport racers?", "What was directed by a Belgian motorsport racer?", "What was directed by Belgian motorsport racers?", "Which movie is directed by a Belgian motorsport racer?", "Which movie is directed by Belgian motorsport racers?", "Which movie was directed by a Belgian motorsport racer?", "Which movie was directed by Belgian motorsport racers?", "Which movies are directed by a Belgian motorsport racer?", "Which movies are directed by Belgian motorsport racers?", "Which movies were directed by a Belgian motorsport racer?", "Which movies were directed by Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by a Belgian musical artist?", "What is directed by Belgian musical artists?", "What was directed by a Belgian musical artist?", "What was directed by Belgian musical artists?", "Which movie is directed by a Belgian musical artist?", "Which movie is directed by Belgian musical artists?", "Which movie was directed by a Belgian musical artist?", "Which movie was directed by Belgian musical artists?", "Which movies are directed by a Belgian musical artist?", "Which movies are directed by Belgian musical artists?", "Which movies were directed by a Belgian musical artist?", "Which movies were directed by Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by a Belgian human?", "What is born by Belgian humans?", "What was born by a Belgian human?", "What was born by Belgian humans?", "Which person is born by a Belgian human?", "Which person is born by Belgian humans?", "Which person was born by a Belgian human?", "Which person was born by Belgian humans?", "Which persons are born by a Belgian human?", "Which persons are born by Belgian humans?", "Which persons were born by a Belgian human?", "Which persons were born by Belgian humans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by a Belgian golfer?", "What is born by Belgian golfers?", "What was born by a Belgian golfer?", "What was born by Belgian golfers?", "Which person is born by a Belgian golfer?", "Which person is born by Belgian golfers?", "Which person was born by a Belgian golfer?", "Which person was born by Belgian golfers?", "Which persons are born by a Belgian golfer?", "Which persons are born by Belgian golfers?", "Which persons were born by a Belgian golfer?", "Which persons were born by Belgian golfers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian human belonged?", "When was the Belgian humans belonged?", "When was the a Belgian human belongs?", "When was the Belgian humans belongs?", "When were the a Belgian human belonged?", "When were the Belgian humans belonged?", "When were the a Belgian human belongs?", "When were the Belgian humans belongs?", "Which species was the a Belgian human belonged?", "Which species was the Belgian humans belonged?", "Which species was the a Belgian human belongs?", "Which species was the Belgian humans belongs?", "Which species were the a Belgian human belonged?", "Which species were the Belgian humans belonged?", "Which species were the a Belgian human belongs?", "Which species were the Belgian humans belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/Animal> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golfer belonged?", "When was the Belgian golfers belonged?", "When was the a Belgian golfer belongs?", "When was the Belgian golfers belongs?", "When were the a Belgian golfer belonged?", "When were the Belgian golfers belonged?", "When were the a Belgian golfer belongs?", "When were the Belgian golfers belongs?", "Which species was the a Belgian golfer belonged?", "Which species was the Belgian golfers belonged?", "Which species was the a Belgian golfer belongs?", "Which species was the Belgian golfers belongs?", "Which species were the a Belgian golfer belonged?", "Which species were the Belgian golfers belonged?", "Which species were the a Belgian golfer belongs?", "Which species were the Belgian golfers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/Animal> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian human built?", "When was the Belgian humans built?", "When were the a Belgian human built?", "When were the Belgian humans built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/beginningDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golfer built?", "When was the Belgian golfers built?", "When were the a Belgian golfer built?", "When were the Belgian golfers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/beginningDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Aaron Burr?", "Tell me the Alma Mater of Aaron Burr?", "What is the Alma Mater of Aaron Burr?", "What was the Alma Mater of Aaron Burr?", "Which university is the Alma Mater of Aaron Burr?", "Which university was the Alma Mater of Aaron Burr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Burr> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Abbie Hoffman?", "Tell me the Alma Mater of Abbie Hoffman?", "What is the Alma Mater of Abbie Hoffman?", "What was the Alma Mater of Abbie Hoffman?", "Which university is the Alma Mater of Abbie Hoffman?", "Which university was the Alma Mater of Abbie Hoffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abbie_Hoffman> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Abraham Robinson?", "Tell me the Alma Mater of Abraham Robinson?", "What is the Alma Mater of Abraham Robinson?", "What was the Alma Mater of Abraham Robinson?", "Which university is the Alma Mater of Abraham Robinson?", "Which university was the Alma Mater of Abraham Robinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_Robinson> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Abraham de Moivre?", "Tell me the Alma Mater of Abraham de Moivre?", "What is the Alma Mater of Abraham de Moivre?", "What was the Alma Mater of Abraham de Moivre?", "Which university is the Alma Mater of Abraham de Moivre?", "Which university was the Alma Mater of Abraham de Moivre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_de_Moivre> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Adi Shamir?", "Tell me the Alma Mater of Adi Shamir?", "What is the Alma Mater of Adi Shamir?", "What was the Alma Mater of Adi Shamir?", "Which university is the Alma Mater of Adi Shamir?", "Which university was the Alma Mater of Adi Shamir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adi_Shamir> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Adlai Stevenson II?", "Tell me the Alma Mater of Adlai Stevenson II?", "What is the Alma Mater of Adlai Stevenson II?", "What was the Alma Mater of Adlai Stevenson II?", "Which university is the Alma Mater of Adlai Stevenson II?", "Which university was the Alma Mater of Adlai Stevenson II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adlai_Stevenson_II> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Adrien-Marie Legendre?", "Tell me the Alma Mater of Adrien-Marie Legendre?", "What is the Alma Mater of Adrien-Marie Legendre?", "What was the Alma Mater of Adrien-Marie Legendre?", "Which university is the Alma Mater of Adrien-Marie Legendre?", "Which university was the Alma Mater of Adrien-Marie Legendre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrien-Marie_Legendre> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Al Pacino?", "Tell me the Alma Mater of Al Pacino?", "What is the Alma Mater of Al Pacino?", "What was the Alma Mater of Al Pacino?", "Which university is the Alma Mater of Al Pacino?", "Which university was the Alma Mater of Al Pacino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Al_Pacino> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alan Rickman?", "Tell me the Alma Mater of Alan Rickman?", "What is the Alma Mater of Alan Rickman?", "What was the Alma Mater of Alan Rickman?", "Which university is the Alma Mater of Alan Rickman?", "Which university was the Alma Mater of Alan Rickman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alan_Rickman> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Albert Brudzewski?", "Tell me the Alma Mater of Albert Brudzewski?", "What is the Alma Mater of Albert Brudzewski?", "What was the Alma Mater of Albert Brudzewski?", "Which university is the Alma Mater of Albert Brudzewski?", "Which university was the Alma Mater of Albert Brudzewski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Brudzewski> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alec Jeffreys?", "Tell me the Alma Mater of Alec Jeffreys?", "What is the Alma Mater of Alec Jeffreys?", "What was the Alma Mater of Alec Jeffreys?", "Which university is the Alma Mater of Alec Jeffreys?", "Which university was the Alma Mater of Alec Jeffreys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alec_Jeffreys> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alexander Shulgin?", "Tell me the Alma Mater of Alexander Shulgin?", "What is the Alma Mater of Alexander Shulgin?", "What was the Alma Mater of Alexander Shulgin?", "Which university is the Alma Mater of Alexander Shulgin?", "Which university was the Alma Mater of Alexander Shulgin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Shulgin> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alfred Kinsey?", "Tell me the Alma Mater of Alfred Kinsey?", "What is the Alma Mater of Alfred Kinsey?", "What was the Alma Mater of Alfred Kinsey?", "Which university is the Alma Mater of Alfred Kinsey?", "Which university was the Alma Mater of Alfred Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Kinsey> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alfred Marshall?", "Tell me the Alma Mater of Alfred Marshall?", "What is the Alma Mater of Alfred Marshall?", "What was the Alma Mater of Alfred Marshall?", "Which university is the Alma Mater of Alfred Marshall?", "Which university was the Alma Mater of Alfred Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Marshall> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alfred Rosenberg?", "Tell me the Alma Mater of Alfred Rosenberg?", "What is the Alma Mater of Alfred Rosenberg?", "What was the Alma Mater of Alfred Rosenberg?", "Which university is the Alma Mater of Alfred Rosenberg?", "Which university was the Alma Mater of Alfred Rosenberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Rosenberg> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alonzo Church?", "Tell me the Alma Mater of Alonzo Church?", "What is the Alma Mater of Alonzo Church?", "What was the Alma Mater of Alonzo Church?", "Which university is the Alma Mater of Alonzo Church?", "Which university was the Alma Mater of Alonzo Church?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alonzo_Church> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Alyson Hannigan?", "Tell me the Alma Mater of Alyson Hannigan?", "What is the Alma Mater of Alyson Hannigan?", "What was the Alma Mater of Alyson Hannigan?", "Which university is the Alma Mater of Alyson Hannigan?", "Which university was the Alma Mater of Alyson Hannigan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alyson_Hannigan> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Amartya Sen?", "Tell me the Alma Mater of Amartya Sen?", "What is the Alma Mater of Amartya Sen?", "What was the Alma Mater of Amartya Sen?", "Which university is the Alma Mater of Amartya Sen?", "Which university was the Alma Mater of Amartya Sen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Amartya_Sen> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Amy Tan?", "Tell me the Alma Mater of Amy Tan?", "What is the Alma Mater of Amy Tan?", "What was the Alma Mater of Amy Tan?", "Which university is the Alma Mater of Amy Tan?", "Which university was the Alma Mater of Amy Tan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Amy_Tan> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Andreas Vesalius?", "Tell me the Alma Mater of Andreas Vesalius?", "What is the Alma Mater of Andreas Vesalius?", "What was the Alma Mater of Andreas Vesalius?", "Which university is the Alma Mater of Andreas Vesalius?", "Which university was the Alma Mater of Andreas Vesalius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andreas_Vesalius> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Andrew Inglis Clark?", "Tell me the Alma Mater of Andrew Inglis Clark?", "What is the Alma Mater of Andrew Inglis Clark?", "What was the Alma Mater of Andrew Inglis Clark?", "Which university is the Alma Mater of Andrew Inglis Clark?", "Which university was the Alma Mater of Andrew Inglis Clark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andrew_Inglis_Clark> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Andrew Lloyd Webber?", "Tell me the Alma Mater of Andrew Lloyd Webber?", "What is the Alma Mater of Andrew Lloyd Webber?", "What was the Alma Mater of Andrew Lloyd Webber?", "Which university is the Alma Mater of Andrew Lloyd Webber?", "Which university was the Alma Mater of Andrew Lloyd Webber?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andrew_Lloyd_Webber> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Angela Davis?", "Tell me the Alma Mater of Angela Davis?", "What is the Alma Mater of Angela Davis?", "What was the Alma Mater of Angela Davis?", "Which university is the Alma Mater of Angela Davis?", "Which university was the Alma Mater of Angela Davis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Angela_Davis> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Anthony Burgess?", "Tell me the Alma Mater of Anthony Burgess?", "What is the Alma Mater of Anthony Burgess?", "What was the Alma Mater of Anthony Burgess?", "Which university is the Alma Mater of Anthony Burgess?", "Which university was the Alma Mater of Anthony Burgess?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anthony_Burgess> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Anthony Zinni?", "Tell me the Alma Mater of Anthony Zinni?", "What is the Alma Mater of Anthony Zinni?", "What was the Alma Mater of Anthony Zinni?", "Which university is the Alma Mater of Anthony Zinni?", "Which university was the Alma Mater of Anthony Zinni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anthony_Zinni> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Anwar Sadat?", "Tell me the Alma Mater of Anwar Sadat?", "What is the Alma Mater of Anwar Sadat?", "What was the Alma Mater of Anwar Sadat?", "Which university is the Alma Mater of Anwar Sadat?", "Which university was the Alma Mater of Anwar Sadat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anwar_Sadat> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Aristid Lindenmayer?", "Tell me the Alma Mater of Aristid Lindenmayer?", "What is the Alma Mater of Aristid Lindenmayer?", "What was the Alma Mater of Aristid Lindenmayer?", "Which university is the Alma Mater of Aristid Lindenmayer?", "Which university was the Alma Mater of Aristid Lindenmayer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aristid_Lindenmayer> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Arthur Evans?", "Tell me the Alma Mater of Arthur Evans?", "What is the Alma Mater of Arthur Evans?", "What was the Alma Mater of Arthur Evans?", "Which university is the Alma Mater of Arthur Evans?", "Which university was the Alma Mater of Arthur Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arthur_Evans> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of August Ferdinand Möbius?", "Tell me the Alma Mater of August Ferdinand Möbius?", "What is the Alma Mater of August Ferdinand Möbius?", "What was the Alma Mater of August Ferdinand Möbius?", "Which university is the Alma Mater of August Ferdinand Möbius?", "Which university was the Alma Mater of August Ferdinand Möbius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/August_Ferdinand_Möbius> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Ava Gardner?", "Tell me the Alma Mater of Ava Gardner?", "What is the Alma Mater of Ava Gardner?", "What was the Alma Mater of Ava Gardner?", "Which university is the Alma Mater of Ava Gardner?", "Which university was the Alma Mater of Ava Gardner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ava_Gardner> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Barbara McClintock?", "Tell me the Alma Mater of Barbara McClintock?", "What is the Alma Mater of Barbara McClintock?", "What was the Alma Mater of Barbara McClintock?", "Which university is the Alma Mater of Barbara McClintock?", "Which university was the Alma Mater of Barbara McClintock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Barbara_McClintock> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Benjamin Netanyahu?", "Tell me the Alma Mater of Benjamin Netanyahu?", "What is the Alma Mater of Benjamin Netanyahu?", "What was the Alma Mater of Benjamin Netanyahu?", "Which university is the Alma Mater of Benjamin Netanyahu?", "Which university was the Alma Mater of Benjamin Netanyahu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Benjamin_Netanyahu> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Benjamin Spock?", "Tell me the Alma Mater of Benjamin Spock?", "What is the Alma Mater of Benjamin Spock?", "What was the Alma Mater of Benjamin Spock?", "Which university is the Alma Mater of Benjamin Spock?", "Which university was the Alma Mater of Benjamin Spock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Benjamin_Spock> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Bob Dole?", "Tell me the Alma Mater of Bob Dole?", "What is the Alma Mater of Bob Dole?", "What was the Alma Mater of Bob Dole?", "Which university is the Alma Mater of Bob Dole?", "Which university was the Alma Mater of Bob Dole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bob_Dole> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Bob Keeshan?", "Tell me the Alma Mater of Bob Keeshan?", "What is the Alma Mater of Bob Keeshan?", "What was the Alma Mater of Bob Keeshan?", "Which university is the Alma Mater of Bob Keeshan?", "Which university was the Alma Mater of Bob Keeshan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bob_Keeshan> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Booker T. Washington?", "Tell me the Alma Mater of Booker T. Washington?", "What is the Alma Mater of Booker T. Washington?", "What was the Alma Mater of Booker T. Washington?", "Which university is the Alma Mater of Booker T. Washington?", "Which university was the Alma Mater of Booker T. Washington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Booker_T._Washington> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Bruce Schneier?", "Tell me the Alma Mater of Bruce Schneier?", "What is the Alma Mater of Bruce Schneier?", "What was the Alma Mater of Bruce Schneier?", "Which university is the Alma Mater of Bruce Schneier?", "Which university was the Alma Mater of Bruce Schneier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bruce_Schneier> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Byron White?", "Tell me the Alma Mater of Byron White?", "What is the Alma Mater of Byron White?", "What was the Alma Mater of Byron White?", "Which university is the Alma Mater of Byron White?", "Which university was the Alma Mater of Byron White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Byron_White> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Camillo Golgi?", "Tell me the Alma Mater of Camillo Golgi?", "What is the Alma Mater of Camillo Golgi?", "What was the Alma Mater of Camillo Golgi?", "Which university is the Alma Mater of Camillo Golgi?", "Which university was the Alma Mater of Camillo Golgi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Camillo_Golgi> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Carl Bildt?", "Tell me the Alma Mater of Carl Bildt?", "What is the Alma Mater of Carl Bildt?", "What was the Alma Mater of Carl Bildt?", "Which university is the Alma Mater of Carl Bildt?", "Which university was the Alma Mater of Carl Bildt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carl_Bildt> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Carl Sandburg?", "Tell me the Alma Mater of Carl Sandburg?", "What is the Alma Mater of Carl Sandburg?", "What was the Alma Mater of Carl Sandburg?", "Which university is the Alma Mater of Carl Sandburg?", "Which university was the Alma Mater of Carl Sandburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carl_Sandburg> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Carl Woese?", "Tell me the Alma Mater of Carl Woese?", "What is the Alma Mater of Carl Woese?", "What was the Alma Mater of Carl Woese?", "Which university is the Alma Mater of Carl Woese?", "Which university was the Alma Mater of Carl Woese?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carl_Woese> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Carlo Rubbia?", "Tell me the Alma Mater of Carlo Rubbia?", "What is the Alma Mater of Carlo Rubbia?", "What was the Alma Mater of Carlo Rubbia?", "Which university is the Alma Mater of Carlo Rubbia?", "Which university was the Alma Mater of Carlo Rubbia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carlo_Rubbia> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Casimir Funk?", "Tell me the Alma Mater of Casimir Funk?", "What is the Alma Mater of Casimir Funk?", "What was the Alma Mater of Casimir Funk?", "Which university is the Alma Mater of Casimir Funk?", "Which university was the Alma Mater of Casimir Funk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Casimir_Funk> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Chandra Levy?", "Tell me the Alma Mater of Chandra Levy?", "What is the Alma Mater of Chandra Levy?", "What was the Alma Mater of Chandra Levy?", "Which university is the Alma Mater of Chandra Levy?", "Which university was the Alma Mater of Chandra Levy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chandra_Levy> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Charles K. Kao?", "Tell me the Alma Mater of Charles K. Kao?", "What is the Alma Mater of Charles K. Kao?", "What was the Alma Mater of Charles K. Kao?", "Which university is the Alma Mater of Charles K. Kao?", "Which university was the Alma Mater of Charles K. Kao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_K._Kao> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Charles Maurice de Talleyrand-Périgord?", "Tell me the Alma Mater of Charles Maurice de Talleyrand-Périgord?", "What is the Alma Mater of Charles Maurice de Talleyrand-Périgord?", "What was the Alma Mater of Charles Maurice de Talleyrand-Périgord?", "Which university is the Alma Mater of Charles Maurice de Talleyrand-Périgord?", "Which university was the Alma Mater of Charles Maurice de Talleyrand-Périgord?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_Maurice_de_Talleyrand-Périgord> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Charlton Heston?", "Tell me the Alma Mater of Charlton Heston?", "What is the Alma Mater of Charlton Heston?", "What was the Alma Mater of Charlton Heston?", "Which university is the Alma Mater of Charlton Heston?", "Which university was the Alma Mater of Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charlton_Heston> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Chen Shui-bian?", "Tell me the Alma Mater of Chen Shui-bian?", "What is the Alma Mater of Chen Shui-bian?", "What was the Alma Mater of Chen Shui-bian?", "Which university is the Alma Mater of Chen Shui-bian?", "Which university was the Alma Mater of Chen Shui-bian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chen_Shui-bian> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Christiaan Huygens?", "Tell me the Alma Mater of Christiaan Huygens?", "What is the Alma Mater of Christiaan Huygens?", "What was the Alma Mater of Christiaan Huygens?", "Which university is the Alma Mater of Christiaan Huygens?", "Which university was the Alma Mater of Christiaan Huygens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christiaan_Huygens> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Christopher Evans (computer scientist)?", "Tell me the Alma Mater of Christopher Evans (computer scientist)?", "What is the Alma Mater of Christopher Evans (computer scientist)?", "What was the Alma Mater of Christopher Evans (computer scientist)?", "Which university is the Alma Mater of Christopher Evans (computer scientist)?", "Which university was the Alma Mater of Christopher Evans (computer scientist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christopher_Evans_(computer_scientist)> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Christopher Tolkien?", "Tell me the Alma Mater of Christopher Tolkien?", "What is the Alma Mater of Christopher Tolkien?", "What was the Alma Mater of Christopher Tolkien?", "Which university is the Alma Mater of Christopher Tolkien?", "Which university was the Alma Mater of Christopher Tolkien?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christopher_Tolkien> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Christopher Wren?", "Tell me the Alma Mater of Christopher Wren?", "What is the Alma Mater of Christopher Wren?", "What was the Alma Mater of Christopher Wren?", "Which university is the Alma Mater of Christopher Wren?", "Which university was the Alma Mater of Christopher Wren?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christopher_Wren> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?", "Tell me the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?", "What is the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?", "What was the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?", "Which university is the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?", "Which university was the Alma Mater of Colin Renfrew, Baron Renfrew of Kaimsthorn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Colin_Renfrew,_Baron_Renfrew_of_Kaimsthorn> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Daniel Bernoulli?", "Tell me the Alma Mater of Daniel Bernoulli?", "What is the Alma Mater of Daniel Bernoulli?", "What was the Alma Mater of Daniel Bernoulli?", "Which university is the Alma Mater of Daniel Bernoulli?", "Which university was the Alma Mater of Daniel Bernoulli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Daniel_Bernoulli> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of David Boies?", "Tell me the Alma Mater of David Boies?", "What is the Alma Mater of David Boies?", "What was the Alma Mater of David Boies?", "Which university is the Alma Mater of David Boies?", "Which university was the Alma Mater of David Boies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Boies> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of David Eddings?", "Tell me the Alma Mater of David Eddings?", "What is the Alma Mater of David Eddings?", "What was the Alma Mater of David Eddings?", "Which university is the Alma Mater of David Eddings?", "Which university was the Alma Mater of David Eddings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Eddings> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of David Foster Wallace?", "Tell me the Alma Mater of David Foster Wallace?", "What is the Alma Mater of David Foster Wallace?", "What was the Alma Mater of David Foster Wallace?", "Which university is the Alma Mater of David Foster Wallace?", "Which university was the Alma Mater of David Foster Wallace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Foster_Wallace> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of David Niven?", "Tell me the Alma Mater of David Niven?", "What is the Alma Mater of David Niven?", "What was the Alma Mater of David Niven?", "Which university is the Alma Mater of David Niven?", "Which university was the Alma Mater of David Niven?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Niven> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Edward Higgins White?", "Tell me the Alma Mater of Edward Higgins White?", "What is the Alma Mater of Edward Higgins White?", "What was the Alma Mater of Edward Higgins White?", "Which university is the Alma Mater of Edward Higgins White?", "Which university was the Alma Mater of Edward Higgins White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Edward_Higgins_White> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Edward Witten?", "Tell me the Alma Mater of Edward Witten?", "What is the Alma Mater of Edward Witten?", "What was the Alma Mater of Edward Witten?", "Which university is the Alma Mater of Edward Witten?", "Which university was the Alma Mater of Edward Witten?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Edward_Witten> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Elias Magnus Fries?", "Tell me the Alma Mater of Elias Magnus Fries?", "What is the Alma Mater of Elias Magnus Fries?", "What was the Alma Mater of Elias Magnus Fries?", "Which university is the Alma Mater of Elias Magnus Fries?", "Which university was the Alma Mater of Elias Magnus Fries?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elias_Magnus_Fries> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Enoch Powell?", "Tell me the Alma Mater of Enoch Powell?", "What is the Alma Mater of Enoch Powell?", "What was the Alma Mater of Enoch Powell?", "Which university is the Alma Mater of Enoch Powell?", "Which university was the Alma Mater of Enoch Powell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Enoch_Powell> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Eric Corley?", "Tell me the Alma Mater of Eric Corley?", "What is the Alma Mater of Eric Corley?", "What was the Alma Mater of Eric Corley?", "Which university is the Alma Mater of Eric Corley?", "Which university was the Alma Mater of Eric Corley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eric_Corley> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Eric Idle?", "Tell me the Alma Mater of Eric Idle?", "What is the Alma Mater of Eric Idle?", "What was the Alma Mater of Eric Idle?", "Which university is the Alma Mater of Eric Idle?", "Which university was the Alma Mater of Eric Idle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eric_Idle> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Eric Williams?", "Tell me the Alma Mater of Eric Williams?", "What is the Alma Mater of Eric Williams?", "What was the Alma Mater of Eric Williams?", "Which university is the Alma Mater of Eric Williams?", "Which university was the Alma Mater of Eric Williams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eric_Williams> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Ernest Hollings?", "Tell me the Alma Mater of Ernest Hollings?", "What is the Alma Mater of Ernest Hollings?", "What was the Alma Mater of Ernest Hollings?", "Which university is the Alma Mater of Ernest Hollings?", "Which university was the Alma Mater of Ernest Hollings?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ernest_Hollings> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Ernest Jones?", "Tell me the Alma Mater of Ernest Jones?", "What is the Alma Mater of Ernest Jones?", "What was the Alma Mater of Ernest Jones?", "Which university is the Alma Mater of Ernest Jones?", "Which university was the Alma Mater of Ernest Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ernest_Jones> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Eunice Kennedy Shriver?", "Tell me the Alma Mater of Eunice Kennedy Shriver?", "What is the Alma Mater of Eunice Kennedy Shriver?", "What was the Alma Mater of Eunice Kennedy Shriver?", "Which university is the Alma Mater of Eunice Kennedy Shriver?", "Which university was the Alma Mater of Eunice Kennedy Shriver?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eunice_Kennedy_Shriver> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Ewald Hering?", "Tell me the Alma Mater of Ewald Hering?", "What is the Alma Mater of Ewald Hering?", "What was the Alma Mater of Ewald Hering?", "Which university is the Alma Mater of Ewald Hering?", "Which university was the Alma Mater of Ewald Hering?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ewald_Hering> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Felix Klein?", "Tell me the Alma Mater of Felix Klein?", "What is the Alma Mater of Felix Klein?", "What was the Alma Mater of Felix Klein?", "Which university is the Alma Mater of Felix Klein?", "Which university was the Alma Mater of Felix Klein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Felix_Klein> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Francis Galton?", "Tell me the Alma Mater of Francis Galton?", "What is the Alma Mater of Francis Galton?", "What was the Alma Mater of Francis Galton?", "Which university is the Alma Mater of Francis Galton?", "Which university was the Alma Mater of Francis Galton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francis_Galton> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Franco Zeffirelli?", "Tell me the Alma Mater of Franco Zeffirelli?", "What is the Alma Mater of Franco Zeffirelli?", "What was the Alma Mater of Franco Zeffirelli?", "Which university is the Alma Mater of Franco Zeffirelli?", "Which university was the Alma Mater of Franco Zeffirelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Franco_Zeffirelli> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Frank Drake?", "Tell me the Alma Mater of Frank Drake?", "What is the Alma Mater of Frank Drake?", "What was the Alma Mater of Frank Drake?", "Which university is the Alma Mater of Frank Drake?", "Which university was the Alma Mater of Frank Drake?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frank_Drake> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Franz Mertens?", "Tell me the Alma Mater of Franz Mertens?", "What is the Alma Mater of Franz Mertens?", "What was the Alma Mater of Franz Mertens?", "Which university is the Alma Mater of Franz Mertens?", "Which university was the Alma Mater of Franz Mertens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Franz_Mertens> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of François Mitterrand?", "Tell me the Alma Mater of François Mitterrand?", "What is the Alma Mater of François Mitterrand?", "What was the Alma Mater of François Mitterrand?", "Which university is the Alma Mater of François Mitterrand?", "Which university was the Alma Mater of François Mitterrand?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/François_Mitterrand> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Fred Gwynne?", "Tell me the Alma Mater of Fred Gwynne?", "What is the Alma Mater of Fred Gwynne?", "What was the Alma Mater of Fred Gwynne?", "Which university is the Alma Mater of Fred Gwynne?", "Which university was the Alma Mater of Fred Gwynne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Fred_Gwynne> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Frederick Seitz?", "Tell me the Alma Mater of Frederick Seitz?", "What is the Alma Mater of Frederick Seitz?", "What was the Alma Mater of Frederick Seitz?", "Which university is the Alma Mater of Frederick Seitz?", "Which university was the Alma Mater of Frederick Seitz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frederick_Seitz> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Frederick Theodore Frelinghuysen?", "Tell me the Alma Mater of Frederick Theodore Frelinghuysen?", "What is the Alma Mater of Frederick Theodore Frelinghuysen?", "What was the Alma Mater of Frederick Theodore Frelinghuysen?", "Which university is the Alma Mater of Frederick Theodore Frelinghuysen?", "Which university was the Alma Mater of Frederick Theodore Frelinghuysen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frederick_Theodore_Frelinghuysen> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gary Becker?", "Tell me the Alma Mater of Gary Becker?", "What is the Alma Mater of Gary Becker?", "What was the Alma Mater of Gary Becker?", "Which university is the Alma Mater of Gary Becker?", "Which university was the Alma Mater of Gary Becker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gary_Becker> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gary Condit?", "Tell me the Alma Mater of Gary Condit?", "What is the Alma Mater of Gary Condit?", "What was the Alma Mater of Gary Condit?", "Which university is the Alma Mater of Gary Condit?", "Which university was the Alma Mater of Gary Condit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gary_Condit> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gary Cooper?", "Tell me the Alma Mater of Gary Cooper?", "What is the Alma Mater of Gary Cooper?", "What was the Alma Mater of Gary Cooper?", "Which university is the Alma Mater of Gary Cooper?", "Which university was the Alma Mater of Gary Cooper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gary_Cooper> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Georg Joachim Rheticus?", "Tell me the Alma Mater of Georg Joachim Rheticus?", "What is the Alma Mater of Georg Joachim Rheticus?", "What was the Alma Mater of Georg Joachim Rheticus?", "Which university is the Alma Mater of Georg Joachim Rheticus?", "Which university was the Alma Mater of Georg Joachim Rheticus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Georg_Joachim_Rheticus> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Georg Ohm?", "Tell me the Alma Mater of Georg Ohm?", "What is the Alma Mater of Georg Ohm?", "What was the Alma Mater of Georg Ohm?", "Which university is the Alma Mater of Georg Ohm?", "Which university was the Alma Mater of Georg Ohm?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Georg_Ohm> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of George Lakoff?", "Tell me the Alma Mater of George Lakoff?", "What is the Alma Mater of George Lakoff?", "What was the Alma Mater of George Lakoff?", "Which university is the Alma Mater of George Lakoff?", "Which university was the Alma Mater of George Lakoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Lakoff> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of George Marshall?", "Tell me the Alma Mater of George Marshall?", "What is the Alma Mater of George Marshall?", "What was the Alma Mater of George Marshall?", "Which university is the Alma Mater of George Marshall?", "Which university was the Alma Mater of George Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Marshall> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Georges-Eugène Haussmann?", "Tell me the Alma Mater of Georges-Eugène Haussmann?", "What is the Alma Mater of Georges-Eugène Haussmann?", "What was the Alma Mater of Georges-Eugène Haussmann?", "Which university is the Alma Mater of Georges-Eugène Haussmann?", "Which university was the Alma Mater of Georges-Eugène Haussmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Georges-Eugène_Haussmann> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gerard Kuiper?", "Tell me the Alma Mater of Gerard Kuiper?", "What is the Alma Mater of Gerard Kuiper?", "What was the Alma Mater of Gerard Kuiper?", "Which university is the Alma Mater of Gerard Kuiper?", "Which university was the Alma Mater of Gerard Kuiper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gerard_Kuiper> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gerhard Armauer Hansen?", "Tell me the Alma Mater of Gerhard Armauer Hansen?", "What is the Alma Mater of Gerhard Armauer Hansen?", "What was the Alma Mater of Gerhard Armauer Hansen?", "Which university is the Alma Mater of Gerhard Armauer Hansen?", "Which university was the Alma Mater of Gerhard Armauer Hansen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gerhard_Armauer_Hansen> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gerhard Gentzen?", "Tell me the Alma Mater of Gerhard Gentzen?", "What is the Alma Mater of Gerhard Gentzen?", "What was the Alma Mater of Gerhard Gentzen?", "Which university is the Alma Mater of Gerhard Gentzen?", "Which university was the Alma Mater of Gerhard Gentzen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gerhard_Gentzen> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gillian Anderson?", "Tell me the Alma Mater of Gillian Anderson?", "What is the Alma Mater of Gillian Anderson?", "What was the Alma Mater of Gillian Anderson?", "Which university is the Alma Mater of Gillian Anderson?", "Which university was the Alma Mater of Gillian Anderson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gillian_Anderson> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Glenn Close?", "Tell me the Alma Mater of Glenn Close?", "What is the Alma Mater of Glenn Close?", "What was the Alma Mater of Glenn Close?", "Which university is the Alma Mater of Glenn Close?", "Which university was the Alma Mater of Glenn Close?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glenn_Close> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Gus Hall?", "Tell me the Alma Mater of Gus Hall?", "What is the Alma Mater of Gus Hall?", "What was the Alma Mater of Gus Hall?", "Which university is the Alma Mater of Gus Hall?", "Which university was the Alma Mater of Gus Hall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gus_Hall> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Hans Janmaat?", "Tell me the Alma Mater of Hans Janmaat?", "What is the Alma Mater of Hans Janmaat?", "What was the Alma Mater of Hans Janmaat?", "Which university is the Alma Mater of Hans Janmaat?", "Which university was the Alma Mater of Hans Janmaat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hans_Janmaat> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Harold Washington?", "Tell me the Alma Mater of Harold Washington?", "What is the Alma Mater of Harold Washington?", "What was the Alma Mater of Harold Washington?", "Which university is the Alma Mater of Harold Washington?", "Which university was the Alma Mater of Harold Washington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Harold_Washington> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Haskell Curry?", "Tell me the Alma Mater of Haskell Curry?", "What is the Alma Mater of Haskell Curry?", "What was the Alma Mater of Haskell Curry?", "Which university is the Alma Mater of Haskell Curry?", "Which university was the Alma Mater of Haskell Curry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Haskell_Curry> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Heike Kamerlingh Onnes?", "Tell me the Alma Mater of Heike Kamerlingh Onnes?", "What is the Alma Mater of Heike Kamerlingh Onnes?", "What was the Alma Mater of Heike Kamerlingh Onnes?", "Which university is the Alma Mater of Heike Kamerlingh Onnes?", "Which university was the Alma Mater of Heike Kamerlingh Onnes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Heike_Kamerlingh_Onnes> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Helmut Kohl?", "Tell me the Alma Mater of Helmut Kohl?", "What is the Alma Mater of Helmut Kohl?", "What was the Alma Mater of Helmut Kohl?", "Which university is the Alma Mater of Helmut Kohl?", "Which university was the Alma Mater of Helmut Kohl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Helmut_Kohl> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Helmut Schmidt?", "Tell me the Alma Mater of Helmut Schmidt?", "What is the Alma Mater of Helmut Schmidt?", "What was the Alma Mater of Helmut Schmidt?", "Which university is the Alma Mater of Helmut Schmidt?", "Which university was the Alma Mater of Helmut Schmidt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Helmut_Schmidt> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "1",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of Henri Becquerel?", "Tell me the Alma Mater of Henri Becquerel?", "What is the Alma Mater of Henri Becquerel?", "What was the Alma Mater of Henri Becquerel?", "Which university is the Alma Mater of Henri Becquerel?", "Which university was the Alma Mater of Henri Becquerel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Henri_Becquerel> <http://dbpedia.org/ontology/almaMater> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Andreas Ekberg?", "Tell me the birth date of Andreas Ekberg?", "What is the birth date of Andreas Ekberg?", "What was the birth date of Andreas Ekberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andreas_Ekberg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Danilo Tognon?", "Tell me the birth date of Danilo Tognon?", "What is the birth date of Danilo Tognon?", "What was the birth date of Danilo Tognon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Danilo_Tognon> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Lorine Livington Pruette?", "Tell me the birth date of Lorine Livington Pruette?", "What is the birth date of Lorine Livington Pruette?", "What was the birth date of Lorine Livington Pruette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lorine_Livington_Pruette> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Megan Lawrence?", "Tell me the birth date of Megan Lawrence?", "What is the birth date of Megan Lawrence?", "What was the birth date of Megan Lawrence?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Megan_Lawrence> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Nikolaos Ventouras?", "Tell me the birth date of Nikolaos Ventouras?", "What is the birth date of Nikolaos Ventouras?", "What was the birth date of Nikolaos Ventouras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nikolaos_Ventouras> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Sani ol molk?", "Tell me the birth date of Sani ol molk?", "What is the birth date of Sani ol molk?", "What was the birth date of Sani ol molk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sani_ol_molk> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Siniša Žugić?", "Tell me the birth date of Siniša Žugić?", "What is the birth date of Siniša Žugić?", "What was the birth date of Siniša Žugić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Siniša_Žugić> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of William Bagot, 2nd Baron Bagot?", "Tell me the birth date of William Bagot, 2nd Baron Bagot?", "What is the birth date of William Bagot, 2nd Baron Bagot?", "What was the birth date of William Bagot, 2nd Baron Bagot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Bagot,_2nd_Baron_Bagot> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Witold Gerutto?", "Tell me the birth date of Witold Gerutto?", "What is the birth date of Witold Gerutto?", "What was the birth date of Witold Gerutto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Witold_Gerutto> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abdoullah Bamoussa?", "Tell me the birth date of Abdoullah Bamoussa?", "What is the birth date of Abdoullah Bamoussa?", "What was the birth date of Abdoullah Bamoussa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdoullah_Bamoussa> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abdul Waheed (field hockey)?", "Tell me the birth date of Abdul Waheed (field hockey)?", "What is the birth date of Abdul Waheed (field hockey)?", "What was the birth date of Abdul Waheed (field hockey)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdul_Waheed_(field_hockey)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abdulaziz Alshatti?", "Tell me the birth date of Abdulaziz Alshatti?", "What is the birth date of Abdulaziz Alshatti?", "What was the birth date of Abdulaziz Alshatti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdulaziz_Alshatti> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abdulrahman Al-Faihan?", "Tell me the birth date of Abdulrahman Al-Faihan?", "What is the birth date of Abdulrahman Al-Faihan?", "What was the birth date of Abdulrahman Al-Faihan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdulrahman_Al-Faihan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Ahmad Alafasi?", "Tell me the birth date of Ahmad Alafasi?", "What is the birth date of Ahmad Alafasi?", "What was the birth date of Ahmad Alafasi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ahmad_Alafasi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Anatoliy Abdula?", "Tell me the birth date of Anatoliy Abdula?", "What is the birth date of Anatoliy Abdula?", "What was the birth date of Anatoliy Abdula?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anatoliy_Abdula> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Antun Herceg?", "Tell me the birth date of Antun Herceg?", "What is the birth date of Antun Herceg?", "What was the birth date of Antun Herceg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Antun_Herceg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Astrit Hafizi?", "Tell me the birth date of Astrit Hafizi?", "What is the birth date of Astrit Hafizi?", "What was the birth date of Astrit Hafizi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Astrit_Hafizi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Bojan Pandžić?", "Tell me the birth date of Bojan Pandžić?", "What is the birth date of Bojan Pandžić?", "What was the birth date of Bojan Pandžić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bojan_Pandžić> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Briana Provancha?", "Tell me the birth date of Briana Provancha?", "What is the birth date of Briana Provancha?", "What was the birth date of Briana Provancha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Briana_Provancha> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Courtney Okolo?", "Tell me the birth date of Courtney Okolo?", "What is the birth date of Courtney Okolo?", "What was the birth date of Courtney Okolo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Courtney_Okolo> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Daryl Homer?", "Tell me the birth date of Daryl Homer?", "What is the birth date of Daryl Homer?", "What was the birth date of Daryl Homer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Daryl_Homer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Edward Ling?", "Tell me the birth date of Edward Ling?", "What is the birth date of Edward Ling?", "What was the birth date of Edward Ling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Edward_Ling> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Francesco Boffo?", "Tell me the birth date of Francesco Boffo?", "What is the birth date of Francesco Boffo?", "What was the birth date of Francesco Boffo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Boffo> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Francesco Brici?", "Tell me the birth date of Francesco Brici?", "What is the birth date of Francesco Brici?", "What was the birth date of Francesco Brici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Brici> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Franciszek Szymura?", "Tell me the birth date of Franciszek Szymura?", "What is the birth date of Franciszek Szymura?", "What was the birth date of Franciszek Szymura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Franciszek_Szymura> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Frano Vićan?", "Tell me the birth date of Frano Vićan?", "What is the birth date of Frano Vićan?", "What was the birth date of Frano Vićan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frano_Vićan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of George Sime?", "Tell me the birth date of George Sime?", "What is the birth date of George Sime?", "What was the birth date of George Sime?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Sime> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Giles Scott?", "Tell me the birth date of Giles Scott?", "What is the birth date of Giles Scott?", "What was the birth date of Giles Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Giles_Scott> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Giovan Francesco Buonamici?", "Tell me the birth date of Giovan Francesco Buonamici?", "What is the birth date of Giovan Francesco Buonamici?", "What was the birth date of Giovan Francesco Buonamici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Giovan_Francesco_Buonamici> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Grace McKenzie?", "Tell me the birth date of Grace McKenzie?", "What is the birth date of Grace McKenzie?", "What was the birth date of Grace McKenzie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grace_McKenzie> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Graham Dadds?", "Tell me the birth date of Graham Dadds?", "What is the birth date of Graham Dadds?", "What was the birth date of Graham Dadds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Graham_Dadds> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Hovhannes Avtandilyan?", "Tell me the birth date of Hovhannes Avtandilyan?", "What is the birth date of Hovhannes Avtandilyan?", "What was the birth date of Hovhannes Avtandilyan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hovhannes_Avtandilyan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Ilya Mokretsov?", "Tell me the birth date of Ilya Mokretsov?", "What is the birth date of Ilya Mokretsov?", "What was the birth date of Ilya Mokretsov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ilya_Mokretsov> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Jan Brumovský?", "Tell me the birth date of Jan Brumovský?", "What is the birth date of Jan Brumovský?", "What was the birth date of Jan Brumovský?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jan_Brumovský> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Kirstie Alora?", "Tell me the birth date of Kirstie Alora?", "What is the birth date of Kirstie Alora?", "What was the birth date of Kirstie Alora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirstie_Alora> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Lala Abdul Rashid?", "Tell me the birth date of Lala Abdul Rashid?", "What is the birth date of Lala Abdul Rashid?", "What was the birth date of Lala Abdul Rashid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lala_Abdul_Rashid> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Larry Hurtado?", "Tell me the birth date of Larry Hurtado?", "What is the birth date of Larry Hurtado?", "What was the birth date of Larry Hurtado?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Larry_Hurtado> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Luís Tinoco?", "Tell me the birth date of Luís Tinoco?", "What is the birth date of Luís Tinoco?", "What was the birth date of Luís Tinoco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luís_Tinoco> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Maximilien van Haaster?", "Tell me the birth date of Maximilien van Haaster?", "What is the birth date of Maximilien van Haaster?", "What was the birth date of Maximilien van Haaster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maximilien_van_Haaster> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Mohammed Al-Hakim?", "Tell me the birth date of Mohammed Al-Hakim?", "What is the birth date of Mohammed Al-Hakim?", "What was the birth date of Mohammed Al-Hakim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mohammed_Al-Hakim> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Monica Aksamit?", "Tell me the birth date of Monica Aksamit?", "What is the birth date of Monica Aksamit?", "What was the birth date of Monica Aksamit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Monica_Aksamit> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Murder of Carolyn Wasilewski?", "Tell me the birth date of Murder of Carolyn Wasilewski?", "What is the birth date of Murder of Carolyn Wasilewski?", "What was the birth date of Murder of Carolyn Wasilewski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Murder_of_Carolyn_Wasilewski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Norman Borrett?", "Tell me the birth date of Norman Borrett?", "What is the birth date of Norman Borrett?", "What was the birth date of Norman Borrett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Norman_Borrett> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Olena Kravatska?", "Tell me the birth date of Olena Kravatska?", "What is the birth date of Olena Kravatska?", "What was the birth date of Olena Kravatska?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Olena_Kravatska> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Philip Skell?", "Tell me the birth date of Philip Skell?", "What is the birth date of Philip Skell?", "What was the birth date of Philip Skell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Philip_Skell> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Pierre Moussette?", "Tell me the birth date of Pierre Moussette?", "What is the birth date of Pierre Moussette?", "What was the birth date of Pierre Moussette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pierre_Moussette> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Piotr Kochanowski?", "Tell me the birth date of Piotr Kochanowski?", "What is the birth date of Piotr Kochanowski?", "What was the birth date of Piotr Kochanowski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Piotr_Kochanowski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Robin Lindsay?", "Tell me the birth date of Robin Lindsay?", "What is the birth date of Robin Lindsay?", "What was the birth date of Robin Lindsay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robin_Lindsay> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Ruth Randall Edström?", "Tell me the birth date of Ruth Randall Edström?", "What is the birth date of Ruth Randall Edström?", "What was the birth date of Ruth Randall Edström?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruth_Randall_Edström> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Simon Lee Evans?", "Tell me the birth date of Simon Lee Evans?", "What is the birth date of Simon Lee Evans?", "What was the birth date of Simon Lee Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Simon_Lee_Evans> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Sybil Fane, Countess of Westmorland?", "Tell me the birth date of Sybil Fane, Countess of Westmorland?", "What is the birth date of Sybil Fane, Countess of Westmorland?", "What was the birth date of Sybil Fane, Countess of Westmorland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sybil_Fane,_Countess_of_Westmorland> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Tamirat Tola?", "Tell me the birth date of Tamirat Tola?", "What is the birth date of Tamirat Tola?", "What was the birth date of Tamirat Tola?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tamirat_Tola> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Yémi Apithy?", "Tell me the birth date of Yémi Apithy?", "What is the birth date of Yémi Apithy?", "What was the birth date of Yémi Apithy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Yémi_Apithy> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Domenico Marchiori?", "Tell me the birth date of Domenico Marchiori?", "What is the birth date of Domenico Marchiori?", "What was the birth date of Domenico Marchiori?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Domenico_Marchiori> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Piero Ruzzante?", "Tell me the birth date of Piero Ruzzante?", "What is the birth date of Piero Ruzzante?", "What was the birth date of Piero Ruzzante?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Piero_Ruzzante> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of A. C. Bhaktivedanta Swami Prabhupada?", "Tell me the birth date of A. C. Bhaktivedanta Swami Prabhupada?", "What is the birth date of A. C. Bhaktivedanta Swami Prabhupada?", "What was the birth date of A. C. Bhaktivedanta Swami Prabhupada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Bhaktivedanta_Swami_Prabhupada> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Aaron Burr?", "Tell me the birth date of Aaron Burr?", "What is the birth date of Aaron Burr?", "What was the birth date of Aaron Burr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Burr> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Aaron Copland?", "Tell me the birth date of Aaron Copland?", "What is the birth date of Aaron Copland?", "What was the birth date of Aaron Copland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Copland> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abbie Hoffman?", "Tell me the birth date of Abbie Hoffman?", "What is the birth date of Abbie Hoffman?", "What was the birth date of Abbie Hoffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abbie_Hoffman> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abraham Robinson?", "Tell me the birth date of Abraham Robinson?", "What is the birth date of Abraham Robinson?", "What was the birth date of Abraham Robinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_Robinson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Abraham de Moivre?", "Tell me the birth date of Abraham de Moivre?", "What is the birth date of Abraham de Moivre?", "What was the birth date of Abraham de Moivre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_de_Moivre> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adalbert of Magdeburg?", "Tell me the birth date of Adalbert of Magdeburg?", "What is the birth date of Adalbert of Magdeburg?", "What was the birth date of Adalbert of Magdeburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adalbert_of_Magdeburg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adam Oehlenschläger?", "Tell me the birth date of Adam Oehlenschläger?", "What is the birth date of Adam Oehlenschläger?", "What was the birth date of Adam Oehlenschläger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adam_Oehlenschläger> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adam Wiśniewski-Snerg?", "Tell me the birth date of Adam Wiśniewski-Snerg?", "What is the birth date of Adam Wiśniewski-Snerg?", "What was the birth date of Adam Wiśniewski-Snerg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adam_Wiśniewski-Snerg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adi Shamir?", "Tell me the birth date of Adi Shamir?", "What is the birth date of Adi Shamir?", "What was the birth date of Adi Shamir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adi_Shamir> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adlai Stevenson II?", "Tell me the birth date of Adlai Stevenson II?", "What is the birth date of Adlai Stevenson II?", "What was the birth date of Adlai Stevenson II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adlai_Stevenson_II> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adolf Loos?", "Tell me the birth date of Adolf Loos?", "What is the birth date of Adolf Loos?", "What was the birth date of Adolf Loos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adolf_Loos> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adrian and Natalia of Nicomedia?", "Tell me the birth date of Adrian and Natalia of Nicomedia?", "What is the birth date of Adrian and Natalia of Nicomedia?", "What was the birth date of Adrian and Natalia of Nicomedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrian_and_Natalia_of_Nicomedia> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adrien-Marie Legendre?", "Tell me the birth date of Adrien-Marie Legendre?", "What is the birth date of Adrien-Marie Legendre?", "What was the birth date of Adrien-Marie Legendre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrien-Marie_Legendre> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Adrienne Rich?", "Tell me the birth date of Adrienne Rich?", "What is the birth date of Adrienne Rich?", "What was the birth date of Adrienne Rich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrienne_Rich> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Akiko Yano?", "Tell me the birth date of Akiko Yano?", "What is the birth date of Akiko Yano?", "What was the birth date of Akiko Yano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Akiko_Yano> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Al Pacino?", "Tell me the birth date of Al Pacino?", "What is the birth date of Al Pacino?", "What was the birth date of Al Pacino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Al_Pacino> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alain Prost?", "Tell me the birth date of Alain Prost?", "What is the birth date of Alain Prost?", "What was the birth date of Alain Prost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alain_Prost> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alan Rickman?", "Tell me the birth date of Alan Rickman?", "What is the birth date of Alan Rickman?", "What was the birth date of Alan Rickman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alan_Rickman> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alan Shearer?", "Tell me the birth date of Alan Shearer?", "What is the birth date of Alan Shearer?", "What was the birth date of Alan Shearer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alan_Shearer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albert Abrams?", "Tell me the birth date of Albert Abrams?", "What is the birth date of Albert Abrams?", "What was the birth date of Albert Abrams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Abrams> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albert Brudzewski?", "Tell me the birth date of Albert Brudzewski?", "What is the birth date of Albert Brudzewski?", "What was the birth date of Albert Brudzewski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Brudzewski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albert Finney?", "Tell me the birth date of Albert Finney?", "What is the birth date of Albert Finney?", "What was the birth date of Albert Finney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Finney> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albrecht Giese?", "Tell me the birth date of Albrecht Giese?", "What is the birth date of Albrecht Giese?", "What was the birth date of Albrecht Giese?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albrecht_Giese> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albrecht III Achilles, Elector of Brandenburg?", "Tell me the birth date of Albrecht III Achilles, Elector of Brandenburg?", "What is the birth date of Albrecht III Achilles, Elector of Brandenburg?", "What was the birth date of Albrecht III Achilles, Elector of Brandenburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albrecht_III_Achilles,_Elector_of_Brandenburg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Albus Dumbledore?", "Tell me the birth date of Albus Dumbledore?", "What is the birth date of Albus Dumbledore?", "What was the birth date of Albus Dumbledore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albus_Dumbledore> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Aldo Rossi?", "Tell me the birth date of Aldo Rossi?", "What is the birth date of Aldo Rossi?", "What was the birth date of Aldo Rossi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aldo_Rossi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alec Jeffreys?", "Tell me the birth date of Alec Jeffreys?", "What is the birth date of Alec Jeffreys?", "What was the birth date of Alec Jeffreys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alec_Jeffreys> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alessandro Manzoni?", "Tell me the birth date of Alessandro Manzoni?", "What is the birth date of Alessandro Manzoni?", "What was the birth date of Alessandro Manzoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alessandro_Manzoni> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alex Cox?", "Tell me the birth date of Alex Cox?", "What is the birth date of Alex Cox?", "What was the birth date of Alex Cox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alex_Cox> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alex Ferguson?", "Tell me the birth date of Alex Ferguson?", "What is the birth date of Alex Ferguson?", "What was the birth date of Alex Ferguson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alex_Ferguson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alexander Dallas Bache?", "Tell me the birth date of Alexander Dallas Bache?", "What is the birth date of Alexander Dallas Bache?", "What was the birth date of Alexander Dallas Bache?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Dallas_Bache> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alexander Shulgin?", "Tell me the birth date of Alexander Shulgin?", "What is the birth date of Alexander Shulgin?", "What was the birth date of Alexander Shulgin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Shulgin> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alexander Trocchi?", "Tell me the birth date of Alexander Trocchi?", "What is the birth date of Alexander Trocchi?", "What was the birth date of Alexander Trocchi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Trocchi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alexandru Ioan Cuza?", "Tell me the birth date of Alexandru Ioan Cuza?", "What is the birth date of Alexandru Ioan Cuza?", "What was the birth date of Alexandru Ioan Cuza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexandru_Ioan_Cuza> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Bester?", "Tell me the birth date of Alfred Bester?", "What is the birth date of Alfred Bester?", "What was the birth date of Alfred Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Bester> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Jodl?", "Tell me the birth date of Alfred Jodl?", "What is the birth date of Alfred Jodl?", "What was the birth date of Alfred Jodl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Jodl> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Kinsey?", "Tell me the birth date of Alfred Kinsey?", "What is the birth date of Alfred Kinsey?", "What was the birth date of Alfred Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Kinsey> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Marshall?", "Tell me the birth date of Alfred Marshall?", "What is the birth date of Alfred Marshall?", "What was the birth date of Alfred Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Marshall> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Meyer?", "Tell me the birth date of Alfred Meyer?", "What is the birth date of Alfred Meyer?", "What was the birth date of Alfred Meyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Meyer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred North Whitehead?", "Tell me the birth date of Alfred North Whitehead?", "What is the birth date of Alfred North Whitehead?", "What was the birth date of Alfred North Whitehead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_North_Whitehead> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alfred Rosenberg?", "Tell me the birth date of Alfred Rosenberg?", "What is the birth date of Alfred Rosenberg?", "What was the birth date of Alfred Rosenberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Rosenberg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alice Miller (psychologist)?", "Tell me the birth date of Alice Miller (psychologist)?", "What is the birth date of Alice Miller (psychologist)?", "What was the birth date of Alice Miller (psychologist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alice_Miller_(psychologist)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Alice Walker?", "Tell me the birth date of Alice Walker?", "What is the birth date of Alice Walker?", "What was the birth date of Alice Walker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alice_Walker> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "3",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of Allan Pinkerton?", "Tell me the birth date of Allan Pinkerton?", "What is the birth date of Allan Pinkerton?", "What was the birth date of Allan Pinkerton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Allan_Pinkerton> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Allan Pinkerton?", "Tell me the occupation of Allan Pinkerton?", "What is the occupation of Allan Pinkerton?", "What was the occupation of Allan Pinkerton?", "Which person function is the occupation of Allan Pinkerton?", "Which person function was the occupation of Allan Pinkerton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Allan_Pinkerton> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Robert of Ketton?", "Tell me the occupation of Robert of Ketton?", "What is the occupation of Robert of Ketton?", "What was the occupation of Robert of Ketton?", "Which person function is the occupation of Robert of Ketton?", "Which person function was the occupation of Robert of Ketton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robert_of_Ketton> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Sergei Diaghilev?", "Tell me the occupation of Sergei Diaghilev?", "What is the occupation of Sergei Diaghilev?", "What was the occupation of Sergei Diaghilev?", "Which person function is the occupation of Sergei Diaghilev?", "Which person function was the occupation of Sergei Diaghilev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sergei_Diaghilev> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Thomas J. Watson?", "Tell me the occupation of Thomas J. Watson?", "What is the occupation of Thomas J. Watson?", "What was the occupation of Thomas J. Watson?", "Which person function is the occupation of Thomas J. Watson?", "Which person function was the occupation of Thomas J. Watson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Thomas_J._Watson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Tycho Brahe?", "Tell me the occupation of Tycho Brahe?", "What is the occupation of Tycho Brahe?", "What was the occupation of Tycho Brahe?", "Which person function is the occupation of Tycho Brahe?", "Which person function was the occupation of Tycho Brahe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tycho_Brahe> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of William Kennedy Dickson?", "Tell me the occupation of William Kennedy Dickson?", "What is the occupation of William Kennedy Dickson?", "What was the occupation of William Kennedy Dickson?", "Which person function is the occupation of William Kennedy Dickson?", "Which person function was the occupation of William Kennedy Dickson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Kennedy_Dickson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Buddy Noonan?", "Tell me the occupation of Buddy Noonan?", "What is the occupation of Buddy Noonan?", "What was the occupation of Buddy Noonan?", "Which person function is the occupation of Buddy Noonan?", "Which person function was the occupation of Buddy Noonan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Buddy_Noonan> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Dan Flynn (politician)?", "Tell me the occupation of Dan Flynn (politician)?", "What is the occupation of Dan Flynn (politician)?", "What was the occupation of Dan Flynn (politician)?", "Which person function is the occupation of Dan Flynn (politician)?", "Which person function was the occupation of Dan Flynn (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dan_Flynn_(politician)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of George Barnes (cinematographer)?", "Tell me the occupation of George Barnes (cinematographer)?", "What is the occupation of George Barnes (cinematographer)?", "What was the occupation of George Barnes (cinematographer)?", "Which person function is the occupation of George Barnes (cinematographer)?", "Which person function was the occupation of George Barnes (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Barnes_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Romano Albani?", "Tell me the occupation of Romano Albani?", "What is the occupation of Romano Albani?", "What was the occupation of Romano Albani?", "Which person function is the occupation of Romano Albani?", "Which person function was the occupation of Romano Albani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Romano_Albani> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Sven Nykvist?", "Tell me the occupation of Sven Nykvist?", "What is the occupation of Sven Nykvist?", "What was the occupation of Sven Nykvist?", "Which person function is the occupation of Sven Nykvist?", "Which person function was the occupation of Sven Nykvist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sven_Nykvist> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Alexander Witt?", "Tell me the occupation of Alexander Witt?", "What is the occupation of Alexander Witt?", "What was the occupation of Alexander Witt?", "Which person function is the occupation of Alexander Witt?", "Which person function was the occupation of Alexander Witt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Witt> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Alexander Yellen?", "Tell me the occupation of Alexander Yellen?", "What is the occupation of Alexander Yellen?", "What was the occupation of Alexander Yellen?", "Which person function is the occupation of Alexander Yellen?", "Which person function was the occupation of Alexander Yellen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Yellen> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ashok Kumar (cinematographer)?", "Tell me the occupation of Ashok Kumar (cinematographer)?", "What is the occupation of Ashok Kumar (cinematographer)?", "What was the occupation of Ashok Kumar (cinematographer)?", "Which person function is the occupation of Ashok Kumar (cinematographer)?", "Which person function was the occupation of Ashok Kumar (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ashok_Kumar_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Barry Ackroyd?", "Tell me the occupation of Barry Ackroyd?", "What is the occupation of Barry Ackroyd?", "What was the occupation of Barry Ackroyd?", "Which person function is the occupation of Barry Ackroyd?", "Which person function was the occupation of Barry Ackroyd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Barry_Ackroyd> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Beda Batka?", "Tell me the occupation of Beda Batka?", "What is the occupation of Beda Batka?", "What was the occupation of Beda Batka?", "Which person function is the occupation of Beda Batka?", "Which person function was the occupation of Beda Batka?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Beda_Batka> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ben Davis (cinematographer)?", "Tell me the occupation of Ben Davis (cinematographer)?", "What is the occupation of Ben Davis (cinematographer)?", "What was the occupation of Ben Davis (cinematographer)?", "Which person function is the occupation of Ben Davis (cinematographer)?", "Which person function was the occupation of Ben Davis (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ben_Davis_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Childe Wills?", "Tell me the occupation of Childe Wills?", "What is the occupation of Childe Wills?", "What was the occupation of Childe Wills?", "Which person function is the occupation of Childe Wills?", "Which person function was the occupation of Childe Wills?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Childe_Wills> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Dennis Smith (director)?", "Tell me the occupation of Dennis Smith (director)?", "What is the occupation of Dennis Smith (director)?", "What was the occupation of Dennis Smith (director)?", "Which person function is the occupation of Dennis Smith (director)?", "Which person function was the occupation of Dennis Smith (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dennis_Smith_(director)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of James Signorelli?", "Tell me the occupation of James Signorelli?", "What is the occupation of James Signorelli?", "What was the occupation of James Signorelli?", "Which person function is the occupation of James Signorelli?", "Which person function was the occupation of James Signorelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/James_Signorelli> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Jeeva (director)?", "Tell me the occupation of Jeeva (director)?", "What is the occupation of Jeeva (director)?", "What was the occupation of Jeeva (director)?", "Which person function is the occupation of Jeeva (director)?", "Which person function was the occupation of Jeeva (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jeeva_(director)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Jim Frazier (inventor)?", "Tell me the occupation of Jim Frazier (inventor)?", "What is the occupation of Jim Frazier (inventor)?", "What was the occupation of Jim Frazier (inventor)?", "Which person function is the occupation of Jim Frazier (inventor)?", "Which person function was the occupation of Jim Frazier (inventor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jim_Frazier_(inventor)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Joe A. Guerra?", "Tell me the occupation of Joe A. Guerra?", "What is the occupation of Joe A. Guerra?", "What was the occupation of Joe A. Guerra?", "Which person function is the occupation of Joe A. Guerra?", "Which person function was the occupation of Joe A. Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Joe_A._Guerra> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of John Mathieson (cinematographer)?", "Tell me the occupation of John Mathieson (cinematographer)?", "What is the occupation of John Mathieson (cinematographer)?", "What was the occupation of John Mathieson (cinematographer)?", "Which person function is the occupation of John Mathieson (cinematographer)?", "Which person function was the occupation of John Mathieson (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Mathieson_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Karl Hasselmann?", "Tell me the occupation of Karl Hasselmann?", "What is the occupation of Karl Hasselmann?", "What was the occupation of Karl Hasselmann?", "Which person function is the occupation of Karl Hasselmann?", "Which person function was the occupation of Karl Hasselmann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Karl_Hasselmann> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Kramer Morgenthau?", "Tell me the occupation of Kramer Morgenthau?", "What is the occupation of Kramer Morgenthau?", "What was the occupation of Kramer Morgenthau?", "Which person function is the occupation of Kramer Morgenthau?", "Which person function was the occupation of Kramer Morgenthau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kramer_Morgenthau> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of László Kovács (cinematographer)?", "Tell me the occupation of László Kovács (cinematographer)?", "What is the occupation of László Kovács (cinematographer)?", "What was the occupation of László Kovács (cinematographer)?", "Which person function is the occupation of László Kovács (cinematographer)?", "Which person function was the occupation of László Kovács (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/László_Kovács_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Major Ridge?", "Tell me the occupation of Major Ridge?", "What is the occupation of Major Ridge?", "What was the occupation of Major Ridge?", "Which person function is the occupation of Major Ridge?", "Which person function was the occupation of Major Ridge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Major_Ridge> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Michael Chapman (cinematographer)?", "Tell me the occupation of Michael Chapman (cinematographer)?", "What is the occupation of Michael Chapman (cinematographer)?", "What was the occupation of Michael Chapman (cinematographer)?", "Which person function is the occupation of Michael Chapman (cinematographer)?", "Which person function was the occupation of Michael Chapman (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Michael_Chapman_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Mutz Greenbaum?", "Tell me the occupation of Mutz Greenbaum?", "What is the occupation of Mutz Greenbaum?", "What was the occupation of Mutz Greenbaum?", "Which person function is the occupation of Mutz Greenbaum?", "Which person function was the occupation of Mutz Greenbaum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mutz_Greenbaum> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ralph Perlman?", "Tell me the occupation of Ralph Perlman?", "What is the occupation of Ralph Perlman?", "What was the occupation of Ralph Perlman?", "Which person function is the occupation of Ralph Perlman?", "Which person function was the occupation of Ralph Perlman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ralph_Perlman> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Robert Martin (cinematographer)?", "Tell me the occupation of Robert Martin (cinematographer)?", "What is the occupation of Robert Martin (cinematographer)?", "What was the occupation of Robert Martin (cinematographer)?", "Which person function is the occupation of Robert Martin (cinematographer)?", "Which person function was the occupation of Robert Martin (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robert_Martin_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Shelly Johnson (cinematographer)?", "Tell me the occupation of Shelly Johnson (cinematographer)?", "What is the occupation of Shelly Johnson (cinematographer)?", "What was the occupation of Shelly Johnson (cinematographer)?", "Which person function is the occupation of Shelly Johnson (cinematographer)?", "Which person function was the occupation of Shelly Johnson (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Shelly_Johnson_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Tetsuo Nagata?", "Tell me the occupation of Tetsuo Nagata?", "What is the occupation of Tetsuo Nagata?", "What was the occupation of Tetsuo Nagata?", "Which person function is the occupation of Tetsuo Nagata?", "Which person function was the occupation of Tetsuo Nagata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tetsuo_Nagata> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ubaldo Arata?", "Tell me the occupation of Ubaldo Arata?", "What is the occupation of Ubaldo Arata?", "What was the occupation of Ubaldo Arata?", "Which person function is the occupation of Ubaldo Arata?", "Which person function was the occupation of Ubaldo Arata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ubaldo_Arata> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Werner Brandes?", "Tell me the occupation of Werner Brandes?", "What is the occupation of Werner Brandes?", "What was the occupation of Werner Brandes?", "Which person function is the occupation of Werner Brandes?", "Which person function was the occupation of Werner Brandes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Werner_Brandes> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Oliver Stapleton?", "Tell me the occupation of Oliver Stapleton?", "What is the occupation of Oliver Stapleton?", "What was the occupation of Oliver Stapleton?", "Which person function is the occupation of Oliver Stapleton?", "Which person function was the occupation of Oliver Stapleton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Oliver_Stapleton> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Pirjo Honkasalo?", "Tell me the occupation of Pirjo Honkasalo?", "What is the occupation of Pirjo Honkasalo?", "What was the occupation of Pirjo Honkasalo?", "Which person function is the occupation of Pirjo Honkasalo?", "Which person function was the occupation of Pirjo Honkasalo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pirjo_Honkasalo> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Aaron Blabey?", "Tell me the occupation of Aaron Blabey?", "What is the occupation of Aaron Blabey?", "What was the occupation of Aaron Blabey?", "Which person function is the occupation of Aaron Blabey?", "Which person function was the occupation of Aaron Blabey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Blabey> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Amal Neerad?", "Tell me the occupation of Amal Neerad?", "What is the occupation of Amal Neerad?", "What was the occupation of Amal Neerad?", "Which person function is the occupation of Amal Neerad?", "Which person function was the occupation of Amal Neerad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Amal_Neerad> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Arash T. Riahi?", "Tell me the occupation of Arash T. Riahi?", "What is the occupation of Arash T. Riahi?", "What was the occupation of Arash T. Riahi?", "Which person function is the occupation of Arash T. Riahi?", "Which person function was the occupation of Arash T. Riahi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arash_T._Riahi> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Bill Adolph?", "Tell me the occupation of Bill Adolph?", "What is the occupation of Bill Adolph?", "What was the occupation of Bill Adolph?", "Which person function is the occupation of Bill Adolph?", "Which person function was the occupation of Bill Adolph?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bill_Adolph> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Bobby Mathieson?", "Tell me the occupation of Bobby Mathieson?", "What is the occupation of Bobby Mathieson?", "What was the occupation of Bobby Mathieson?", "Which person function is the occupation of Bobby Mathieson?", "Which person function was the occupation of Bobby Mathieson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bobby_Mathieson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Con Anima?", "Tell me the occupation of Con Anima?", "What is the occupation of Con Anima?", "What was the occupation of Con Anima?", "Which person function is the occupation of Con Anima?", "Which person function was the occupation of Con Anima?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Con_Anima> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Cynthia Wade?", "Tell me the occupation of Cynthia Wade?", "What is the occupation of Cynthia Wade?", "What was the occupation of Cynthia Wade?", "Which person function is the occupation of Cynthia Wade?", "Which person function was the occupation of Cynthia Wade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cynthia_Wade> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Heartland Men's Chorus?", "Tell me the occupation of Heartland Men's Chorus?", "What is the occupation of Heartland Men's Chorus?", "What was the occupation of Heartland Men's Chorus?", "Which person function is the occupation of Heartland Men's Chorus?", "Which person function was the occupation of Heartland Men's Chorus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Heartland_Men's_Chorus> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Kan Mukai?", "Tell me the occupation of Kan Mukai?", "What is the occupation of Kan Mukai?", "What was the occupation of Kan Mukai?", "Which person function is the occupation of Kan Mukai?", "Which person function was the occupation of Kan Mukai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kan_Mukai> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Kenyan Boys Choir?", "Tell me the occupation of Kenyan Boys Choir?", "What is the occupation of Kenyan Boys Choir?", "What was the occupation of Kenyan Boys Choir?", "Which person function is the occupation of Kenyan Boys Choir?", "Which person function was the occupation of Kenyan Boys Choir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kenyan_Boys_Choir> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Marhy?", "Tell me the occupation of Marhy?", "What is the occupation of Marhy?", "What was the occupation of Marhy?", "Which person function is the occupation of Marhy?", "Which person function was the occupation of Marhy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Marhy> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Neveldine/Taylor?", "Tell me the occupation of Neveldine/Taylor?", "What is the occupation of Neveldine/Taylor?", "What was the occupation of Neveldine/Taylor?", "Which person function is the occupation of Neveldine/Taylor?", "Which person function was the occupation of Neveldine/Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Neveldine/Taylor> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of R. Rathnavelu?", "Tell me the occupation of R. Rathnavelu?", "What is the occupation of R. Rathnavelu?", "What was the occupation of R. Rathnavelu?", "Which person function is the occupation of R. Rathnavelu?", "Which person function was the occupation of R. Rathnavelu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/R._Rathnavelu> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of RMIT Music?", "Tell me the occupation of RMIT Music?", "What is the occupation of RMIT Music?", "What was the occupation of RMIT Music?", "Which person function is the occupation of RMIT Music?", "Which person function was the occupation of RMIT Music?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/RMIT_Music> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of RTÉ Performing Groups?", "Tell me the occupation of RTÉ Performing Groups?", "What is the occupation of RTÉ Performing Groups?", "What was the occupation of RTÉ Performing Groups?", "Which person function is the occupation of RTÉ Performing Groups?", "Which person function was the occupation of RTÉ Performing Groups?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/RTÉ_Performing_Groups> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ragazzi Boys Chorus?", "Tell me the occupation of Ragazzi Boys Chorus?", "What is the occupation of Ragazzi Boys Chorus?", "What was the occupation of Ragazzi Boys Chorus?", "Which person function is the occupation of Ragazzi Boys Chorus?", "Which person function was the occupation of Ragazzi Boys Chorus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ragazzi_Boys_Chorus> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ruth Chew?", "Tell me the occupation of Ruth Chew?", "What is the occupation of Ruth Chew?", "What was the occupation of Ruth Chew?", "Which person function is the occupation of Ruth Chew?", "Which person function was the occupation of Ruth Chew?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruth_Chew> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Sunny Joseph?", "Tell me the occupation of Sunny Joseph?", "What is the occupation of Sunny Joseph?", "What was the occupation of Sunny Joseph?", "Which person function is the occupation of Sunny Joseph?", "Which person function was the occupation of Sunny Joseph?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sunny_Joseph> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Chuck Hopson?", "Tell me the occupation of Chuck Hopson?", "What is the occupation of Chuck Hopson?", "What was the occupation of Chuck Hopson?", "Which person function is the occupation of Chuck Hopson?", "Which person function was the occupation of Chuck Hopson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chuck_Hopson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of John Behring?", "Tell me the occupation of John Behring?", "What is the occupation of John Behring?", "What was the occupation of John Behring?", "Which person function is the occupation of John Behring?", "Which person function was the occupation of John Behring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Behring> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Bill Myrick?", "Tell me the occupation of Bill Myrick?", "What is the occupation of Bill Myrick?", "What was the occupation of Bill Myrick?", "Which person function is the occupation of Bill Myrick?", "Which person function was the occupation of Bill Myrick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bill_Myrick> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Charles Riley?", "Tell me the occupation of Charles Riley?", "What is the occupation of Charles Riley?", "What was the occupation of Charles Riley?", "Which person function is the occupation of Charles Riley?", "Which person function was the occupation of Charles Riley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_Riley> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Dave McCann (Canadian football)?", "Tell me the occupation of Dave McCann (Canadian football)?", "What is the occupation of Dave McCann (Canadian football)?", "What was the occupation of Dave McCann (Canadian football)?", "Which person function is the occupation of Dave McCann (Canadian football)?", "Which person function was the occupation of Dave McCann (Canadian football)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dave_McCann_(Canadian_football)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of David Worth (cinematographer)?", "Tell me the occupation of David Worth (cinematographer)?", "What is the occupation of David Worth (cinematographer)?", "What was the occupation of David Worth (cinematographer)?", "Which person function is the occupation of David Worth (cinematographer)?", "Which person function was the occupation of David Worth (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Worth_(cinematographer)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ed Price (Louisiana politician)?", "Tell me the occupation of Ed Price (Louisiana politician)?", "What is the occupation of Ed Price (Louisiana politician)?", "What was the occupation of Ed Price (Louisiana politician)?", "Which person function is the occupation of Ed Price (Louisiana politician)?", "Which person function was the occupation of Ed Price (Louisiana politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ed_Price_(Louisiana_politician)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Frederick McEvoy?", "Tell me the occupation of Frederick McEvoy?", "What is the occupation of Frederick McEvoy?", "What was the occupation of Frederick McEvoy?", "Which person function is the occupation of Frederick McEvoy?", "Which person function was the occupation of Frederick McEvoy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frederick_McEvoy> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of James B. Shackelford?", "Tell me the occupation of James B. Shackelford?", "What is the occupation of James B. Shackelford?", "What was the occupation of James B. Shackelford?", "Which person function is the occupation of James B. Shackelford?", "Which person function was the occupation of James B. Shackelford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/James_B._Shackelford> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Jerry Huckaby?", "Tell me the occupation of Jerry Huckaby?", "What is the occupation of Jerry Huckaby?", "What was the occupation of Jerry Huckaby?", "Which person function is the occupation of Jerry Huckaby?", "Which person function was the occupation of Jerry Huckaby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jerry_Huckaby> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Jonathan Stickland?", "Tell me the occupation of Jonathan Stickland?", "What is the occupation of Jonathan Stickland?", "What was the occupation of Jonathan Stickland?", "Which person function is the occupation of Jonathan Stickland?", "Which person function was the occupation of Jonathan Stickland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jonathan_Stickland> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Markku Lehmuskallio?", "Tell me the occupation of Markku Lehmuskallio?", "What is the occupation of Markku Lehmuskallio?", "What was the occupation of Markku Lehmuskallio?", "Which person function is the occupation of Markku Lehmuskallio?", "Which person function was the occupation of Markku Lehmuskallio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Markku_Lehmuskallio> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Michael Gershman (director)?", "Tell me the occupation of Michael Gershman (director)?", "What is the occupation of Michael Gershman (director)?", "What was the occupation of Michael Gershman (director)?", "Which person function is the occupation of Michael Gershman (director)?", "Which person function was the occupation of Michael Gershman (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Michael_Gershman_(director)> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Owen Roizman?", "Tell me the occupation of Owen Roizman?", "What is the occupation of Owen Roizman?", "What was the occupation of Owen Roizman?", "Which person function is the occupation of Owen Roizman?", "Which person function was the occupation of Owen Roizman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Owen_Roizman> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Salvatore Totino?", "Tell me the occupation of Salvatore Totino?", "What is the occupation of Salvatore Totino?", "What was the occupation of Salvatore Totino?", "Which person function is the occupation of Salvatore Totino?", "Which person function was the occupation of Salvatore Totino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salvatore_Totino> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Thomas Welsby?", "Tell me the occupation of Thomas Welsby?", "What is the occupation of Thomas Welsby?", "What was the occupation of Thomas Welsby?", "Which person function is the occupation of Thomas Welsby?", "Which person function was the occupation of Thomas Welsby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Thomas_Welsby> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Victor Doerksen?", "Tell me the occupation of Victor Doerksen?", "What is the occupation of Victor Doerksen?", "What was the occupation of Victor Doerksen?", "Which person function is the occupation of Victor Doerksen?", "Which person function was the occupation of Victor Doerksen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Victor_Doerksen> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Osvaldo Benavides?", "Tell me the occupation of Osvaldo Benavides?", "What is the occupation of Osvaldo Benavides?", "What was the occupation of Osvaldo Benavides?", "Which person function is the occupation of Osvaldo Benavides?", "Which person function was the occupation of Osvaldo Benavides?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Osvaldo_Benavides> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Vijay C Chakravarthy?", "Tell me the occupation of Vijay C Chakravarthy?", "What is the occupation of Vijay C Chakravarthy?", "What was the occupation of Vijay C Chakravarthy?", "Which person function is the occupation of Vijay C Chakravarthy?", "Which person function was the occupation of Vijay C Chakravarthy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vijay_C_Chakravarthy> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Eduard Tisse?", "Tell me the occupation of Eduard Tisse?", "What is the occupation of Eduard Tisse?", "What was the occupation of Eduard Tisse?", "Which person function is the occupation of Eduard Tisse?", "Which person function was the occupation of Eduard Tisse?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eduard_Tisse> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Javier Aguirresarobe?", "Tell me the occupation of Javier Aguirresarobe?", "What is the occupation of Javier Aguirresarobe?", "What was the occupation of Javier Aguirresarobe?", "Which person function is the occupation of Javier Aguirresarobe?", "Which person function was the occupation of Javier Aguirresarobe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Javier_Aguirresarobe> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of O. H. Haynes Jr.?", "Tell me the occupation of O. H. Haynes Jr.?", "What is the occupation of O. H. Haynes Jr.?", "What was the occupation of O. H. Haynes Jr.?", "Which person function is the occupation of O. H. Haynes Jr.?", "Which person function was the occupation of O. H. Haynes Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/O._H._Haynes_Jr.> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Sandra Thompson?", "Tell me the occupation of Sandra Thompson?", "What is the occupation of Sandra Thompson?", "What was the occupation of Sandra Thompson?", "Which person function is the occupation of Sandra Thompson?", "Which person function was the occupation of Sandra Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sandra_Thompson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Charles E. Roemer, II?", "Tell me the occupation of Charles E. Roemer, II?", "What is the occupation of Charles E. Roemer, II?", "What was the occupation of Charles E. Roemer, II?", "Which person function is the occupation of Charles E. Roemer, II?", "Which person function was the occupation of Charles E. Roemer, II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_E._Roemer,_II> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of E L Short?", "Tell me the occupation of E L Short?", "What is the occupation of E L Short?", "What was the occupation of E L Short?", "Which person function is the occupation of E L Short?", "Which person function was the occupation of E L Short?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/E_L_Short> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of H. O. West?", "Tell me the occupation of H. O. West?", "What is the occupation of H. O. West?", "What was the occupation of H. O. West?", "Which person function is the occupation of H. O. West?", "Which person function was the occupation of H. O. West?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/H._O._West> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ada Mills?", "Tell me the occupation of Ada Mills?", "What is the occupation of Ada Mills?", "What was the occupation of Ada Mills?", "Which person function is the occupation of Ada Mills?", "Which person function was the occupation of Ada Mills?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ada_Mills> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Anjuli Shukla?", "Tell me the occupation of Anjuli Shukla?", "What is the occupation of Anjuli Shukla?", "What was the occupation of Anjuli Shukla?", "Which person function is the occupation of Anjuli Shukla?", "Which person function was the occupation of Anjuli Shukla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anjuli_Shukla> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of C. Hamilton Sanford?", "Tell me the occupation of C. Hamilton Sanford?", "What is the occupation of C. Hamilton Sanford?", "What was the occupation of C. Hamilton Sanford?", "Which person function is the occupation of C. Hamilton Sanford?", "Which person function was the occupation of C. Hamilton Sanford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/C._Hamilton_Sanford> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Fred Preaus?", "Tell me the occupation of Fred Preaus?", "What is the occupation of Fred Preaus?", "What was the occupation of Fred Preaus?", "Which person function is the occupation of Fred Preaus?", "Which person function was the occupation of Fred Preaus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Fred_Preaus> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Herbert H. Franklin?", "Tell me the occupation of Herbert H. Franklin?", "What is the occupation of Herbert H. Franklin?", "What was the occupation of Herbert H. Franklin?", "Which person function is the occupation of Herbert H. Franklin?", "Which person function was the occupation of Herbert H. Franklin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Herbert_H._Franklin> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Nurith Aviv?", "Tell me the occupation of Nurith Aviv?", "What is the occupation of Nurith Aviv?", "What was the occupation of Nurith Aviv?", "Which person function is the occupation of Nurith Aviv?", "Which person function was the occupation of Nurith Aviv?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nurith_Aviv> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Slobodan Trninić?", "Tell me the occupation of Slobodan Trninić?", "What is the occupation of Slobodan Trninić?", "What was the occupation of Slobodan Trninić?", "Which person function is the occupation of Slobodan Trninić?", "Which person function was the occupation of Slobodan Trninić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Slobodan_Trninić> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of W. Scott Wilkinson?", "Tell me the occupation of W. Scott Wilkinson?", "What is the occupation of W. Scott Wilkinson?", "What was the occupation of W. Scott Wilkinson?", "Which person function is the occupation of W. Scott Wilkinson?", "Which person function was the occupation of W. Scott Wilkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/W._Scott_Wilkinson> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Herbert Ponting?", "Tell me the occupation of Herbert Ponting?", "What is the occupation of Herbert Ponting?", "What was the occupation of Herbert Ponting?", "Which person function is the occupation of Herbert Ponting?", "Which person function was the occupation of Herbert Ponting?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Herbert_Ponting> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Laurel Snyder?", "Tell me the occupation of Laurel Snyder?", "What is the occupation of Laurel Snyder?", "What was the occupation of Laurel Snyder?", "Which person function is the occupation of Laurel Snyder?", "Which person function was the occupation of Laurel Snyder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Laurel_Snyder> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of San Francisco Symphony Chorus?", "Tell me the occupation of San Francisco Symphony Chorus?", "What is the occupation of San Francisco Symphony Chorus?", "What was the occupation of San Francisco Symphony Chorus?", "Which person function is the occupation of San Francisco Symphony Chorus?", "Which person function was the occupation of San Francisco Symphony Chorus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/San_Francisco_Symphony_Chorus> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Sion Sono?", "Tell me the occupation of Sion Sono?", "What is the occupation of Sion Sono?", "What was the occupation of Sion Sono?", "Which person function is the occupation of Sion Sono?", "Which person function was the occupation of Sion Sono?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sion_Sono> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Gay Men's Chorus of San Diego?", "Tell me the occupation of Gay Men's Chorus of San Diego?", "What is the occupation of Gay Men's Chorus of San Diego?", "What was the occupation of Gay Men's Chorus of San Diego?", "Which person function is the occupation of Gay Men's Chorus of San Diego?", "Which person function was the occupation of Gay Men's Chorus of San Diego?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gay_Men's_Chorus_of_San_Diego> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of John Ott?", "Tell me the occupation of John Ott?", "What is the occupation of John Ott?", "What was the occupation of John Ott?", "Which person function is the occupation of John Ott?", "Which person function was the occupation of John Ott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Ott> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of P. C. Sreeram?", "Tell me the occupation of P. C. Sreeram?", "What is the occupation of P. C. Sreeram?", "What was the occupation of P. C. Sreeram?", "Which person function is the occupation of P. C. Sreeram?", "Which person function was the occupation of P. C. Sreeram?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/P._C._Sreeram> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Ravi K. Chandran?", "Tell me the occupation of Ravi K. Chandran?", "What is the occupation of Ravi K. Chandran?", "What was the occupation of Ravi K. Chandran?", "Which person function is the occupation of Ravi K. Chandran?", "Which person function was the occupation of Ravi K. Chandran?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ravi_K._Chandran> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of San Francisco Boys Chorus?", "Tell me the occupation of San Francisco Boys Chorus?", "What is the occupation of San Francisco Boys Chorus?", "What was the occupation of San Francisco Boys Chorus?", "Which person function is the occupation of San Francisco Boys Chorus?", "Which person function was the occupation of San Francisco Boys Chorus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/San_Francisco_Boys_Chorus> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "5",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of Santosh Thundiyil?", "Tell me the occupation of Santosh Thundiyil?", "What is the occupation of Santosh Thundiyil?", "What was the occupation of Santosh Thundiyil?", "Which person function is the occupation of Santosh Thundiyil?", "Which person function was the occupation of Santosh Thundiyil?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Santosh_Thundiyil> <http://dbpedia.org/ontology/occupation> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Nikolaos Ventouras?", "Tell me the birth place of Nikolaos Ventouras?", "What is the birth place of Nikolaos Ventouras?", "What was the birth place of Nikolaos Ventouras?", "Which place is the birth place of Nikolaos Ventouras?", "Which place was the birth place of Nikolaos Ventouras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nikolaos_Ventouras> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Gregory of Tours?", "Tell me the birth place of Gregory of Tours?", "What is the birth place of Gregory of Tours?", "What was the birth place of Gregory of Tours?", "Which place is the birth place of Gregory of Tours?", "Which place was the birth place of Gregory of Tours?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gregory_of_Tours> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of John of the Cross?", "Tell me the birth place of John of the Cross?", "What is the birth place of John of the Cross?", "What was the birth place of John of the Cross?", "Which place is the birth place of John of the Cross?", "Which place was the birth place of John of the Cross?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_of_the_Cross> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Julius Nepos?", "Tell me the birth place of Julius Nepos?", "What is the birth place of Julius Nepos?", "What was the birth place of Julius Nepos?", "Which place is the birth place of Julius Nepos?", "Which place was the birth place of Julius Nepos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Julius_Nepos> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Libanius?", "Tell me the birth place of Libanius?", "What is the birth place of Libanius?", "What was the birth place of Libanius?", "Which place is the birth place of Libanius?", "Which place was the birth place of Libanius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Libanius> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Marien Ngouabi?", "Tell me the birth place of Marien Ngouabi?", "What is the birth place of Marien Ngouabi?", "What was the birth place of Marien Ngouabi?", "Which place is the birth place of Marien Ngouabi?", "Which place was the birth place of Marien Ngouabi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Marien_Ngouabi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Pascal Lissouba?", "Tell me the birth place of Pascal Lissouba?", "What is the birth place of Pascal Lissouba?", "What was the birth place of Pascal Lissouba?", "Which place is the birth place of Pascal Lissouba?", "Which place was the birth place of Pascal Lissouba?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pascal_Lissouba> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Seamus Heaney?", "Tell me the birth place of Seamus Heaney?", "What is the birth place of Seamus Heaney?", "What was the birth place of Seamus Heaney?", "Which place is the birth place of Seamus Heaney?", "Which place was the birth place of Seamus Heaney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Seamus_Heaney> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Shoghi Effendi?", "Tell me the birth place of Shoghi Effendi?", "What is the birth place of Shoghi Effendi?", "What was the birth place of Shoghi Effendi?", "Which place is the birth place of Shoghi Effendi?", "Which place was the birth place of Shoghi Effendi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Shoghi_Effendi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Theodoret?", "Tell me the birth place of Theodoret?", "What is the birth place of Theodoret?", "What was the birth place of Theodoret?", "Which place is the birth place of Theodoret?", "Which place was the birth place of Theodoret?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Theodoret> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Vercingetorix?", "Tell me the birth place of Vercingetorix?", "What is the birth place of Vercingetorix?", "What was the birth place of Vercingetorix?", "Which place is the birth place of Vercingetorix?", "Which place was the birth place of Vercingetorix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vercingetorix> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of David Daniell (musician)?", "Tell me the birth place of David Daniell (musician)?", "What is the birth place of David Daniell (musician)?", "What was the birth place of David Daniell (musician)?", "Which place is the birth place of David Daniell (musician)?", "Which place was the birth place of David Daniell (musician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Daniell_(musician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of James Fannin?", "Tell me the birth place of James Fannin?", "What is the birth place of James Fannin?", "What was the birth place of James Fannin?", "Which place is the birth place of James Fannin?", "Which place was the birth place of James Fannin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/James_Fannin> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ash Brannon?", "Tell me the birth place of Ash Brannon?", "What is the birth place of Ash Brannon?", "What was the birth place of Ash Brannon?", "Which place is the birth place of Ash Brannon?", "Which place was the birth place of Ash Brannon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ash_Brannon> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Barry Loudermilk?", "Tell me the birth place of Barry Loudermilk?", "What is the birth place of Barry Loudermilk?", "What was the birth place of Barry Loudermilk?", "Which place is the birth place of Barry Loudermilk?", "Which place was the birth place of Barry Loudermilk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Barry_Loudermilk> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Caroline Sunshine?", "Tell me the birth place of Caroline Sunshine?", "What is the birth place of Caroline Sunshine?", "What was the birth place of Caroline Sunshine?", "Which place is the birth place of Caroline Sunshine?", "Which place was the birth place of Caroline Sunshine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Caroline_Sunshine> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of David Dickson (politician)?", "Tell me the birth place of David Dickson (politician)?", "What is the birth place of David Dickson (politician)?", "What was the birth place of David Dickson (politician)?", "Which place is the birth place of David Dickson (politician)?", "Which place was the birth place of David Dickson (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Dickson_(politician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Diviciacus (Suessiones)?", "Tell me the birth place of Diviciacus (Suessiones)?", "What is the birth place of Diviciacus (Suessiones)?", "What was the birth place of Diviciacus (Suessiones)?", "Which place is the birth place of Diviciacus (Suessiones)?", "Which place was the birth place of Diviciacus (Suessiones)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Diviciacus_(Suessiones)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Eduardo De Filippo?", "Tell me the birth place of Eduardo De Filippo?", "What is the birth place of Eduardo De Filippo?", "What was the birth place of Eduardo De Filippo?", "Which place is the birth place of Eduardo De Filippo?", "Which place was the birth place of Eduardo De Filippo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eduardo_De_Filippo> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Eric Nam?", "Tell me the birth place of Eric Nam?", "What is the birth place of Eric Nam?", "What was the birth place of Eric Nam?", "Which place is the birth place of Eric Nam?", "Which place was the birth place of Eric Nam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eric_Nam> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Erle Cocke, Jr.?", "Tell me the birth place of Erle Cocke, Jr.?", "What is the birth place of Erle Cocke, Jr.?", "What was the birth place of Erle Cocke, Jr.?", "Which place is the birth place of Erle Cocke, Jr.?", "Which place was the birth place of Erle Cocke, Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Erle_Cocke,_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Francesco Cozza (painter)?", "Tell me the birth place of Francesco Cozza (painter)?", "What is the birth place of Francesco Cozza (painter)?", "What was the birth place of Francesco Cozza (painter)?", "Which place is the birth place of Francesco Cozza (painter)?", "Which place was the birth place of Francesco Cozza (painter)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Cozza_(painter)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Francesco Laurana?", "Tell me the birth place of Francesco Laurana?", "What is the birth place of Francesco Laurana?", "What was the birth place of Francesco Laurana?", "Which place is the birth place of Francesco Laurana?", "Which place was the birth place of Francesco Laurana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Laurana> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Henry Johnson (American football)?", "Tell me the birth place of Henry Johnson (American football)?", "What is the birth place of Henry Johnson (American football)?", "What was the birth place of Henry Johnson (American football)?", "Which place is the birth place of Henry Johnson (American football)?", "Which place was the birth place of Henry Johnson (American football)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Henry_Johnson_(American_football)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Jeri Ellsworth?", "Tell me the birth place of Jeri Ellsworth?", "What is the birth place of Jeri Ellsworth?", "What was the birth place of Jeri Ellsworth?", "Which place is the birth place of Jeri Ellsworth?", "Which place was the birth place of Jeri Ellsworth?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jeri_Ellsworth> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Jim Hill (Oregon politician)?", "Tell me the birth place of Jim Hill (Oregon politician)?", "What is the birth place of Jim Hill (Oregon politician)?", "What was the birth place of Jim Hill (Oregon politician)?", "Which place is the birth place of Jim Hill (Oregon politician)?", "Which place was the birth place of Jim Hill (Oregon politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jim_Hill_(Oregon_politician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of John Hill (Irish cricketer)?", "Tell me the birth place of John Hill (Irish cricketer)?", "What is the birth place of John Hill (Irish cricketer)?", "What was the birth place of John Hill (Irish cricketer)?", "Which place is the birth place of John Hill (Irish cricketer)?", "Which place was the birth place of John Hill (Irish cricketer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Hill_(Irish_cricketer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of John Perry (engineer)?", "Tell me the birth place of John Perry (engineer)?", "What is the birth place of John Perry (engineer)?", "What was the birth place of John Perry (engineer)?", "Which place is the birth place of John Perry (engineer)?", "Which place was the birth place of John Perry (engineer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Perry_(engineer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Jonathan Krohn?", "Tell me the birth place of Jonathan Krohn?", "What is the birth place of Jonathan Krohn?", "What was the birth place of Jonathan Krohn?", "Which place is the birth place of Jonathan Krohn?", "Which place was the birth place of Jonathan Krohn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jonathan_Krohn> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Kevin Lynch (hunger striker)?", "Tell me the birth place of Kevin Lynch (hunger striker)?", "What is the birth place of Kevin Lynch (hunger striker)?", "What was the birth place of Kevin Lynch (hunger striker)?", "Which place is the birth place of Kevin Lynch (hunger striker)?", "Which place was the birth place of Kevin Lynch (hunger striker)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kevin_Lynch_(hunger_striker)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Luciano Laurana?", "Tell me the birth place of Luciano Laurana?", "What is the birth place of Luciano Laurana?", "What was the birth place of Luciano Laurana?", "Which place is the birth place of Luciano Laurana?", "Which place was the birth place of Luciano Laurana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luciano_Laurana> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Mark Young (wrestler)?", "Tell me the birth place of Mark Young (wrestler)?", "What is the birth place of Mark Young (wrestler)?", "What was the birth place of Mark Young (wrestler)?", "Which place is the birth place of Mark Young (wrestler)?", "Which place was the birth place of Mark Young (wrestler)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mark_Young_(wrestler)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Norah McGuinness?", "Tell me the birth place of Norah McGuinness?", "What is the birth place of Norah McGuinness?", "What was the birth place of Norah McGuinness?", "Which place is the birth place of Norah McGuinness?", "Which place was the birth place of Norah McGuinness?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Norah_McGuinness> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Olive Schreiner?", "Tell me the birth place of Olive Schreiner?", "What is the birth place of Olive Schreiner?", "What was the birth place of Olive Schreiner?", "Which place is the birth place of Olive Schreiner?", "Which place was the birth place of Olive Schreiner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Olive_Schreiner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Peter Doherty (footballer)?", "Tell me the birth place of Peter Doherty (footballer)?", "What is the birth place of Peter Doherty (footballer)?", "What was the birth place of Peter Doherty (footballer)?", "Which place is the birth place of Peter Doherty (footballer)?", "Which place was the birth place of Peter Doherty (footballer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Peter_Doherty_(footballer)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Richard Smallwood?", "Tell me the birth place of Richard Smallwood?", "What is the birth place of Richard Smallwood?", "What was the birth place of Richard Smallwood?", "Which place is the birth place of Richard Smallwood?", "Which place was the birth place of Richard Smallwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Richard_Smallwood> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Sam Neill?", "Tell me the birth place of Sam Neill?", "What is the birth place of Sam Neill?", "What was the birth place of Sam Neill?", "Which place is the birth place of Sam Neill?", "Which place was the birth place of Sam Neill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sam_Neill> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ville Virtanen (actor)?", "Tell me the birth place of Ville Virtanen (actor)?", "What is the birth place of Ville Virtanen (actor)?", "What was the birth place of Ville Virtanen (actor)?", "Which place is the birth place of Ville Virtanen (actor)?", "Which place was the birth place of Ville Virtanen (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ville_Virtanen_(actor)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Vincenzo Esposito?", "Tell me the birth place of Vincenzo Esposito?", "What is the birth place of Vincenzo Esposito?", "What was the birth place of Vincenzo Esposito?", "Which place is the birth place of Vincenzo Esposito?", "Which place was the birth place of Vincenzo Esposito?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vincenzo_Esposito> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of William Massey?", "Tell me the birth place of William Massey?", "What is the birth place of William Massey?", "What was the birth place of William Massey?", "Which place is the birth place of William Massey?", "Which place was the birth place of William Massey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Massey> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of William Moore (musician)?", "Tell me the birth place of William Moore (musician)?", "What is the birth place of William Moore (musician)?", "What was the birth place of William Moore (musician)?", "Which place is the birth place of William Moore (musician)?", "Which place was the birth place of William Moore (musician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Moore_(musician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of William Yates Atkinson?", "Tell me the birth place of William Yates Atkinson?", "What is the birth place of William Yates Atkinson?", "What was the birth place of William Yates Atkinson?", "Which place is the birth place of William Yates Atkinson?", "Which place was the birth place of William Yates Atkinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Yates_Atkinson> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Arik Gilrovich?", "Tell me the birth place of Arik Gilrovich?", "What is the birth place of Arik Gilrovich?", "What was the birth place of Arik Gilrovich?", "Which place is the birth place of Arik Gilrovich?", "Which place was the birth place of Arik Gilrovich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arik_Gilrovich> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Christian Filippella?", "Tell me the birth place of Christian Filippella?", "What is the birth place of Christian Filippella?", "What was the birth place of Christian Filippella?", "Which place is the birth place of Christian Filippella?", "Which place was the birth place of Christian Filippella?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christian_Filippella> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Daryl Gurney?", "Tell me the birth place of Daryl Gurney?", "What is the birth place of Daryl Gurney?", "What was the birth place of Daryl Gurney?", "Which place is the birth place of Daryl Gurney?", "Which place was the birth place of Daryl Gurney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Daryl_Gurney> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Frank Fontsere?", "Tell me the birth place of Frank Fontsere?", "What is the birth place of Frank Fontsere?", "What was the birth place of Frank Fontsere?", "Which place is the birth place of Frank Fontsere?", "Which place was the birth place of Frank Fontsere?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frank_Fontsere> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Hank Reinhardt?", "Tell me the birth place of Hank Reinhardt?", "What is the birth place of Hank Reinhardt?", "What was the birth place of Hank Reinhardt?", "Which place is the birth place of Hank Reinhardt?", "Which place was the birth place of Hank Reinhardt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hank_Reinhardt> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ivan Hrvatska?", "Tell me the birth place of Ivan Hrvatska?", "What is the birth place of Ivan Hrvatska?", "What was the birth place of Ivan Hrvatska?", "Which place is the birth place of Ivan Hrvatska?", "Which place was the birth place of Ivan Hrvatska?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ivan_Hrvatska> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ken Hodges?", "Tell me the birth place of Ken Hodges?", "What is the birth place of Ken Hodges?", "What was the birth place of Ken Hodges?", "Which place is the birth place of Ken Hodges?", "Which place was the birth place of Ken Hodges?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ken_Hodges> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Rodney Orpheus?", "Tell me the birth place of Rodney Orpheus?", "What is the birth place of Rodney Orpheus?", "What was the birth place of Rodney Orpheus?", "Which place is the birth place of Rodney Orpheus?", "Which place was the birth place of Rodney Orpheus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rodney_Orpheus> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ruth Dolores Weiss?", "Tell me the birth place of Ruth Dolores Weiss?", "What is the birth place of Ruth Dolores Weiss?", "What was the birth place of Ruth Dolores Weiss?", "Which place is the birth place of Ruth Dolores Weiss?", "Which place was the birth place of Ruth Dolores Weiss?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruth_Dolores_Weiss> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Sakis Rouvas filmography?", "Tell me the birth place of Sakis Rouvas filmography?", "What is the birth place of Sakis Rouvas filmography?", "What was the birth place of Sakis Rouvas filmography?", "Which place is the birth place of Sakis Rouvas filmography?", "Which place was the birth place of Sakis Rouvas filmography?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sakis_Rouvas_filmography> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Sally Jaye?", "Tell me the birth place of Sally Jaye?", "What is the birth place of Sally Jaye?", "What was the birth place of Sally Jaye?", "Which place is the birth place of Sally Jaye?", "Which place was the birth place of Sally Jaye?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sally_Jaye> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Travis Payne?", "Tell me the birth place of Travis Payne?", "What is the birth place of Travis Payne?", "What was the birth place of Travis Payne?", "Which place is the birth place of Travis Payne?", "Which place was the birth place of Travis Payne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Travis_Payne> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Vicky Ford?", "Tell me the birth place of Vicky Ford?", "What is the birth place of Vicky Ford?", "What was the birth place of Vicky Ford?", "Which place is the birth place of Vicky Ford?", "Which place was the birth place of Vicky Ford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vicky_Ford> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Arthur Lucas?", "Tell me the birth place of Arthur Lucas?", "What is the birth place of Arthur Lucas?", "What was the birth place of Arthur Lucas?", "Which place is the birth place of Arthur Lucas?", "Which place was the birth place of Arthur Lucas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arthur_Lucas> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Henkka Seppälä?", "Tell me the birth place of Henkka Seppälä?", "What is the birth place of Henkka Seppälä?", "What was the birth place of Henkka Seppälä?", "Which place is the birth place of Henkka Seppälä?", "Which place was the birth place of Henkka Seppälä?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Henkka_Seppälä> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Jami Puustinen?", "Tell me the birth place of Jami Puustinen?", "What is the birth place of Jami Puustinen?", "What was the birth place of Jami Puustinen?", "Which place is the birth place of Jami Puustinen?", "Which place was the birth place of Jami Puustinen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jami_Puustinen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Sami Lepistö?", "Tell me the birth place of Sami Lepistö?", "What is the birth place of Sami Lepistö?", "What was the birth place of Sami Lepistö?", "Which place is the birth place of Sami Lepistö?", "Which place was the birth place of Sami Lepistö?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sami_Lepistö> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Teemu Riihijärvi?", "Tell me the birth place of Teemu Riihijärvi?", "What is the birth place of Teemu Riihijärvi?", "What was the birth place of Teemu Riihijärvi?", "Which place is the birth place of Teemu Riihijärvi?", "Which place was the birth place of Teemu Riihijärvi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Teemu_Riihijärvi> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Tony Salmelainen?", "Tell me the birth place of Tony Salmelainen?", "What is the birth place of Tony Salmelainen?", "What was the birth place of Tony Salmelainen?", "Which place is the birth place of Tony Salmelainen?", "Which place was the birth place of Tony Salmelainen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tony_Salmelainen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Alexander Kuoppala?", "Tell me the birth place of Alexander Kuoppala?", "What is the birth place of Alexander Kuoppala?", "What was the birth place of Alexander Kuoppala?", "Which place is the birth place of Alexander Kuoppala?", "Which place was the birth place of Alexander Kuoppala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Kuoppala> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Alfredo Covelli?", "Tell me the birth place of Alfredo Covelli?", "What is the birth place of Alfredo Covelli?", "What was the birth place of Alfredo Covelli?", "Which place is the birth place of Alfredo Covelli?", "Which place was the birth place of Alfredo Covelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfredo_Covelli> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Allen McClay?", "Tell me the birth place of Allen McClay?", "What is the birth place of Allen McClay?", "What was the birth place of Allen McClay?", "Which place is the birth place of Allen McClay?", "Which place was the birth place of Allen McClay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Allen_McClay> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Annie Laurie (musician)?", "Tell me the birth place of Annie Laurie (musician)?", "What is the birth place of Annie Laurie (musician)?", "What was the birth place of Annie Laurie (musician)?", "Which place is the birth place of Annie Laurie (musician)?", "Which place was the birth place of Annie Laurie (musician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Annie_Laurie_(musician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Charles L. Weltner?", "Tell me the birth place of Charles L. Weltner?", "What is the birth place of Charles L. Weltner?", "What was the birth place of Charles L. Weltner?", "Which place is the birth place of Charles L. Weltner?", "Which place was the birth place of Charles L. Weltner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_L._Weltner> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Charles Tegart?", "Tell me the birth place of Charles Tegart?", "What is the birth place of Charles Tegart?", "What was the birth place of Charles Tegart?", "Which place is the birth place of Charles Tegart?", "Which place was the birth place of Charles Tegart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Charles_Tegart> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Delila Hatuel?", "Tell me the birth place of Delila Hatuel?", "What is the birth place of Delila Hatuel?", "What was the birth place of Delila Hatuel?", "Which place is the birth place of Delila Hatuel?", "Which place was the birth place of Delila Hatuel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Delila_Hatuel> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Eliran Asao?", "Tell me the birth place of Eliran Asao?", "What is the birth place of Eliran Asao?", "What was the birth place of Eliran Asao?", "Which place is the birth place of Eliran Asao?", "Which place was the birth place of Eliran Asao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eliran_Asao> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ellis Arnall?", "Tell me the birth place of Ellis Arnall?", "What is the birth place of Ellis Arnall?", "What was the birth place of Ellis Arnall?", "Which place is the birth place of Ellis Arnall?", "Which place was the birth place of Ellis Arnall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ellis_Arnall> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Francesco Antonio Santori?", "Tell me the birth place of Francesco Antonio Santori?", "What is the birth place of Francesco Antonio Santori?", "What was the birth place of Francesco Antonio Santori?", "Which place is the birth place of Francesco Antonio Santori?", "Which place was the birth place of Francesco Antonio Santori?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Antonio_Santori> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of George Morton (American football)?", "Tell me the birth place of George Morton (American football)?", "What is the birth place of George Morton (American football)?", "What was the birth place of George Morton (American football)?", "Which place is the birth place of George Morton (American football)?", "Which place was the birth place of George Morton (American football)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Morton_(American_football)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Josiah Tattnall (Senator)?", "Tell me the birth place of Josiah Tattnall (Senator)?", "What is the birth place of Josiah Tattnall (Senator)?", "What was the birth place of Josiah Tattnall (Senator)?", "Which place is the birth place of Josiah Tattnall (Senator)?", "Which place was the birth place of Josiah Tattnall (Senator)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Josiah_Tattnall_(Senator)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Krista Kosonen?", "Tell me the birth place of Krista Kosonen?", "What is the birth place of Krista Kosonen?", "What was the birth place of Krista Kosonen?", "Which place is the birth place of Krista Kosonen?", "Which place was the birth place of Krista Kosonen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Krista_Kosonen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Peter of Aragon, Count of Alburquerque?", "Tell me the birth place of Peter of Aragon, Count of Alburquerque?", "What is the birth place of Peter of Aragon, Count of Alburquerque?", "What was the birth place of Peter of Aragon, Count of Alburquerque?", "Which place is the birth place of Peter of Aragon, Count of Alburquerque?", "Which place was the birth place of Peter of Aragon, Count of Alburquerque?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Peter_of_Aragon,_Count_of_Alburquerque> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Pieter Voltelyn Graham van der Byl?", "Tell me the birth place of Pieter Voltelyn Graham van der Byl?", "What is the birth place of Pieter Voltelyn Graham van der Byl?", "What was the birth place of Pieter Voltelyn Graham van der Byl?", "Which place is the birth place of Pieter Voltelyn Graham van der Byl?", "Which place was the birth place of Pieter Voltelyn Graham van der Byl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pieter_Voltelyn_Graham_van_der_Byl> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ronnie Thompson (Georgia politician)?", "Tell me the birth place of Ronnie Thompson (Georgia politician)?", "What is the birth place of Ronnie Thompson (Georgia politician)?", "What was the birth place of Ronnie Thompson (Georgia politician)?", "Which place is the birth place of Ronnie Thompson (Georgia politician)?", "Which place was the birth place of Ronnie Thompson (Georgia politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ronnie_Thompson_(Georgia_politician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Saint Venera?", "Tell me the birth place of Saint Venera?", "What is the birth place of Saint Venera?", "What was the birth place of Saint Venera?", "Which place is the birth place of Saint Venera?", "Which place was the birth place of Saint Venera?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Saint_Venera> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Thomas McElwee?", "Tell me the birth place of Thomas McElwee?", "What is the birth place of Thomas McElwee?", "What was the birth place of Thomas McElwee?", "Which place is the birth place of Thomas McElwee?", "Which place was the birth place of Thomas McElwee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Thomas_McElwee> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Tim Donnelly (politician)?", "Tell me the birth place of Tim Donnelly (politician)?", "What is the birth place of Tim Donnelly (politician)?", "What was the birth place of Tim Donnelly (politician)?", "Which place is the birth place of Tim Donnelly (politician)?", "Which place was the birth place of Tim Donnelly (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tim_Donnelly_(politician)> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Valtteri Virkkunen?", "Tell me the birth place of Valtteri Virkkunen?", "What is the birth place of Valtteri Virkkunen?", "What was the birth place of Valtteri Virkkunen?", "Which place is the birth place of Valtteri Virkkunen?", "Which place was the birth place of Valtteri Virkkunen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Valtteri_Virkkunen> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Larry McDonald?", "Tell me the birth place of Larry McDonald?", "What is the birth place of Larry McDonald?", "What was the birth place of Larry McDonald?", "Which place is the birth place of Larry McDonald?", "Which place was the birth place of Larry McDonald?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Larry_McDonald> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Occhiali?", "Tell me the birth place of Occhiali?", "What is the birth place of Occhiali?", "What was the birth place of Occhiali?", "Which place is the birth place of Occhiali?", "Which place was the birth place of Occhiali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Occhiali> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Roy D. Bridges Jr.?", "Tell me the birth place of Roy D. Bridges Jr.?", "What is the birth place of Roy D. Bridges Jr.?", "What was the birth place of Roy D. Bridges Jr.?", "Which place is the birth place of Roy D. Bridges Jr.?", "Which place was the birth place of Roy D. Bridges Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Roy_D._Bridges_Jr.> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Walter Sydney Adams?", "Tell me the birth place of Walter Sydney Adams?", "What is the birth place of Walter Sydney Adams?", "What was the birth place of Walter Sydney Adams?", "Which place is the birth place of Walter Sydney Adams?", "Which place was the birth place of Walter Sydney Adams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Walter_Sydney_Adams> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Eutocius of Ascalon?", "Tell me the birth place of Eutocius of Ascalon?", "What is the birth place of Eutocius of Ascalon?", "What was the birth place of Eutocius of Ascalon?", "Which place is the birth place of Eutocius of Ascalon?", "Which place was the birth place of Eutocius of Ascalon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eutocius_of_Ascalon> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Haytham Dheeb?", "Tell me the birth place of Haytham Dheeb?", "What is the birth place of Haytham Dheeb?", "What was the birth place of Haytham Dheeb?", "Which place is the birth place of Haytham Dheeb?", "Which place was the birth place of Haytham Dheeb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Haytham_Dheeb> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Hesham Salhe?", "Tell me the birth place of Hesham Salhe?", "What is the birth place of Hesham Salhe?", "What was the birth place of Hesham Salhe?", "Which place is the birth place of Hesham Salhe?", "Which place was the birth place of Hesham Salhe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hesham_Salhe> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Mohammed Shbair?", "Tell me the birth place of Mohammed Shbair?", "What is the birth place of Mohammed Shbair?", "What was the birth place of Mohammed Shbair?", "Which place is the birth place of Mohammed Shbair?", "Which place was the birth place of Mohammed Shbair?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mohammed_Shbair> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Mousa Abu-Jazar?", "Tell me the birth place of Mousa Abu-Jazar?", "What is the birth place of Mousa Abu-Jazar?", "What was the birth place of Mousa Abu-Jazar?", "Which place is the birth place of Mousa Abu-Jazar?", "Which place was the birth place of Mousa Abu-Jazar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mousa_Abu-Jazar> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Raed Fares?", "Tell me the birth place of Raed Fares?", "What is the birth place of Raed Fares?", "What was the birth place of Raed Fares?", "Which place is the birth place of Raed Fares?", "Which place was the birth place of Raed Fares?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Raed_Fares> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Shadi Shaban?", "Tell me the birth place of Shadi Shaban?", "What is the birth place of Shadi Shaban?", "What was the birth place of Shadi Shaban?", "Which place is the birth place of Shadi Shaban?", "Which place was the birth place of Shadi Shaban?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Shadi_Shaban> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Suleiman Obeid?", "Tell me the birth place of Suleiman Obeid?", "What is the birth place of Suleiman Obeid?", "What was the birth place of Suleiman Obeid?", "Which place is the birth place of Suleiman Obeid?", "Which place was the birth place of Suleiman Obeid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Suleiman_Obeid> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Tawfiq Ali?", "Tell me the birth place of Tawfiq Ali?", "What is the birth place of Tawfiq Ali?", "What was the birth place of Tawfiq Ali?", "Which place is the birth place of Tawfiq Ali?", "Which place was the birth place of Tawfiq Ali?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tawfiq_Ali> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Ziad Abu Amr?", "Tell me the birth place of Ziad Abu Amr?", "What is the birth place of Ziad Abu Amr?", "What was the birth place of Ziad Abu Amr?", "Which place is the birth place of Ziad Abu Amr?", "Which place was the birth place of Ziad Abu Amr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ziad_Abu_Amr> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Aino Kannisto?", "Tell me the birth place of Aino Kannisto?", "What is the birth place of Aino Kannisto?", "What was the birth place of Aino Kannisto?", "Which place is the birth place of Aino Kannisto?", "Which place was the birth place of Aino Kannisto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aino_Kannisto> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Al Beard?", "Tell me the birth place of Al Beard?", "What is the birth place of Al Beard?", "What was the birth place of Al Beard?", "Which place is the birth place of Al Beard?", "Which place was the birth place of Al Beard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Al_Beard> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Clint Sammons?", "Tell me the birth place of Clint Sammons?", "What is the birth place of Clint Sammons?", "What was the birth place of Clint Sammons?", "Which place is the birth place of Clint Sammons?", "Which place was the birth place of Clint Sammons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Clint_Sammons> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of Coleman Rudolph?", "Tell me the birth place of Coleman Rudolph?", "What is the birth place of Coleman Rudolph?", "What was the birth place of Coleman Rudolph?", "Which place is the birth place of Coleman Rudolph?", "Which place was the birth place of Coleman Rudolph?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coleman_Rudolph> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "7",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of David Hendrix?", "Tell me the birth place of David Hendrix?", "What is the birth place of David Hendrix?", "What was the birth place of David Hendrix?", "Which place is the birth place of David Hendrix?", "Which place was the birth place of David Hendrix?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Hendrix> <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Alfred Bester?", "Tell me the spouse of Alfred Bester?", "What is the spouse of Alfred Bester?", "What was the spouse of Alfred Bester?", "Which person is the spouse of Alfred Bester?", "Which person was the spouse of Alfred Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Bester> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Andrzej Wajda?", "Tell me the spouse of Andrzej Wajda?", "What is the spouse of Andrzej Wajda?", "What was the spouse of Andrzej Wajda?", "Which person is the spouse of Andrzej Wajda?", "Which person was the spouse of Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andrzej_Wajda> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Brad Pitt?", "Tell me the spouse of Brad Pitt?", "What is the spouse of Brad Pitt?", "What was the spouse of Brad Pitt?", "Which person is the spouse of Brad Pitt?", "Which person was the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Carole Lombard?", "Tell me the spouse of Carole Lombard?", "What is the spouse of Carole Lombard?", "What was the spouse of Carole Lombard?", "Which person is the spouse of Carole Lombard?", "Which person was the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Caroline of Brunswick?", "Tell me the spouse of Caroline of Brunswick?", "What is the spouse of Caroline of Brunswick?", "What was the spouse of Caroline of Brunswick?", "Which person is the spouse of Caroline of Brunswick?", "Which person was the spouse of Caroline of Brunswick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Caroline_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Catherine I of Russia?", "Tell me the spouse of Catherine I of Russia?", "What is the spouse of Catherine I of Russia?", "What was the spouse of Catherine I of Russia?", "Which person is the spouse of Catherine I of Russia?", "Which person was the spouse of Catherine I of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Catherine_I_of_Russia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Christopher Lambert?", "Tell me the spouse of Christopher Lambert?", "What is the spouse of Christopher Lambert?", "What was the spouse of Christopher Lambert?", "Which person is the spouse of Christopher Lambert?", "Which person was the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Clark Gable?", "Tell me the spouse of Clark Gable?", "What is the spouse of Clark Gable?", "What was the spouse of Clark Gable?", "Which person is the spouse of Clark Gable?", "Which person was the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Cnut the Great?", "Tell me the spouse of Cnut the Great?", "What is the spouse of Cnut the Great?", "What was the spouse of Cnut the Great?", "Which person is the spouse of Cnut the Great?", "Which person was the spouse of Cnut the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cnut_the_Great> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of David Boies?", "Tell me the spouse of David Boies?", "What is the spouse of David Boies?", "What was the spouse of David Boies?", "Which person is the spouse of David Boies?", "Which person was the spouse of David Boies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/David_Boies> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Edmond Hamilton?", "Tell me the spouse of Edmond Hamilton?", "What is the spouse of Edmond Hamilton?", "What was the spouse of Edmond Hamilton?", "Which person is the spouse of Edmond Hamilton?", "Which person was the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Elizabeth Taylor?", "Tell me the spouse of Elizabeth Taylor?", "What is the spouse of Elizabeth Taylor?", "What was the spouse of Elizabeth Taylor?", "Which person is the spouse of Elizabeth Taylor?", "Which person was the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Elizabeth Woodville?", "Tell me the spouse of Elizabeth Woodville?", "What is the spouse of Elizabeth Woodville?", "What was the spouse of Elizabeth Woodville?", "Which person is the spouse of Elizabeth Woodville?", "Which person was the spouse of Elizabeth Woodville?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elizabeth_Woodville> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Emma of Normandy?", "Tell me the spouse of Emma of Normandy?", "What is the spouse of Emma of Normandy?", "What was the spouse of Emma of Normandy?", "Which person is the spouse of Emma of Normandy?", "Which person was the spouse of Emma of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Emma_of_Normandy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of George IV of the United Kingdom?", "Tell me the spouse of George IV of the United Kingdom?", "What is the spouse of George IV of the United Kingdom?", "What was the spouse of George IV of the United Kingdom?", "Which person is the spouse of George IV of the United Kingdom?", "Which person was the spouse of George IV of the United Kingdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_IV_of_the_United_Kingdom> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Gwyneth Paltrow?", "Tell me the spouse of Gwyneth Paltrow?", "What is the spouse of Gwyneth Paltrow?", "What was the spouse of Gwyneth Paltrow?", "Which person is the spouse of Gwyneth Paltrow?", "Which person was the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Ingrid Bergman?", "Tell me the spouse of Ingrid Bergman?", "What is the spouse of Ingrid Bergman?", "What was the spouse of Ingrid Bergman?", "Which person is the spouse of Ingrid Bergman?", "Which person was the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Jennifer Aniston?", "Tell me the spouse of Jennifer Aniston?", "What is the spouse of Jennifer Aniston?", "What was the spouse of Jennifer Aniston?", "Which person is the spouse of Jennifer Aniston?", "Which person was the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Leigh Brackett?", "Tell me the spouse of Leigh Brackett?", "What is the spouse of Leigh Brackett?", "What was the spouse of Leigh Brackett?", "Which person is the spouse of Leigh Brackett?", "Which person was the spouse of Leigh Brackett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Leigh_Brackett> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Louis XVI of France?", "Tell me the spouse of Louis XVI of France?", "What is the spouse of Louis XVI of France?", "What was the spouse of Louis XVI of France?", "Which person is the spouse of Louis XVI of France?", "Which person was the spouse of Louis XVI of France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Louis_XVI_of_France> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Marie Antoinette?", "Tell me the spouse of Marie Antoinette?", "What is the spouse of Marie Antoinette?", "What was the spouse of Marie Antoinette?", "Which person is the spouse of Marie Antoinette?", "Which person was the spouse of Marie Antoinette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Marie_Antoinette> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Peter the Great?", "Tell me the spouse of Peter the Great?", "What is the spouse of Peter the Great?", "What was the spouse of Peter the Great?", "Which person is the spouse of Peter the Great?", "Which person was the spouse of Peter the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Peter_the_Great> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Richard Burton?", "Tell me the spouse of Richard Burton?", "What is the spouse of Richard Burton?", "What was the spouse of Richard Burton?", "Which person is the spouse of Richard Burton?", "Which person was the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Roberto Rossellini?", "Tell me the spouse of Roberto Rossellini?", "What is the spouse of Roberto Rossellini?", "What was the spouse of Roberto Rossellini?", "Which person is the spouse of Roberto Rossellini?", "Which person was the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Salman Rushdie?", "Tell me the spouse of Salman Rushdie?", "What is the spouse of Salman Rushdie?", "What was the spouse of Salman Rushdie?", "Which person is the spouse of Salman Rushdie?", "Which person was the spouse of Salman Rushdie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salman_Rushdie> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Sylvia Plath?", "Tell me the spouse of Sylvia Plath?", "What is the spouse of Sylvia Plath?", "What was the spouse of Sylvia Plath?", "Which person is the spouse of Sylvia Plath?", "Which person was the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Ted Hughes?", "Tell me the spouse of Ted Hughes?", "What is the spouse of Ted Hughes?", "What was the spouse of Ted Hughes?", "Which person is the spouse of Ted Hughes?", "Which person was the spouse of Ted Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ted_Hughes> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Theophanu?", "Tell me the spouse of Theophanu?", "What is the spouse of Theophanu?", "What was the spouse of Theophanu?", "Which person is the spouse of Theophanu?", "Which person was the spouse of Theophanu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Theophanu> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Thomas Hardy?", "Tell me the spouse of Thomas Hardy?", "What is the spouse of Thomas Hardy?", "What was the spouse of Thomas Hardy?", "Which person is the spouse of Thomas Hardy?", "Which person was the spouse of Thomas Hardy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Thomas_Hardy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Val Kilmer?", "Tell me the spouse of Val Kilmer?", "What is the spouse of Val Kilmer?", "What was the spouse of Val Kilmer?", "Which person is the spouse of Val Kilmer?", "Which person was the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Vivien Leigh?", "Tell me the spouse of Vivien Leigh?", "What is the spouse of Vivien Leigh?", "What was the spouse of Vivien Leigh?", "Which person is the spouse of Vivien Leigh?", "Which person was the spouse of Vivien Leigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Vivien_Leigh> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of William Randolph Hearst?", "Tell me the spouse of William Randolph Hearst?", "What is the spouse of William Randolph Hearst?", "What was the spouse of William Randolph Hearst?", "Which person is the spouse of William Randolph Hearst?", "Which person was the spouse of William Randolph Hearst?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Randolph_Hearst> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Camille Flammarion?", "Tell me the spouse of Camille Flammarion?", "What is the spouse of Camille Flammarion?", "What was the spouse of Camille Flammarion?", "Which person is the spouse of Camille Flammarion?", "Which person was the spouse of Camille Flammarion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Camille_Flammarion> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Chris Martin?", "Tell me the spouse of Chris Martin?", "What is the spouse of Chris Martin?", "What was the spouse of Chris Martin?", "Which person is the spouse of Chris Martin?", "Which person was the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Céline Bara?", "Tell me the spouse of Céline Bara?", "What is the spouse of Céline Bara?", "What was the spouse of Céline Bara?", "Which person is the spouse of Céline Bara?", "Which person was the spouse of Céline Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Céline_Bara> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Dennis Quaid?", "Tell me the spouse of Dennis Quaid?", "What is the spouse of Dennis Quaid?", "What was the spouse of Dennis Quaid?", "Which person is the spouse of Dennis Quaid?", "Which person was the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Joanne Whalley?", "Tell me the spouse of Joanne Whalley?", "What is the spouse of Joanne Whalley?", "What was the spouse of Joanne Whalley?", "Which person is the spouse of Joanne Whalley?", "Which person was the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of John Grey of Groby?", "Tell me the spouse of John Grey of Groby?", "What is the spouse of John Grey of Groby?", "What was the spouse of John Grey of Groby?", "Which person is the spouse of John Grey of Groby?", "Which person was the spouse of John Grey of Groby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/John_Grey_of_Groby> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Minnie Maddern Fiske?", "Tell me the spouse of Minnie Maddern Fiske?", "What is the spouse of Minnie Maddern Fiske?", "What was the spouse of Minnie Maddern Fiske?", "Which person is the spouse of Minnie Maddern Fiske?", "Which person was the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Padma Lakshmi?", "Tell me the spouse of Padma Lakshmi?", "What is the spouse of Padma Lakshmi?", "What was the spouse of Padma Lakshmi?", "Which person is the spouse of Padma Lakshmi?", "Which person was the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Savitri (actress)?", "Tell me the spouse of Savitri (actress)?", "What is the spouse of Savitri (actress)?", "What was the spouse of Savitri (actress)?", "Which person is the spouse of Savitri (actress)?", "Which person was the spouse of Savitri (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Savitri_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Talisa Soto?", "Tell me the spouse of Talisa Soto?", "What is the spouse of Talisa Soto?", "What was the spouse of Talisa Soto?", "Which person is the spouse of Talisa Soto?", "Which person was the spouse of Talisa Soto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Talisa_Soto> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Aaron Spelling?", "Tell me the spouse of Aaron Spelling?", "What is the spouse of Aaron Spelling?", "What was the spouse of Aaron Spelling?", "Which person is the spouse of Aaron Spelling?", "Which person was the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Adam Hochschild?", "Tell me the spouse of Adam Hochschild?", "What is the spouse of Adam Hochschild?", "What was the spouse of Adam Hochschild?", "Which person is the spouse of Adam Hochschild?", "Which person was the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Alastair Dunnett?", "Tell me the spouse of Alastair Dunnett?", "What is the spouse of Alastair Dunnett?", "What was the spouse of Alastair Dunnett?", "Which person is the spouse of Alastair Dunnett?", "Which person was the spouse of Alastair Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alastair_Dunnett> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Alexander Ramsay of Mar?", "Tell me the spouse of Alexander Ramsay of Mar?", "What is the spouse of Alexander Ramsay of Mar?", "What was the spouse of Alexander Ramsay of Mar?", "Which person is the spouse of Alexander Ramsay of Mar?", "Which person was the spouse of Alexander Ramsay of Mar?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Ramsay_of_Mar> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Anna Haining Bates?", "Tell me the spouse of Anna Haining Bates?", "What is the spouse of Anna Haining Bates?", "What was the spouse of Anna Haining Bates?", "Which person is the spouse of Anna Haining Bates?", "Which person was the spouse of Anna Haining Bates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anna_Haining_Bates> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Arlie Russell Hochschild?", "Tell me the spouse of Arlie Russell Hochschild?", "What is the spouse of Arlie Russell Hochschild?", "What was the spouse of Arlie Russell Hochschild?", "Which person is the spouse of Arlie Russell Hochschild?", "Which person was the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Barbara Simons?", "Tell me the spouse of Barbara Simons?", "What is the spouse of Barbara Simons?", "What was the spouse of Barbara Simons?", "Which person is the spouse of Barbara Simons?", "Which person was the spouse of Barbara Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Barbara_Simons> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Beata Tyszkiewicz?", "Tell me the spouse of Beata Tyszkiewicz?", "What is the spouse of Beata Tyszkiewicz?", "What was the spouse of Beata Tyszkiewicz?", "Which person is the spouse of Beata Tyszkiewicz?", "Which person was the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Benjamin Bratt?", "Tell me the spouse of Benjamin Bratt?", "What is the spouse of Benjamin Bratt?", "What was the spouse of Benjamin Bratt?", "Which person is the spouse of Benjamin Bratt?", "Which person was the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Bermudo II of León?", "Tell me the spouse of Bermudo II of León?", "What is the spouse of Bermudo II of León?", "What was the spouse of Bermudo II of León?", "Which person is the spouse of Bermudo II of León?", "Which person was the spouse of Bermudo II of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bermudo_II_of_León> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Bunker Roy?", "Tell me the spouse of Bunker Roy?", "What is the spouse of Bunker Roy?", "What was the spouse of Bunker Roy?", "Which person is the spouse of Bunker Roy?", "Which person was the spouse of Bunker Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bunker_Roy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Candy Spelling?", "Tell me the spouse of Candy Spelling?", "What is the spouse of Candy Spelling?", "What was the spouse of Candy Spelling?", "Which person is the spouse of Candy Spelling?", "Which person was the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Cyrille Bara?", "Tell me the spouse of Cyrille Bara?", "What is the spouse of Cyrille Bara?", "What was the spouse of Cyrille Bara?", "Which person is the spouse of Cyrille Bara?", "Which person was the spouse of Cyrille Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cyrille_Bara> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Cécile Brunschvicg?", "Tell me the spouse of Cécile Brunschvicg?", "What is the spouse of Cécile Brunschvicg?", "What was the spouse of Cécile Brunschvicg?", "Which person is the spouse of Cécile Brunschvicg?", "Which person was the spouse of Cécile Brunschvicg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cécile_Brunschvicg> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Dorothy Dunnett?", "Tell me the spouse of Dorothy Dunnett?", "What is the spouse of Dorothy Dunnett?", "What was the spouse of Dorothy Dunnett?", "Which person is the spouse of Dorothy Dunnett?", "Which person was the spouse of Dorothy Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dorothy_Dunnett> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Ehud Olmert?", "Tell me the spouse of Ehud Olmert?", "What is the spouse of Ehud Olmert?", "What was the spouse of Ehud Olmert?", "Which person is the spouse of Ehud Olmert?", "Which person was the spouse of Ehud Olmert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ehud_Olmert> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Eleanor Silliman Belknap Humphrey?", "Tell me the spouse of Eleanor Silliman Belknap Humphrey?", "What is the spouse of Eleanor Silliman Belknap Humphrey?", "What was the spouse of Eleanor Silliman Belknap Humphrey?", "Which person is the spouse of Eleanor Silliman Belknap Humphrey?", "Which person was the spouse of Eleanor Silliman Belknap Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Elvira of Castile, Queen of León?", "Tell me the spouse of Elvira of Castile, Queen of León?", "What is the spouse of Elvira of Castile, Queen of León?", "What was the spouse of Elvira of Castile, Queen of León?", "Which person is the spouse of Elvira of Castile, Queen of León?", "Which person was the spouse of Elvira of Castile, Queen of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Gemini Ganesan?", "Tell me the spouse of Gemini Ganesan?", "What is the spouse of Gemini Ganesan?", "What was the spouse of Gemini Ganesan?", "Which person is the spouse of Gemini Ganesan?", "Which person was the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of George Washington Parke Custis?", "Tell me the spouse of George Washington Parke Custis?", "What is the spouse of George Washington Parke Custis?", "What was the spouse of George Washington Parke Custis?", "Which person is the spouse of George Washington Parke Custis?", "Which person was the spouse of George Washington Parke Custis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Washington_Parke_Custis> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Harriet Smithson?", "Tell me the spouse of Harriet Smithson?", "What is the spouse of Harriet Smithson?", "What was the spouse of Harriet Smithson?", "Which person is the spouse of Harriet Smithson?", "Which person was the spouse of Harriet Smithson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Harriet_Smithson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of James Harris Simons?", "Tell me the spouse of James Harris Simons?", "What is the spouse of James Harris Simons?", "What was the spouse of James Harris Simons?", "Which person is the spouse of James Harris Simons?", "Which person was the spouse of James Harris Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/James_Harris_Simons> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Joan Bakewell?", "Tell me the spouse of Joan Bakewell?", "What is the spouse of Joan Bakewell?", "What was the spouse of Joan Bakewell?", "Which person is the spouse of Joan Bakewell?", "Which person was the spouse of Joan Bakewell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Joan_Bakewell> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Lewis Craig Humphrey?", "Tell me the spouse of Lewis Craig Humphrey?", "What is the spouse of Lewis Craig Humphrey?", "What was the spouse of Lewis Craig Humphrey?", "Which person is the spouse of Lewis Craig Humphrey?", "Which person was the spouse of Lewis Craig Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lewis_Craig_Humphrey> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Liudolf, Duke of Saxony?", "Tell me the spouse of Liudolf, Duke of Saxony?", "What is the spouse of Liudolf, Duke of Saxony?", "What was the spouse of Liudolf, Duke of Saxony?", "Which person is the spouse of Liudolf, Duke of Saxony?", "Which person was the spouse of Liudolf, Duke of Saxony?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Liudolf,_Duke_of_Saxony> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Loret Miller Ruppe?", "Tell me the spouse of Loret Miller Ruppe?", "What is the spouse of Loret Miller Ruppe?", "What was the spouse of Loret Miller Ruppe?", "Which person is the spouse of Loret Miller Ruppe?", "Which person was the spouse of Loret Miller Ruppe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Loret_Miller_Ruppe> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Nina Ricci (designer)?", "Tell me the spouse of Nina Ricci (designer)?", "What is the spouse of Nina Ricci (designer)?", "What was the spouse of Nina Ricci (designer)?", "Which person is the spouse of Nina Ricci (designer)?", "Which person was the spouse of Nina Ricci (designer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nina_Ricci_(designer)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Paul Eggers?", "Tell me the spouse of Paul Eggers?", "What is the spouse of Paul Eggers?", "What was the spouse of Paul Eggers?", "Which person is the spouse of Paul Eggers?", "Which person was the spouse of Paul Eggers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paul_Eggers> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Paul Hasluck?", "Tell me the spouse of Paul Hasluck?", "What is the spouse of Paul Hasluck?", "What was the spouse of Paul Hasluck?", "Which person is the spouse of Paul Hasluck?", "Which person was the spouse of Paul Hasluck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paul_Hasluck> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Paula Dockery?", "Tell me the spouse of Paula Dockery?", "What is the spouse of Paula Dockery?", "What was the spouse of Paula Dockery?", "Which person is the spouse of Paula Dockery?", "Which person was the spouse of Paula Dockery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Paula_Dockery> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Pinkie C. Wilkerson?", "Tell me the spouse of Pinkie C. Wilkerson?", "What is the spouse of Pinkie C. Wilkerson?", "What was the spouse of Pinkie C. Wilkerson?", "Which person is the spouse of Pinkie C. Wilkerson?", "Which person was the spouse of Pinkie C. Wilkerson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pinkie_C._Wilkerson> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Robert Sidney, 2nd Earl of Leicester?", "Tell me the spouse of Robert Sidney, 2nd Earl of Leicester?", "What is the spouse of Robert Sidney, 2nd Earl of Leicester?", "What was the spouse of Robert Sidney, 2nd Earl of Leicester?", "Which person is the spouse of Robert Sidney, 2nd Earl of Leicester?", "Which person was the spouse of Robert Sidney, 2nd Earl of Leicester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robert_Sidney,_2nd_Earl_of_Leicester> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Rolly Bester?", "Tell me the spouse of Rolly Bester?", "What is the spouse of Rolly Bester?", "What was the spouse of Rolly Bester?", "Which person is the spouse of Rolly Bester?", "Which person was the spouse of Rolly Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rolly_Bester> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Ruy Guerra?", "Tell me the spouse of Ruy Guerra?", "What is the spouse of Ruy Guerra?", "What was the spouse of Ruy Guerra?", "Which person is the spouse of Ruy Guerra?", "Which person was the spouse of Ruy Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruy_Guerra> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Tripura Sundari?", "Tell me the spouse of Tripura Sundari?", "What is the spouse of Tripura Sundari?", "What was the spouse of Tripura Sundari?", "Which person is the spouse of Tripura Sundari?", "Which person was the spouse of Tripura Sundari?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tripura_Sundari> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Padmé Amidala?", "Tell me the spouse of Padmé Amidala?", "What is the spouse of Padmé Amidala?", "What was the spouse of Padmé Amidala?", "Which person is the spouse of Padmé Amidala?", "Which person was the spouse of Padmé Amidala?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Padmé_Amidala> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Yuri Rasovsky?", "Tell me the spouse of Yuri Rasovsky?", "What is the spouse of Yuri Rasovsky?", "What was the spouse of Yuri Rasovsky?", "Which person is the spouse of Yuri Rasovsky?", "Which person was the spouse of Yuri Rasovsky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Yuri_Rasovsky> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Clara McMillen?", "Tell me the spouse of Clara McMillen?", "What is the spouse of Clara McMillen?", "What was the spouse of Clara McMillen?", "Which person is the spouse of Clara McMillen?", "Which person was the spouse of Clara McMillen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Clara_McMillen> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Deborah Walley?", "Tell me the spouse of Deborah Walley?", "What is the spouse of Deborah Walley?", "What was the spouse of Deborah Walley?", "Which person is the spouse of Deborah Walley?", "Which person was the spouse of Deborah Walley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Deborah_Walley> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Diana Gould (dancer)?", "Tell me the spouse of Diana Gould (dancer)?", "What is the spouse of Diana Gould (dancer)?", "What was the spouse of Diana Gould (dancer)?", "Which person is the spouse of Diana Gould (dancer)?", "Which person was the spouse of Diana Gould (dancer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Diana_Gould_(dancer)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Gina de Venecia?", "Tell me the spouse of Gina de Venecia?", "What is the spouse of Gina de Venecia?", "What was the spouse of Gina de Venecia?", "Which person is the spouse of Gina de Venecia?", "Which person was the spouse of Gina de Venecia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gina_de_Venecia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Sarala Roy?", "Tell me the spouse of Sarala Roy?", "What is the spouse of Sarala Roy?", "What was the spouse of Sarala Roy?", "Which person is the spouse of Sarala Roy?", "Which person was the spouse of Sarala Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sarala_Roy> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Sidney Miller (actor)?", "Tell me the spouse of Sidney Miller (actor)?", "What is the spouse of Sidney Miller (actor)?", "What was the spouse of Sidney Miller (actor)?", "Which person is the spouse of Sidney Miller (actor)?", "Which person was the spouse of Sidney Miller (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sidney_Miller_(actor)> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Sir Edward Burgh?", "Tell me the spouse of Sir Edward Burgh?", "What is the spouse of Sir Edward Burgh?", "What was the spouse of Sir Edward Burgh?", "Which person is the spouse of Sir Edward Burgh?", "Which person was the spouse of Sir Edward Burgh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sir_Edward_Burgh> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Henry Morgenthau Jr.?", "Tell me the spouse of Henry Morgenthau Jr.?", "What is the spouse of Henry Morgenthau Jr.?", "What was the spouse of Henry Morgenthau Jr.?", "Which person is the spouse of Henry Morgenthau Jr.?", "Which person was the spouse of Henry Morgenthau Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Henry_Morgenthau_Jr.> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Lydia Lopokova?", "Tell me the spouse of Lydia Lopokova?", "What is the spouse of Lydia Lopokova?", "What was the spouse of Lydia Lopokova?", "Which person is the spouse of Lydia Lopokova?", "Which person was the spouse of Lydia Lopokova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lydia_Lopokova> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Maxwell Reed?", "Tell me the spouse of Maxwell Reed?", "What is the spouse of Maxwell Reed?", "What was the spouse of Maxwell Reed?", "Which person is the spouse of Maxwell Reed?", "Which person was the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Sigrid the Haughty?", "Tell me the spouse of Sigrid the Haughty?", "What is the spouse of Sigrid the Haughty?", "What was the spouse of Sigrid the Haughty?", "Which person is the spouse of Sigrid the Haughty?", "Which person was the spouse of Sigrid the Haughty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sigrid_the_Haughty> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Elena Ceaușescu?", "Tell me the spouse of Elena Ceaușescu?", "What is the spouse of Elena Ceaușescu?", "What was the spouse of Elena Ceaușescu?", "Which person is the spouse of Elena Ceaușescu?", "Which person was the spouse of Elena Ceaușescu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Elena_Ceaușescu> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Lydia Clarke?", "Tell me the spouse of Lydia Clarke?", "What is the spouse of Lydia Clarke?", "What was the spouse of Lydia Clarke?", "Which person is the spouse of Lydia Clarke?", "Which person was the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Ruqaiya Sultan Begum?", "Tell me the spouse of Ruqaiya Sultan Begum?", "What is the spouse of Ruqaiya Sultan Begum?", "What was the spouse of Ruqaiya Sultan Begum?", "Which person is the spouse of Ruqaiya Sultan Begum?", "Which person was the spouse of Ruqaiya Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruqaiya_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Eliza Jumel?", "Tell me the spouse of Eliza Jumel?", "What is the spouse of Eliza Jumel?", "What was the spouse of Eliza Jumel?", "Which person is the spouse of Eliza Jumel?", "Which person was the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of George VII of Imereti?", "Tell me the spouse of George VII of Imereti?", "What is the spouse of George VII of Imereti?", "What was the spouse of George VII of Imereti?", "Which person is the spouse of George VII of Imereti?", "Which person was the spouse of George VII of Imereti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_VII_of_Imereti> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Raja Zarith Sofia?", "Tell me the spouse of Raja Zarith Sofia?", "What is the spouse of Raja Zarith Sofia?", "What was the spouse of Raja Zarith Sofia?", "Which person is the spouse of Raja Zarith Sofia?", "Which person was the spouse of Raja Zarith Sofia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Raja_Zarith_Sofia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Glenn Falkenstein?", "Tell me the spouse of Glenn Falkenstein?", "What is the spouse of Glenn Falkenstein?", "What was the spouse of Glenn Falkenstein?", "Which person is the spouse of Glenn Falkenstein?", "Which person was the spouse of Glenn Falkenstein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Glenn_Falkenstein> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Kiran Juneja?", "Tell me the spouse of Kiran Juneja?", "What is the spouse of Kiran Juneja?", "What was the spouse of Kiran Juneja?", "Which person is the spouse of Kiran Juneja?", "Which person was the spouse of Kiran Juneja?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kiran_Juneja> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Lena Herzog?", "Tell me the spouse of Lena Herzog?", "What is the spouse of Lena Herzog?", "What was the spouse of Lena Herzog?", "Which person is the spouse of Lena Herzog?", "Which person was the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "9",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of Margaret of Soissons, Queen of Armenia?", "Tell me the spouse of Margaret of Soissons, Queen of Armenia?", "What is the spouse of Margaret of Soissons, Queen of Armenia?", "What was the spouse of Margaret of Soissons, Queen of Armenia?", "Which person is the spouse of Margaret of Soissons, Queen of Armenia?", "Which person was the spouse of Margaret of Soissons, Queen of Armenia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Margaret_of_Soissons,_Queen_of_Armenia> <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Andreas Ekberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Andreas_Ekberg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Danilo Tognon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Danilo_Tognon> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Lorine Livington Pruette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lorine_Livington_Pruette> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Megan Lawrence?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Megan_Lawrence> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Nikolaos Ventouras?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Nikolaos_Ventouras> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Sani ol molk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sani_ol_molk> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Siniša Žugić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Siniša_Žugić> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born William Bagot, 2nd Baron Bagot?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/William_Bagot,_2nd_Baron_Bagot> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Witold Gerutto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Witold_Gerutto> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abdoullah Bamoussa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdoullah_Bamoussa> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abdul Waheed (field hockey)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdul_Waheed_(field_hockey)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abdulaziz Alshatti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdulaziz_Alshatti> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abdulrahman Al-Faihan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abdulrahman_Al-Faihan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Ahmad Alafasi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ahmad_Alafasi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Anatoliy Abdula?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anatoliy_Abdula> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Antun Herceg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Antun_Herceg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Astrit Hafizi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Astrit_Hafizi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Bojan Pandžić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Bojan_Pandžić> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Briana Provancha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Briana_Provancha> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Courtney Okolo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Courtney_Okolo> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Daryl Homer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Daryl_Homer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Edward Ling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Edward_Ling> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Francesco Boffo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Boffo> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Francesco Brici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Francesco_Brici> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Franciszek Szymura?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Franciszek_Szymura> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Frano Vićan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Frano_Vićan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born George Sime?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/George_Sime> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Giles Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Giles_Scott> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Giovan Francesco Buonamici?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Giovan_Francesco_Buonamici> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Grace McKenzie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grace_McKenzie> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Graham Dadds?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Graham_Dadds> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Hovhannes Avtandilyan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Hovhannes_Avtandilyan> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Ilya Mokretsov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ilya_Mokretsov> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Jan Brumovský?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Jan_Brumovský> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Kirstie Alora?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Kirstie_Alora> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Lala Abdul Rashid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lala_Abdul_Rashid> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Larry Hurtado?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Larry_Hurtado> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Luís Tinoco?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Luís_Tinoco> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Maximilien van Haaster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Maximilien_van_Haaster> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Mohammed Al-Hakim?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mohammed_Al-Hakim> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Monica Aksamit?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Monica_Aksamit> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Murder of Carolyn Wasilewski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Murder_of_Carolyn_Wasilewski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Norman Borrett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Norman_Borrett> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Olena Kravatska?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Olena_Kravatska> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Philip Skell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Philip_Skell> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Pierre Moussette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pierre_Moussette> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Piotr Kochanowski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Piotr_Kochanowski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Robin Lindsay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Robin_Lindsay> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Ruth Randall Edström?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Ruth_Randall_Edström> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Simon Lee Evans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Simon_Lee_Evans> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Sybil Fane, Countess of Westmorland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Sybil_Fane,_Countess_of_Westmorland> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Tamirat Tola?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Tamirat_Tola> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Yémi Apithy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Yémi_Apithy> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Domenico Marchiori?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Domenico_Marchiori> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Piero Ruzzante?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Piero_Ruzzante> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born A. C. Bhaktivedanta Swami Prabhupada?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/A._C._Bhaktivedanta_Swami_Prabhupada> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Aaron Burr?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Burr> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Aaron Copland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aaron_Copland> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abbie Hoffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abbie_Hoffman> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abraham Robinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_Robinson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Abraham de Moivre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Abraham_de_Moivre> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adalbert of Magdeburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adalbert_of_Magdeburg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adam Oehlenschläger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adam_Oehlenschläger> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adam Wiśniewski-Snerg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adam_Wiśniewski-Snerg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adi Shamir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adi_Shamir> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adlai Stevenson II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adlai_Stevenson_II> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adolf Loos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adolf_Loos> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adrian and Natalia of Nicomedia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrian_and_Natalia_of_Nicomedia> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adrien-Marie Legendre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrien-Marie_Legendre> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Adrienne Rich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Adrienne_Rich> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Akiko Yano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Akiko_Yano> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Al Pacino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Al_Pacino> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alain Prost?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alain_Prost> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alan Rickman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alan_Rickman> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alan Shearer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alan_Shearer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albert Abrams?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Abrams> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albert Brudzewski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Brudzewski> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albert Finney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albert_Finney> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albrecht Giese?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albrecht_Giese> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albrecht III Achilles, Elector of Brandenburg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albrecht_III_Achilles,_Elector_of_Brandenburg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Albus Dumbledore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Albus_Dumbledore> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Aldo Rossi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Aldo_Rossi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alec Jeffreys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alec_Jeffreys> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alessandro Manzoni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alessandro_Manzoni> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alex Cox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alex_Cox> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alex Ferguson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alex_Ferguson> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alexander Dallas Bache?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Dallas_Bache> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alexander Shulgin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Shulgin> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alexander Trocchi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexander_Trocchi> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alexandru Ioan Cuza?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alexandru_Ioan_Cuza> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Bester> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Jodl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Jodl> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Kinsey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Kinsey> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Marshall> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Meyer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Meyer> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred North Whitehead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_North_Whitehead> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alfred Rosenberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alfred_Rosenberg> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alice Miller (psychologist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alice_Miller_(psychologist)> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Alice Walker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Alice_Walker> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "12",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born Allan Pinkerton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Allan_Pinkerton> <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed 12 Monkeys?", "What directs 12 Monkeys?", "Which person directed 12 Monkeys?", "Which person directs 12 Monkeys?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/12_Monkeys> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed American Beauty (1999 film)?", "What directs American Beauty (1999 film)?", "Which person directed American Beauty (1999 film)?", "Which person directs American Beauty (1999 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/American_Beauty_(1999_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Amélie?", "What directs Amélie?", "Which person directed Amélie?", "Which person directs Amélie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Amélie> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Animal Crackers (1930 film)?", "What directs Animal Crackers (1930 film)?", "Which person directed Animal Crackers (1930 film)?", "Which person directs Animal Crackers (1930 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Animal_Crackers_(1930_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Anne of the Thousand Days?", "What directs Anne of the Thousand Days?", "Which person directed Anne of the Thousand Days?", "Which person directs Anne of the Thousand Days?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anne_of_the_Thousand_Days> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Anywhere but Here (film)?", "What directs Anywhere but Here (film)?", "Which person directed Anywhere but Here (film)?", "Which person directs Anywhere but Here (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Anywhere_but_Here_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Armageddon (1998 film)?", "What directs Armageddon (1998 film)?", "Which person directed Armageddon (1998 film)?", "Which person directs Armageddon (1998 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Armageddon_(1998_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Beautiful Girls (film)?", "What directs Beautiful Girls (film)?", "Which person directed Beautiful Girls (film)?", "Which person directs Beautiful Girls (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Beautiful_Girls_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Black Narcissus?", "What directs Black Narcissus?", "Which person directed Black Narcissus?", "Which person directs Black Narcissus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Black_Narcissus> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Breakfast at Tiffany's (film)?", "What directs Breakfast at Tiffany's (film)?", "Which person directed Breakfast at Tiffany's (film)?", "Which person directs Breakfast at Tiffany's (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Breakfast_at_Tiffany's_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Carry On (franchise)?", "What directs Carry On (franchise)?", "Which person directed Carry On (franchise)?", "Which person directs Carry On (franchise)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Carry_On_(franchise)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Casablanca (film)?", "What directs Casablanca (film)?", "Which person directed Casablanca (film)?", "Which person directs Casablanca (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Casablanca_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Cast Away?", "What directs Cast Away?", "Which person directed Cast Away?", "Which person directs Cast Away?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Cast_Away> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Chang: A Drama of the Wilderness?", "What directs Chang: A Drama of the Wilderness?", "Which person directed Chang: A Drama of the Wilderness?", "Which person directs Chang: A Drama of the Wilderness?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Chang:_A_Drama_of_the_Wilderness> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Coming to America?", "What directs Coming to America?", "Which person directed Coming to America?", "Which person directs Coming to America?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Coming_to_America> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Crossfire (film)?", "What directs Crossfire (film)?", "Which person directed Crossfire (film)?", "Which person directs Crossfire (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Crossfire_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Dinnerladies?", "What directs Dinnerladies?", "Which person directed Dinnerladies?", "Which person directs Dinnerladies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dinnerladies> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Donnie Darko?", "What directs Donnie Darko?", "Which person directed Donnie Darko?", "Which person directs Donnie Darko?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Donnie_Darko> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Dreams (TV series)?", "What directs Dreams (TV series)?", "Which person directed Dreams (TV series)?", "Which person directs Dreams (TV series)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Dreams_(TV_series)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Earth: Final Conflict?", "What directs Earth: Final Conflict?", "Which person directed Earth: Final Conflict?", "Which person directs Earth: Final Conflict?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Earth:_Final_Conflict> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Everyone Says I Love You?", "What directs Everyone Says I Love You?", "Which person directed Everyone Says I Love You?", "Which person directs Everyone Says I Love You?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Everyone_Says_I_Love_You> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Eyeball (film)?", "What directs Eyeball (film)?", "Which person directed Eyeball (film)?", "Which person directs Eyeball (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Eyeball_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy Adventure?", "What directs Final Fantasy Adventure?", "Which person directed Final Fantasy Adventure?", "Which person directs Final Fantasy Adventure?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_Adventure> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy II?", "What directs Final Fantasy II?", "Which person directed Final Fantasy II?", "Which person directs Final Fantasy II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_II> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy IV?", "What directs Final Fantasy IV?", "Which person directed Final Fantasy IV?", "Which person directs Final Fantasy IV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_IV> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy IX?", "What directs Final Fantasy IX?", "Which person directed Final Fantasy IX?", "Which person directs Final Fantasy IX?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_IX> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy Tactics?", "What directs Final Fantasy Tactics?", "Which person directed Final Fantasy Tactics?", "Which person directs Final Fantasy Tactics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_Tactics> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy V?", "What directs Final Fantasy V?", "Which person directed Final Fantasy V?", "Which person directs Final Fantasy V?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_V> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy VI?", "What directs Final Fantasy VI?", "Which person directed Final Fantasy VI?", "Which person directs Final Fantasy VI?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_VI> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy VII?", "What directs Final Fantasy VII?", "Which person directed Final Fantasy VII?", "Which person directs Final Fantasy VII?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_VII> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy VIII?", "What directs Final Fantasy VIII?", "Which person directed Final Fantasy VIII?", "Which person directs Final Fantasy VIII?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_VIII> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Final Fantasy X?", "What directs Final Fantasy X?", "Which person directed Final Fantasy X?", "Which person directs Final Fantasy X?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Final_Fantasy_X> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Forbidden Planet?", "What directs Forbidden Planet?", "Which person directed Forbidden Planet?", "Which person directs Forbidden Planet?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Forbidden_Planet> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Forrest Gump?", "What directs Forrest Gump?", "Which person directed Forrest Gump?", "Which person directs Forrest Gump?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Forrest_Gump> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed French Kiss (1995 film)?", "What directs French Kiss (1995 film)?", "Which person directed French Kiss (1995 film)?", "Which person directs French Kiss (1995 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/French_Kiss_(1995_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed From Here to Eternity?", "What directs From Here to Eternity?", "Which person directed From Here to Eternity?", "Which person directs From Here to Eternity?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/From_Here_to_Eternity> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Gattaca?", "What directs Gattaca?", "Which person directed Gattaca?", "Which person directs Gattaca?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gattaca> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Gentleman's Agreement?", "What directs Gentleman's Agreement?", "Which person directed Gentleman's Agreement?", "Which person directs Gentleman's Agreement?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Gentleman's_Agreement> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Going My Way?", "What directs Going My Way?", "Which person directed Going My Way?", "Which person directs Going My Way?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Going_My_Way> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Grand Hotel (1932 film)?", "What directs Grand Hotel (1932 film)?", "Which person directed Grand Hotel (1932 film)?", "Which person directs Grand Hotel (1932 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Grand_Hotel_(1932_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Green Card (film)?", "What directs Green Card (film)?", "Which person directed Green Card (film)?", "Which person directs Green Card (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Green_Card_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Heat (1995 film)?", "What directs Heat (1995 film)?", "Which person directed Heat (1995 film)?", "Which person directs Heat (1995 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Heat_(1995_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed In Old Arizona?", "What directs In Old Arizona?", "Which person directed In Old Arizona?", "Which person directs In Old Arizona?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/In_Old_Arizona> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed In the Bedroom?", "What directs In the Bedroom?", "Which person directed In the Bedroom?", "Which person directs In the Bedroom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/In_the_Bedroom> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Independence Day (1996 film)?", "What directs Independence Day (1996 film)?", "Which person directed Independence Day (1996 film)?", "Which person directs Independence Day (1996 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Independence_Day_(1996_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Indiana Jones and the Last Crusade?", "What directs Indiana Jones and the Last Crusade?", "Which person directed Indiana Jones and the Last Crusade?", "Which person directs Indiana Jones and the Last Crusade?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Indiana_Jones_and_the_Last_Crusade> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed It Happened One Night?", "What directs It Happened One Night?", "Which person directed It Happened One Night?", "Which person directs It Happened One Night?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/It_Happened_One_Night> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed K-19: The Widowmaker?", "What directs K-19: The Widowmaker?", "Which person directed K-19: The Widowmaker?", "Which person directs K-19: The Widowmaker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/K-19:_The_Widowmaker> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Lara Croft: Tomb Raider?", "What directs Lara Croft: Tomb Raider?", "Which person directed Lara Croft: Tomb Raider?", "Which person directs Lara Croft: Tomb Raider?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Lara_Croft:_Tomb_Raider> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Leaving Las Vegas?", "What directs Leaving Las Vegas?", "Which person directed Leaving Las Vegas?", "Which person directs Leaving Las Vegas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Leaving_Las_Vegas> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Looney Tunes?", "What directs Looney Tunes?", "Which person directed Looney Tunes?", "Which person directs Looney Tunes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Looney_Tunes> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Léon: The Professional?", "What directs Léon: The Professional?", "Which person directed Léon: The Professional?", "Which person directs Léon: The Professional?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Léon:_The_Professional> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Mars Needs Women?", "What directs Mars Needs Women?", "Which person directed Mars Needs Women?", "Which person directs Mars Needs Women?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mars_Needs_Women> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Marty (teleplay)?", "What directs Marty (teleplay)?", "Which person directed Marty (teleplay)?", "Which person directs Marty (teleplay)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Marty_(teleplay)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Metropolis (1927 film)?", "What directs Metropolis (1927 film)?", "Which person directed Metropolis (1927 film)?", "Which person directs Metropolis (1927 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Metropolis_(1927_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Midnight Cowboy?", "What directs Midnight Cowboy?", "Which person directed Midnight Cowboy?", "Which person directs Midnight Cowboy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Midnight_Cowboy> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Miller's Crossing?", "What directs Miller's Crossing?", "Which person directed Miller's Crossing?", "Which person directs Miller's Crossing?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Miller's_Crossing> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Mulan (1998 film)?", "What directs Mulan (1998 film)?", "Which person directed Mulan (1998 film)?", "Which person directs Mulan (1998 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Mulan_(1998_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Night of the Living Dead?", "What directs Night of the Living Dead?", "Which person directed Night of the Living Dead?", "Which person directs Night of the Living Dead?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Night_of_the_Living_Dead> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Noir (anime)?", "What directs Noir (anime)?", "Which person directed Noir (anime)?", "Which person directs Noir (anime)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Noir_(anime)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed On the Waterfront?", "What directs On the Waterfront?", "Which person directed On the Waterfront?", "Which person directs On the Waterfront?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/On_the_Waterfront> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Powaqqatsi?", "What directs Powaqqatsi?", "Which person directed Powaqqatsi?", "Which person directs Powaqqatsi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Powaqqatsi> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Pulp Fiction?", "What directs Pulp Fiction?", "Which person directed Pulp Fiction?", "Which person directs Pulp Fiction?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Pulp_Fiction> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Radiant Silvergun?", "What directs Radiant Silvergun?", "Which person directed Radiant Silvergun?", "Which person directs Radiant Silvergun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Radiant_Silvergun> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Raiders of the Lost Ark?", "What directs Raiders of the Lost Ark?", "Which person directed Raiders of the Lost Ark?", "Which person directs Raiders of the Lost Ark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Raiders_of_the_Lost_Ark> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Reds (film)?", "What directs Reds (film)?", "Which person directed Reds (film)?", "Which person directs Reds (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Reds_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Return of the Jedi?", "What directs Return of the Jedi?", "Which person directed Return of the Jedi?", "Which person directs Return of the Jedi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Return_of_the_Jedi> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Rocky?", "What directs Rocky?", "Which person directed Rocky?", "Which person directs Rocky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Rocky> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Salò, or the 120 Days of Sodom?", "What directs Salò, or the 120 Days of Sodom?", "Which person directed Salò, or the 120 Days of Sodom?", "Which person directs Salò, or the 120 Days of Sodom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Salò,_or_the_120_Days_of_Sodom> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed San Francisco (1936 film)?", "What directs San Francisco (1936 film)?", "Which person directed San Francisco (1936 film)?", "Which person directs San Francisco (1936 film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/San_Francisco_(1936_film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Saturday Night Fever?", "What directs Saturday Night Fever?", "Which person directed Saturday Night Fever?", "Which person directs Saturday Night Fever?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Saturday_Night_Fever> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Scared to Death?", "What directs Scared to Death?", "Which person directed Scared to Death?", "Which person directs Scared to Death?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Scared_to_Death> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Seven Samurai?", "What directs Seven Samurai?", "Which person directed Seven Samurai?", "Which person directs Seven Samurai?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Seven_Samurai> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Soylent Green?", "What directs Soylent Green?", "Which person directed Soylent Green?", "Which person directs Soylent Green?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Soylent_Green> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Space Battleship Yamato?", "What directs Space Battleship Yamato?", "Which person directed Space Battleship Yamato?", "Which person directs Space Battleship Yamato?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Space_Battleship_Yamato> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Star Wars: Episode II – Attack of the Clones?", "What directs Star Wars: Episode II – Attack of the Clones?", "Which person directed Star Wars: Episode II – Attack of the Clones?", "Which person directs Star Wars: Episode II – Attack of the Clones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Star_Wars:_Episode_II_–_Attack_of_the_Clones> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Star Wars: Episode I – The Phantom Menace?", "What directs Star Wars: Episode I – The Phantom Menace?", "Which person directed Star Wars: Episode I – The Phantom Menace?", "Which person directs Star Wars: Episode I – The Phantom Menace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Star_Wars:_Episode_I_–_The_Phantom_Menace> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Star Wars (film)?", "What directs Star Wars (film)?", "Which person directed Star Wars (film)?", "Which person directs Star Wars (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Star_Wars_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed System Shock?", "What directs System Shock?", "Which person directed System Shock?", "Which person directs System Shock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/System_Shock> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed THX 1138?", "What directs THX 1138?", "Which person directed THX 1138?", "Which person directs THX 1138?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/THX_1138> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed Taxi Driver?", "What directs Taxi Driver?", "Which person directed Taxi Driver?", "Which person directs Taxi Driver?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/Taxi_Driver> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Apartment?", "What directs The Apartment?", "Which person directed The Apartment?", "Which person directs The Apartment?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Apartment> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Best Years of Our Lives?", "What directs The Best Years of Our Lives?", "Which person directed The Best Years of Our Lives?", "Which person directs The Best Years of Our Lives?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Best_Years_of_Our_Lives> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Big Country?", "What directs The Big Country?", "Which person directed The Big Country?", "Which person directs The Big Country?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Big_Country> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Big Fisherman?", "What directs The Big Fisherman?", "Which person directed The Big Fisherman?", "Which person directs The Big Fisherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Big_Fisherman> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Big Lebowski?", "What directs The Big Lebowski?", "Which person directed The Big Lebowski?", "Which person directs The Big Lebowski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Big_Lebowski> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Brady Bunch?", "What directs The Brady Bunch?", "Which person directed The Brady Bunch?", "Which person directs The Brady Bunch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Brady_Bunch> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Breakfast Club?", "What directs The Breakfast Club?", "Which person directed The Breakfast Club?", "Which person directs The Breakfast Club?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Breakfast_Club> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Crying Game?", "What directs The Crying Game?", "Which person directed The Crying Game?", "Which person directs The Crying Game?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Crying_Game> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Day After?", "What directs The Day After?", "Which person directed The Day After?", "Which person directs The Day After?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Day_After> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Empire Strikes Back?", "What directs The Empire Strikes Back?", "Which person directed The Empire Strikes Back?", "Which person directs The Empire Strikes Back?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Empire_Strikes_Back> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Graduate?", "What directs The Graduate?", "Which person directed The Graduate?", "Which person directs The Graduate?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Graduate> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Great Ziegfeld?", "What directs The Great Ziegfeld?", "Which person directed The Great Ziegfeld?", "Which person directs The Great Ziegfeld?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Great_Ziegfeld> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Greatest Show on Earth (film)?", "What directs The Greatest Show on Earth (film)?", "Which person directed The Greatest Show on Earth (film)?", "Which person directs The Greatest Show on Earth (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Greatest_Show_on_Earth_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Hollywood Revue of 1929?", "What directs The Hollywood Revue of 1929?", "Which person directed The Hollywood Revue of 1929?", "Which person directs The Hollywood Revue of 1929?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Hollywood_Revue_of_1929> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Incredible Shrinking Man?", "What directs The Incredible Shrinking Man?", "Which person directed The Incredible Shrinking Man?", "Which person directs The Incredible Shrinking Man?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Incredible_Shrinking_Man> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Last Laugh?", "What directs The Last Laugh?", "Which person directed The Last Laugh?", "Which person directs The Last Laugh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Last_Laugh> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Life of Emile Zola?", "What directs The Life of Emile Zola?", "Which person directed The Life of Emile Zola?", "Which person directs The Life of Emile Zola?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Life_of_Emile_Zola> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Little Girl Who Lives Down the Lane?", "What directs The Little Girl Who Lives Down the Lane?", "Which person directed The Little Girl Who Lives Down the Lane?", "Which person directs The Little Girl Who Lives Down the Lane?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Little_Girl_Who_Lives_Down_the_Lane> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "13",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "FILM",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed The Lost Weekend (film)?", "What directs The Lost Weekend (film)?", "Which person directed The Lost Weekend (film)?", "Which person directs The Lost Weekend (film)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple <http://dbpedia.org/resource/The_Lost_Weekend_(film)> <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Al Pacino?", "What was directed by Al Pacino?", "Which movie is directed by Al Pacino?", "Which movie was directed by Al Pacino?", "Which movies are directed by Al Pacino?", "Which movies were directed by Al Pacino?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Al_Pacino>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Alan Rickman?", "What was directed by Alan Rickman?", "Which movie is directed by Alan Rickman?", "Which movie was directed by Alan Rickman?", "Which movies are directed by Alan Rickman?", "Which movies were directed by Alan Rickman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Alan_Rickman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Albert Finney?", "What was directed by Albert Finney?", "Which movie is directed by Albert Finney?", "Which movie was directed by Albert Finney?", "Which movies are directed by Albert Finney?", "Which movies were directed by Albert Finney?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Albert_Finney>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Alex Cox?", "What was directed by Alex Cox?", "Which movie is directed by Alex Cox?", "Which movie was directed by Alex Cox?", "Which movies are directed by Alex Cox?", "Which movies were directed by Alex Cox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Alex_Cox>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Andrzej Wajda?", "What was directed by Andrzej Wajda?", "Which movie is directed by Andrzej Wajda?", "Which movie was directed by Andrzej Wajda?", "Which movies are directed by Andrzej Wajda?", "Which movies were directed by Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Andrzej_Wajda>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Andrzej Żuławski?", "What was directed by Andrzej Żuławski?", "Which movie is directed by Andrzej Żuławski?", "Which movie was directed by Andrzej Żuławski?", "Which movies are directed by Andrzej Żuławski?", "Which movies were directed by Andrzej Żuławski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Andrzej_Żuławski>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by André Malraux?", "What was directed by André Malraux?", "Which movie is directed by André Malraux?", "Which movie was directed by André Malraux?", "Which movies are directed by André Malraux?", "Which movies were directed by André Malraux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/André_Malraux>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Anthony Quinn?", "What was directed by Anthony Quinn?", "Which movie is directed by Anthony Quinn?", "Which movie was directed by Anthony Quinn?", "Which movies are directed by Anthony Quinn?", "Which movies were directed by Anthony Quinn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Anthony_Quinn>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Antonio Banderas?", "What was directed by Antonio Banderas?", "Which movie is directed by Antonio Banderas?", "Which movie was directed by Antonio Banderas?", "Which movies are directed by Antonio Banderas?", "Which movies were directed by Antonio Banderas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Antonio_Banderas>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Ashley Judd?", "What was directed by Ashley Judd?", "Which movie is directed by Ashley Judd?", "Which movie was directed by Ashley Judd?", "Which movies are directed by Ashley Judd?", "Which movies were directed by Ashley Judd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ashley_Judd>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Ben Elton?", "What was directed by Ben Elton?", "Which movie is directed by Ben Elton?", "Which movie was directed by Ben Elton?", "Which movies are directed by Ben Elton?", "Which movies were directed by Ben Elton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ben_Elton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Bernardo Bertolucci?", "What was directed by Bernardo Bertolucci?", "Which movie is directed by Bernardo Bertolucci?", "Which movie was directed by Bernardo Bertolucci?", "Which movies are directed by Bernardo Bertolucci?", "Which movies were directed by Bernardo Bertolucci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Bernardo_Bertolucci>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Bill Hicks?", "What was directed by Bill Hicks?", "Which movie is directed by Bill Hicks?", "Which movie was directed by Bill Hicks?", "Which movies are directed by Bill Hicks?", "Which movies were directed by Bill Hicks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Bill_Hicks>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Billy Wilder?", "What was directed by Billy Wilder?", "Which movie is directed by Billy Wilder?", "Which movie was directed by Billy Wilder?", "Which movies are directed by Billy Wilder?", "Which movies were directed by Billy Wilder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Billy_Wilder>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Blake Edwards?", "What was directed by Blake Edwards?", "Which movie is directed by Blake Edwards?", "Which movie was directed by Blake Edwards?", "Which movies are directed by Blake Edwards?", "Which movies were directed by Blake Edwards?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Blake_Edwards>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Bruce Lee?", "What was directed by Bruce Lee?", "Which movie is directed by Bruce Lee?", "Which movie was directed by Bruce Lee?", "Which movies are directed by Bruce Lee?", "Which movies were directed by Bruce Lee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Bruce_Lee>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Buster Keaton?", "What was directed by Buster Keaton?", "Which movie is directed by Buster Keaton?", "Which movie was directed by Buster Keaton?", "Which movies are directed by Buster Keaton?", "Which movies were directed by Buster Keaton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Buster_Keaton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Cesare Zavattini?", "What was directed by Cesare Zavattini?", "Which movie is directed by Cesare Zavattini?", "Which movie was directed by Cesare Zavattini?", "Which movies are directed by Cesare Zavattini?", "Which movies were directed by Cesare Zavattini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Cesare_Zavattini>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Charlton Heston?", "What was directed by Charlton Heston?", "Which movie is directed by Charlton Heston?", "Which movie was directed by Charlton Heston?", "Which movies are directed by Charlton Heston?", "Which movies were directed by Charlton Heston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Charlton_Heston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Clint Eastwood?", "What was directed by Clint Eastwood?", "Which movie is directed by Clint Eastwood?", "Which movie was directed by Clint Eastwood?", "Which movies are directed by Clint Eastwood?", "Which movies were directed by Clint Eastwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Dan Aykroyd?", "What was directed by Dan Aykroyd?", "Which movie is directed by Dan Aykroyd?", "Which movie was directed by Dan Aykroyd?", "Which movies are directed by Dan Aykroyd?", "Which movies were directed by Dan Aykroyd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Dan_Aykroyd>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Don Siegel?", "What was directed by Don Siegel?", "Which movie is directed by Don Siegel?", "Which movie was directed by Don Siegel?", "Which movies are directed by Don Siegel?", "Which movies were directed by Don Siegel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Don_Siegel>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Dustin Hoffman?", "What was directed by Dustin Hoffman?", "Which movie is directed by Dustin Hoffman?", "Which movie was directed by Dustin Hoffman?", "Which movies are directed by Dustin Hoffman?", "Which movies were directed by Dustin Hoffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Dustin_Hoffman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Elia Kazan?", "What was directed by Elia Kazan?", "Which movie is directed by Elia Kazan?", "Which movie was directed by Elia Kazan?", "Which movies are directed by Elia Kazan?", "Which movies were directed by Elia Kazan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Elia_Kazan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Engineer?", "What was directed by Engineer?", "Which movie is directed by Engineer?", "Which movie was directed by Engineer?", "Which movies are directed by Engineer?", "Which movies were directed by Engineer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Engineer>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Eric Idle?", "What was directed by Eric Idle?", "Which movie is directed by Eric Idle?", "Which movie was directed by Eric Idle?", "Which movies are directed by Eric Idle?", "Which movies were directed by Eric Idle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Eric_Idle>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Franco Zeffirelli?", "What was directed by Franco Zeffirelli?", "Which movie is directed by Franco Zeffirelli?", "Which movie was directed by Franco Zeffirelli?", "Which movies are directed by Franco Zeffirelli?", "Which movies were directed by Franco Zeffirelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Franco_Zeffirelli>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by George Marshall?", "What was directed by George Marshall?", "Which movie is directed by George Marshall?", "Which movie was directed by George Marshall?", "Which movies are directed by George Marshall?", "Which movies were directed by George Marshall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/George_Marshall>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Georges Perec?", "What was directed by Georges Perec?", "Which movie is directed by Georges Perec?", "Which movie was directed by Georges Perec?", "Which movies are directed by Georges Perec?", "Which movies were directed by Georges Perec?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Georges_Perec>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Gillian Anderson?", "What was directed by Gillian Anderson?", "Which movie is directed by Gillian Anderson?", "Which movie was directed by Gillian Anderson?", "Which movies are directed by Gillian Anderson?", "Which movies were directed by Gillian Anderson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Gillian_Anderson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Godfrey Reggio?", "What was directed by Godfrey Reggio?", "Which movie is directed by Godfrey Reggio?", "Which movie was directed by Godfrey Reggio?", "Which movies are directed by Godfrey Reggio?", "Which movies were directed by Godfrey Reggio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Godfrey_Reggio>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Gérard Depardieu?", "What was directed by Gérard Depardieu?", "Which movie is directed by Gérard Depardieu?", "Which movie was directed by Gérard Depardieu?", "Which movies are directed by Gérard Depardieu?", "Which movies were directed by Gérard Depardieu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Gérard_Depardieu>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Hans Richter (artist)?", "What was directed by Hans Richter (artist)?", "Which movie is directed by Hans Richter (artist)?", "Which movie was directed by Hans Richter (artist)?", "Which movies are directed by Hans Richter (artist)?", "Which movies were directed by Hans Richter (artist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Hans_Richter_(artist)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Harry Enfield?", "What was directed by Harry Enfield?", "Which movie is directed by Harry Enfield?", "Which movie was directed by Harry Enfield?", "Which movies are directed by Harry Enfield?", "Which movies were directed by Harry Enfield?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Harry_Enfield>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Harry Houdini?", "What was directed by Harry Houdini?", "Which movie is directed by Harry Houdini?", "Which movie was directed by Harry Houdini?", "Which movies are directed by Harry Houdini?", "Which movies were directed by Harry Houdini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Harry_Houdini>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Helen Hunt?", "What was directed by Helen Hunt?", "Which movie is directed by Helen Hunt?", "Which movie was directed by Helen Hunt?", "Which movies are directed by Helen Hunt?", "Which movies were directed by Helen Hunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Helen_Hunt>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Jennifer Aniston?", "What was directed by Jennifer Aniston?", "Which movie is directed by Jennifer Aniston?", "Which movie was directed by Jennifer Aniston?", "Which movies are directed by Jennifer Aniston?", "Which movies were directed by Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Jennifer_Aniston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by John Carmack?", "What was directed by John Carmack?", "Which movie is directed by John Carmack?", "Which movie was directed by John Carmack?", "Which movies are directed by John Carmack?", "Which movies were directed by John Carmack?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Carmack>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by John Carpenter?", "What was directed by John Carpenter?", "Which movie is directed by John Carpenter?", "Which movie was directed by John Carpenter?", "Which movies are directed by John Carpenter?", "Which movies were directed by John Carpenter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Carpenter>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by John Huston?", "What was directed by John Huston?", "Which movie is directed by John Huston?", "Which movie was directed by John Huston?", "Which movies are directed by John Huston?", "Which movies were directed by John Huston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Huston>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Laetitia Casta?", "What was directed by Laetitia Casta?", "Which movie is directed by Laetitia Casta?", "Which movie was directed by Laetitia Casta?", "Which movies are directed by Laetitia Casta?", "Which movies were directed by Laetitia Casta?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Laetitia_Casta>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Larry Gelbart?", "What was directed by Larry Gelbart?", "Which movie is directed by Larry Gelbart?", "Which movie was directed by Larry Gelbart?", "Which movies are directed by Larry Gelbart?", "Which movies were directed by Larry Gelbart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Larry_Gelbart>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Laurence Olivier?", "What was directed by Laurence Olivier?", "Which movie is directed by Laurence Olivier?", "Which movie was directed by Laurence Olivier?", "Which movies are directed by Laurence Olivier?", "Which movies were directed by Laurence Olivier?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Laurence_Olivier>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Leonard Nimoy?", "What was directed by Leonard Nimoy?", "Which movie is directed by Leonard Nimoy?", "Which movie was directed by Leonard Nimoy?", "Which movies are directed by Leonard Nimoy?", "Which movies were directed by Leonard Nimoy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Leonard_Nimoy>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Les Claypool?", "What was directed by Les Claypool?", "Which movie is directed by Les Claypool?", "Which movie was directed by Les Claypool?", "Which movies are directed by Les Claypool?", "Which movies were directed by Les Claypool?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Les_Claypool>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Luc Besson?", "What was directed by Luc Besson?", "Which movie is directed by Luc Besson?", "Which movie was directed by Luc Besson?", "Which movies are directed by Luc Besson?", "Which movies were directed by Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Luc_Besson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Luchino Visconti?", "What was directed by Luchino Visconti?", "Which movie is directed by Luchino Visconti?", "Which movie was directed by Luchino Visconti?", "Which movies are directed by Luchino Visconti?", "Which movies were directed by Luchino Visconti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Luchino_Visconti>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Mai Zetterling?", "What was directed by Mai Zetterling?", "Which movie is directed by Mai Zetterling?", "Which movie was directed by Mai Zetterling?", "Which movies are directed by Mai Zetterling?", "Which movies were directed by Mai Zetterling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Mai_Zetterling>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Marc Connelly?", "What was directed by Marc Connelly?", "Which movie is directed by Marc Connelly?", "Which movie was directed by Marc Connelly?", "Which movies are directed by Marc Connelly?", "Which movies were directed by Marc Connelly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Marc_Connelly>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Marty Feldman?", "What was directed by Marty Feldman?", "Which movie is directed by Marty Feldman?", "Which movie was directed by Marty Feldman?", "Which movies are directed by Marty Feldman?", "Which movies were directed by Marty Feldman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Marty_Feldman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Max Reinhardt?", "What was directed by Max Reinhardt?", "Which movie is directed by Max Reinhardt?", "Which movie was directed by Max Reinhardt?", "Which movies are directed by Max Reinhardt?", "Which movies were directed by Max Reinhardt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Max_Reinhardt>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Meg Ryan?", "What was directed by Meg Ryan?", "Which movie is directed by Meg Ryan?", "Which movie was directed by Meg Ryan?", "Which movies are directed by Meg Ryan?", "Which movies were directed by Meg Ryan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Meg_Ryan>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Mel Gibson?", "What was directed by Mel Gibson?", "Which movie is directed by Mel Gibson?", "Which movie was directed by Mel Gibson?", "Which movies are directed by Mel Gibson?", "Which movies were directed by Mel Gibson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Mel_Gibson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Michelangelo Antonioni?", "What was directed by Michelangelo Antonioni?", "Which movie is directed by Michelangelo Antonioni?", "Which movie was directed by Michelangelo Antonioni?", "Which movies are directed by Michelangelo Antonioni?", "Which movies were directed by Michelangelo Antonioni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michelangelo_Antonioni>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Micky Dolenz?", "What was directed by Micky Dolenz?", "Which movie is directed by Micky Dolenz?", "Which movie was directed by Micky Dolenz?", "Which movies are directed by Micky Dolenz?", "Which movies were directed by Micky Dolenz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Micky_Dolenz>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Miloš Forman?", "What was directed by Miloš Forman?", "Which movie is directed by Miloš Forman?", "Which movie was directed by Miloš Forman?", "Which movies are directed by Miloš Forman?", "Which movies were directed by Miloš Forman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Miloš_Forman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Moustapha Akkad?", "What was directed by Moustapha Akkad?", "Which movie is directed by Moustapha Akkad?", "Which movie was directed by Moustapha Akkad?", "Which movies are directed by Moustapha Akkad?", "Which movies were directed by Moustapha Akkad?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Moustapha_Akkad>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Natalie Portman?", "What was directed by Natalie Portman?", "Which movie is directed by Natalie Portman?", "Which movie was directed by Natalie Portman?", "Which movies are directed by Natalie Portman?", "Which movies were directed by Natalie Portman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Natalie_Portman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Norman Cook?", "What was directed by Norman Cook?", "Which movie is directed by Norman Cook?", "Which movie was directed by Norman Cook?", "Which movies are directed by Norman Cook?", "Which movies were directed by Norman Cook?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Norman_Cook>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Otto Preminger?", "What was directed by Otto Preminger?", "Which movie is directed by Otto Preminger?", "Which movie was directed by Otto Preminger?", "Which movies are directed by Otto Preminger?", "Which movies were directed by Otto Preminger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Otto_Preminger>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Paul Newman?", "What was directed by Paul Newman?", "Which movie is directed by Paul Newman?", "Which movie was directed by Paul Newman?", "Which movies are directed by Paul Newman?", "Which movies were directed by Paul Newman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Paul_Newman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Peter Bogdanovich?", "What was directed by Peter Bogdanovich?", "Which movie is directed by Peter Bogdanovich?", "Which movie was directed by Peter Bogdanovich?", "Which movies are directed by Peter Bogdanovich?", "Which movies were directed by Peter Bogdanovich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Peter_Bogdanovich>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Peter Greenaway?", "What was directed by Peter Greenaway?", "Which movie is directed by Peter Greenaway?", "Which movie was directed by Peter Greenaway?", "Which movies are directed by Peter Greenaway?", "Which movies were directed by Peter Greenaway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Peter_Greenaway>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Peter Weir?", "What was directed by Peter Weir?", "Which movie is directed by Peter Weir?", "Which movie was directed by Peter Weir?", "Which movies are directed by Peter Weir?", "Which movies were directed by Peter Weir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Peter_Weir>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Prince (musician)?", "What was directed by Prince (musician)?", "Which movie is directed by Prince (musician)?", "Which movie was directed by Prince (musician)?", "Which movies are directed by Prince (musician)?", "Which movies were directed by Prince (musician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Prince_(musician)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by R. Kelly?", "What was directed by R. Kelly?", "Which movie is directed by R. Kelly?", "Which movie was directed by R. Kelly?", "Which movies are directed by R. Kelly?", "Which movies were directed by R. Kelly?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/R._Kelly>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Ray Milland?", "What was directed by Ray Milland?", "Which movie is directed by Ray Milland?", "Which movie was directed by Ray Milland?", "Which movies are directed by Ray Milland?", "Which movies were directed by Ray Milland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ray_Milland>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Rebecca De Mornay?", "What was directed by Rebecca De Mornay?", "Which movie is directed by Rebecca De Mornay?", "Which movie was directed by Rebecca De Mornay?", "Which movies are directed by Rebecca De Mornay?", "Which movies were directed by Rebecca De Mornay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Rebecca_De_Mornay>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by René Goscinny?", "What was directed by René Goscinny?", "Which movie is directed by René Goscinny?", "Which movie was directed by René Goscinny?", "Which movies are directed by René Goscinny?", "Which movies were directed by René Goscinny?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/René_Goscinny>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Richard Burton?", "What was directed by Richard Burton?", "Which movie is directed by Richard Burton?", "Which movie was directed by Richard Burton?", "Which movies are directed by Richard Burton?", "Which movies were directed by Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Richard_Burton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Robert Altman?", "What was directed by Robert Altman?", "Which movie is directed by Robert Altman?", "Which movie was directed by Robert Altman?", "Which movies are directed by Robert Altman?", "Which movies were directed by Robert Altman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Robert_Altman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Roberto Benigni?", "What was directed by Roberto Benigni?", "Which movie is directed by Roberto Benigni?", "Which movie was directed by Roberto Benigni?", "Which movies are directed by Roberto Benigni?", "Which movies were directed by Roberto Benigni?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Roberto_Benigni>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Roberto Rossellini?", "What was directed by Roberto Rossellini?", "Which movie is directed by Roberto Rossellini?", "Which movie was directed by Roberto Rossellini?", "Which movies are directed by Roberto Rossellini?", "Which movies were directed by Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Roberto_Rossellini>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Sam Raimi?", "What was directed by Sam Raimi?", "Which movie is directed by Sam Raimi?", "Which movie was directed by Sam Raimi?", "Which movies are directed by Sam Raimi?", "Which movies were directed by Sam Raimi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sam_Raimi>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Sandra Bullock?", "What was directed by Sandra Bullock?", "Which movie is directed by Sandra Bullock?", "Which movie was directed by Sandra Bullock?", "Which movies are directed by Sandra Bullock?", "Which movies were directed by Sandra Bullock?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sandra_Bullock>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Sergio Leone?", "What was directed by Sergio Leone?", "Which movie is directed by Sergio Leone?", "Which movie was directed by Sergio Leone?", "Which movies are directed by Sergio Leone?", "Which movies were directed by Sergio Leone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sergio_Leone>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Sergio Tofano?", "What was directed by Sergio Tofano?", "Which movie is directed by Sergio Tofano?", "Which movie was directed by Sergio Tofano?", "Which movies are directed by Sergio Tofano?", "Which movies were directed by Sergio Tofano?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sergio_Tofano>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Sophie Marceau?", "What was directed by Sophie Marceau?", "Which movie is directed by Sophie Marceau?", "Which movie was directed by Sophie Marceau?", "Which movies are directed by Sophie Marceau?", "Which movies were directed by Sophie Marceau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sophie_Marceau>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Ted Demme?", "What was directed by Ted Demme?", "Which movie is directed by Ted Demme?", "Which movie was directed by Ted Demme?", "Which movies are directed by Ted Demme?", "Which movies were directed by Ted Demme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ted_Demme>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Terence Hill?", "What was directed by Terence Hill?", "Which movie is directed by Terence Hill?", "Which movie was directed by Terence Hill?", "Which movies are directed by Terence Hill?", "Which movies were directed by Terence Hill?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Terence_Hill>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Terry Gilliam?", "What was directed by Terry Gilliam?", "Which movie is directed by Terry Gilliam?", "Which movie was directed by Terry Gilliam?", "Which movies are directed by Terry Gilliam?", "Which movies were directed by Terry Gilliam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Terry_Gilliam>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Terry Jones?", "What was directed by Terry Jones?", "Which movie is directed by Terry Jones?", "Which movie was directed by Terry Jones?", "Which movies are directed by Terry Jones?", "Which movies were directed by Terry Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Terry_Jones>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by The Beatles?", "What was directed by The Beatles?", "Which movie is directed by The Beatles?", "Which movie was directed by The Beatles?", "Which movies are directed by The Beatles?", "Which movies were directed by The Beatles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/The_Beatles>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by The Residents?", "What was directed by The Residents?", "Which movie is directed by The Residents?", "Which movie was directed by The Residents?", "Which movies are directed by The Residents?", "Which movies were directed by The Residents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/The_Residents>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by The Wachowskis?", "What was directed by The Wachowskis?", "Which movie is directed by The Wachowskis?", "Which movie was directed by The Wachowskis?", "Which movies are directed by The Wachowskis?", "Which movies were directed by The Wachowskis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/The_Wachowskis>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Thomas Edison?", "What was directed by Thomas Edison?", "Which movie is directed by Thomas Edison?", "Which movie was directed by Thomas Edison?", "Which movies are directed by Thomas Edison?", "Which movies were directed by Thomas Edison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Thomas_Edison>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Thomas Vinterberg?", "What was directed by Thomas Vinterberg?", "Which movie is directed by Thomas Vinterberg?", "Which movie was directed by Thomas Vinterberg?", "Which movies are directed by Thomas Vinterberg?", "Which movies were directed by Thomas Vinterberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Thomas_Vinterberg>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Thor Heyerdahl?", "What was directed by Thor Heyerdahl?", "Which movie is directed by Thor Heyerdahl?", "Which movie was directed by Thor Heyerdahl?", "Which movies are directed by Thor Heyerdahl?", "Which movies were directed by Thor Heyerdahl?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Thor_Heyerdahl>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tim Burton?", "What was directed by Tim Burton?", "Which movie is directed by Tim Burton?", "Which movie was directed by Tim Burton?", "Which movies are directed by Tim Burton?", "Which movies were directed by Tim Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tim_Burton>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tod Browning?", "What was directed by Tod Browning?", "Which movie is directed by Tod Browning?", "Which movie was directed by Tod Browning?", "Which movies are directed by Tod Browning?", "Which movies were directed by Tod Browning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tod_Browning>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tom Hanks?", "What was directed by Tom Hanks?", "Which movie is directed by Tom Hanks?", "Which movie was directed by Tom Hanks?", "Which movies are directed by Tom Hanks?", "Which movies were directed by Tom Hanks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tom_Hanks>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tom Stoppard?", "What was directed by Tom Stoppard?", "Which movie is directed by Tom Stoppard?", "Which movie was directed by Tom Stoppard?", "Which movies are directed by Tom Stoppard?", "Which movies were directed by Tom Stoppard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tom_Stoppard>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tony Richardson?", "What was directed by Tony Richardson?", "Which movie is directed by Tony Richardson?", "Which movie was directed by Tony Richardson?", "Which movies are directed by Tony Richardson?", "Which movies were directed by Tony Richardson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tony_Richardson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Tracey Ullman?", "What was directed by Tracey Ullman?", "Which movie is directed by Tracey Ullman?", "Which movie was directed by Tracey Ullman?", "Which movies are directed by Tracey Ullman?", "Which movies were directed by Tracey Ullman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tracey_Ullman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Ub Iwerks?", "What was directed by Ub Iwerks?", "Which movie is directed by Ub Iwerks?", "Which movie was directed by Ub Iwerks?", "Which movies are directed by Ub Iwerks?", "Which movies were directed by Ub Iwerks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ub_Iwerks>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Vincent Ward (director)?", "What was directed by Vincent Ward (director)?", "Which movie is directed by Vincent Ward (director)?", "Which movie was directed by Vincent Ward (director)?", "Which movies are directed by Vincent Ward (director)?", "Which movies were directed by Vincent Ward (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Vincent_Ward_(director)>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Vittorio De Sica?", "What was directed by Vittorio De Sica?", "Which movie is directed by Vittorio De Sica?", "Which movie was directed by Vittorio De Sica?", "Which movies are directed by Vittorio De Sica?", "Which movies were directed by Vittorio De Sica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Vittorio_De_Sica>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Vittorio Gassman?", "What was directed by Vittorio Gassman?", "Which movie is directed by Vittorio Gassman?", "Which movie was directed by Vittorio Gassman?", "Which movies are directed by Vittorio Gassman?", "Which movies were directed by Vittorio Gassman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Vittorio_Gassman>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by Werner Herzog?", "What was directed by Werner Herzog?", "Which movie is directed by Werner Herzog?", "Which movie was directed by Werner Herzog?", "Which movies are directed by Werner Herzog?", "Which movies were directed by Werner Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Werner_Herzog>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "58",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by William Kennedy Dickson?", "What was directed by William Kennedy Dickson?", "Which movie is directed by William Kennedy Dickson?", "Which movie was directed by William Kennedy Dickson?", "Which movies are directed by William Kennedy Dickson?", "Which movies were directed by William Kennedy Dickson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/William_Kennedy_Dickson>))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1969-12-17?", "What was born by 1969-12-17?", "Which person is born by 1969-12-17?", "Which person was born by 1969-12-17?", "Which persons are born by 1969-12-17?", "Which persons were born by 1969-12-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1969-12-17\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1936-11-30?", "What was born by 1936-11-30?", "Which person is born by 1936-11-30?", "Which person was born by 1936-11-30?", "Which persons are born by 1936-11-30?", "Which persons were born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1990-10-30?", "What was born by 1990-10-30?", "Which person is born by 1990-10-30?", "Which person was born by 1990-10-30?", "Which persons are born by 1990-10-30?", "Which persons were born by 1990-10-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1990-10-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1976-11-12?", "What was born by 1976-11-12?", "Which person is born by 1976-11-12?", "Which person was born by 1976-11-12?", "Which persons are born by 1976-11-12?", "Which persons were born by 1976-11-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1976-11-12\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1989-11-29?", "What was born by 1989-11-29?", "Which person is born by 1989-11-29?", "Which person was born by 1989-11-29?", "Which persons are born by 1989-11-29?", "Which persons were born by 1989-11-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1989-11-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1943-12-29?", "What was born by 1943-12-29?", "Which person is born by 1943-12-29?", "Which person was born by 1943-12-29?", "Which persons are born by 1943-12-29?", "Which persons were born by 1943-12-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-12-29\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1918-12-30?", "What was born by 1918-12-30?", "Which person is born by 1918-12-30?", "Which person was born by 1918-12-30?", "Which persons are born by 1918-12-30?", "Which persons were born by 1918-12-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-12-30\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1975-10-13?", "What was born by 1975-10-13?", "Which person is born by 1975-10-13?", "Which person was born by 1975-10-13?", "Which persons are born by 1975-10-13?", "Which persons were born by 1975-10-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1975-10-13\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1896-09-01?", "What was born by 1896-09-01?", "Which person is born by 1896-09-01?", "Which person was born by 1896-09-01?", "Which persons are born by 1896-09-01?", "Which persons were born by 1896-09-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1896-09-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1756-02-06?", "What was born by 1756-02-06?", "Which person is born by 1756-02-06?", "Which person was born by 1756-02-06?", "Which persons are born by 1756-02-06?", "Which persons were born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1900-11-14?", "What was born by 1900-11-14?", "Which person is born by 1900-11-14?", "Which person was born by 1900-11-14?", "Which persons are born by 1900-11-14?", "Which persons were born by 1900-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-11-14\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1918-10-06?", "What was born by 1918-10-06?", "Which person is born by 1918-10-06?", "Which person was born by 1918-10-06?", "Which persons are born by 1918-10-06?", "Which persons were born by 1918-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-10-06\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1667-05-26?", "What was born by 1667-05-26?", "Which person is born by 1667-05-26?", "Which person was born by 1667-05-26?", "Which persons are born by 1667-05-26?", "Which persons were born by 1667-05-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1667-05-26\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1779-11-14?", "What was born by 1779-11-14?", "Which person is born by 1779-11-14?", "Which person was born by 1779-11-14?", "Which persons are born by 1779-11-14?", "Which persons were born by 1779-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1779-11-14\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1937-01-01?", "What was born by 1937-01-01?", "Which person is born by 1937-01-01?", "Which person was born by 1937-01-01?", "Which persons are born by 1937-01-01?", "Which persons were born by 1937-01-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1937-01-01\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1952-07-06?", "What was born by 1952-07-06?", "Which person is born by 1952-07-06?", "Which person was born by 1952-07-06?", "Which persons are born by 1952-07-06?", "Which persons were born by 1952-07-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-06\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1900-02-05?", "What was born by 1900-02-05?", "Which person is born by 1900-02-05?", "Which person was born by 1900-02-05?", "Which persons are born by 1900-02-05?", "Which persons were born by 1900-02-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-02-05\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1870-12-10?", "What was born by 1870-12-10?", "Which person is born by 1870-12-10?", "Which person was born by 1870-12-10?", "Which persons are born by 1870-12-10?", "Which persons were born by 1870-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1870-12-10\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1752-09-18?", "What was born by 1752-09-18?", "Which person is born by 1752-09-18?", "Which person was born by 1752-09-18?", "Which persons are born by 1752-09-18?", "Which persons were born by 1752-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1752-09-18\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1929-05-16?", "What was born by 1929-05-16?", "Which person is born by 1929-05-16?", "Which person was born by 1929-05-16?", "Which persons are born by 1929-05-16?", "Which persons were born by 1929-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1929-05-16\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1955-02-13?", "What was born by 1955-02-13?", "Which person is born by 1955-02-13?", "Which person was born by 1955-02-13?", "Which persons are born by 1955-02-13?", "Which persons were born by 1955-02-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1955-02-13\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1940-04-25?", "What was born by 1940-04-25?", "Which person is born by 1940-04-25?", "Which person was born by 1940-04-25?", "Which persons are born by 1940-04-25?", "Which persons were born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1946-02-21?", "What was born by 1946-02-21?", "Which person is born by 1946-02-21?", "Which person was born by 1946-02-21?", "Which persons are born by 1946-02-21?", "Which persons were born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1970-08-13?", "What was born by 1970-08-13?", "Which person is born by 1970-08-13?", "Which person was born by 1970-08-13?", "Which persons are born by 1970-08-13?", "Which persons were born by 1970-08-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1970-08-13\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1863-12-08?", "What was born by 1863-12-08?", "Which person is born by 1863-12-08?", "Which person was born by 1863-12-08?", "Which persons are born by 1863-12-08?", "Which persons were born by 1863-12-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1863-12-08\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1936-05-09?", "What was born by 1936-05-09?", "Which person is born by 1936-05-09?", "Which person was born by 1936-05-09?", "Which persons are born by 1936-05-09?", "Which persons were born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1414-11-09?", "What was born by 1414-11-09?", "Which person is born by 1414-11-09?", "Which person was born by 1414-11-09?", "Which persons are born by 1414-11-09?", "Which persons were born by 1414-11-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1414-11-09\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1931-05-03?", "What was born by 1931-05-03?", "Which person is born by 1931-05-03?", "Which person was born by 1931-05-03?", "Which persons are born by 1931-05-03?", "Which persons were born by 1931-05-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-05-03\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "60",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by 1950-01-09?", "What was born by 1950-01-09?", "Which person is born by 1950-01-09?", "Which person was born by 1950-01-09?", "Which persons are born by 1950-01-09?", "Which persons were born by 1950-01-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-01-09\"))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Whitehaven, Memphis, Tennessee located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Whitehaven,_Memphis,_Tennessee> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Whitehaven,_Memphis,_Tennessee> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Whitehaven,_Memphis,_Tennessee> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Lake Zabuye located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Lake_Zabuye> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Lake_Zabuye> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Lake_Zabuye> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mid-Atlantic states located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mid-Atlantic_states> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mid-Atlantic_states> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mid-Atlantic_states> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is New England located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/New_England> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/New_England> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/New_England> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Kuta Raja located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Kuta_Raja> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Kuta_Raja> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Kuta_Raja> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is San Biagio Maggiore located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/San_Biagio_Maggiore> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/San_Biagio_Maggiore> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/San_Biagio_Maggiore> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Namcha Barwa Himal located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Namcha_Barwa_Himal> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Namcha_Barwa_Himal> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Namcha_Barwa_Himal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is San Nicola a Nilo located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/San_Nicola_a_Nilo> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/San_Nicola_a_Nilo> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/San_Nicola_a_Nilo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Adra, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Adra,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Adra,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Adra,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Mazraa located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Mazraa> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Mazraa> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Mazraa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Rastan located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Rastan> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Rastan> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Rastan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Hawash, Homs Governorate located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Hawash,_Homs_Governorate> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Hawash,_Homs_Governorate> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Hawash,_Homs_Governorate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ayn al-Bardah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ayn_al-Bardah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ayn_al-Bardah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ayn_al-Bardah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Khabab located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Khabab> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Khabab> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Khabab> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Kafr located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Kafr> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Kafr> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Kafr> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Deir Mama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Deir_Mama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Deir_Mama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Deir_Mama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Madaya, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Madaya,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Madaya,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Madaya,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Tayru located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Tayru> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Tayru> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Tayru> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Khalidiyah, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Khalidiyah,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Khalidiyah,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Khalidiyah,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Khalidiyah, al-Hasakah Governorate located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Khalidiyah,_al-Hasakah_Governorate> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Khalidiyah,_al-Hasakah_Governorate> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Khalidiyah,_al-Hasakah_Governorate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Basatin al-Assad located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Basatin_al-Assad> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Basatin_al-Assad> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Basatin_al-Assad> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Hala, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Hala,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Hala,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Hala,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Harran, Idlib located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Harran,_Idlib> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Harran,_Idlib> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Harran,_Idlib> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Harran, as-Suwayda located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Harran,_as-Suwayda> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Harran,_as-Suwayda> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Harran,_as-Suwayda> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Harran al-Awamid located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Harran_al-Awamid> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Harran_al-Awamid> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Harran_al-Awamid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Wadi al-Nasara located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Wadi_al-Nasara> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Wadi_al-Nasara> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Wadi_al-Nasara> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Abu Khanadiq located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Abu_Khanadiq> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Abu_Khanadiq> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Abu_Khanadiq> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Abu Kleefun located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Abu_Kleefun> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Abu_Kleefun> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Abu_Kleefun> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Abul Fashafish located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Abul_Fashafish> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Abul_Fashafish> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Abul_Fashafish> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-'Amrah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-'Amrah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-'Amrah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-'Amrah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Atnah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Atnah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Atnah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Atnah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Fayadiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Fayadiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Fayadiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Fayadiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Humayra located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Humayra> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Humayra> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Humayra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Jarajir located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Jarajir> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Jarajir> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Jarajir> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Khandaq al-Sharqiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Khandaq_al-Sharqiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Khandaq_al-Sharqiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Khandaq_al-Sharqiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Muhajirin, Hama Governorate located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Muhajirin,_Hama_Governorate> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Muhajirin,_Hama_Governorate> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Muhajirin,_Hama_Governorate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Narjis located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Narjis> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Narjis> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Narjis> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Nazaza located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Nazaza> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Nazaza> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Nazaza> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Nour, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Nour,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Nour,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Nour,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Ramlah, Syria located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Ramlah,_Syria> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Ramlah,_Syria> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Ramlah,_Syria> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Salihiyah, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Salihiyah,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Salihiyah,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Salihiyah,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Sindiyana, Suqaylabiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Sindiyana,_Suqaylabiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Sindiyana,_Suqaylabiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Sindiyana,_Suqaylabiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Swaia located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Swaia> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Swaia> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Swaia> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Thawrah, Hama Governorate located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Thawrah,_Hama_Governorate> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Thawrah,_Hama_Governorate> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Thawrah,_Hama_Governorate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Tulaysiyah al-Janubiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Tulaysiyah_al-Janubiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Tulaysiyah_al-Janubiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Tulaysiyah_al-Janubiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Al-Zitiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Al-Zitiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Al-Zitiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Al-Zitiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ammurin located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ammurin> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ammurin> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ammurin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ayn Dara located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ayn_Dara> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ayn_Dara> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ayn_Dara> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Balluneh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Balluneh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Balluneh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Balluneh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Beij located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Beij> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Beij> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Beij> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bgheidid located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bgheidid> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bgheidid> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bgheidid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Bustan Sbeih located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Bustan_Sbeih> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Bustan_Sbeih> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Bustan_Sbeih> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Deir Sunbul located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Deir_Sunbul> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Deir_Sunbul> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Deir_Sunbul> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ein Elhamam located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ein_Elhamam> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ein_Elhamam> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ein_Elhamam> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ein Warideh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ein_Warideh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ein_Warideh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ein_Warideh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Elrihana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Elrihana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Elrihana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Elrihana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Fawrah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Fawrah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Fawrah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Fawrah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Hamrit located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Hamrit> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Hamrit> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Hamrit> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Hanuteh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Hanuteh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Hanuteh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Hanuteh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Hdaj located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Hdaj> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Hdaj> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Hdaj> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Jakuziyeh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Jakuziyeh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Jakuziyeh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Jakuziyeh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Jamala, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Jamala,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Jamala,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Jamala,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Jeb Dkileh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Jeb_Dkileh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Jeb_Dkileh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Jeb_Dkileh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Jeb Zreiq located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Jeb_Zreiq> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Jeb_Zreiq> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Jeb_Zreiq> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Jessine located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Jessine> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Jessine> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Jessine> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Karama, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Karama,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Karama,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Karama,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Kasun Eljabal located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Kasun_Eljabal> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Kasun_Eljabal> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Kasun_Eljabal> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Kawri located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Kawri> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Kawri> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Kawri> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Khala, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Khala,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Khala,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Khala,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Khansaa - Shetheh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Khansaa_-_Shetheh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Khansaa_-_Shetheh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Khansaa_-_Shetheh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maar Shamali located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maar_Shamali> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maar_Shamali> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maar_Shamali> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Makhbuta located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Makhbuta> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Makhbuta> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Makhbuta> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Maksar, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Maksar,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Maksar,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Maksar,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Marana, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Marana,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Marana,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Marana,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mashta Elshalahmeh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mashta_Elshalahmeh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mashta_Elshalahmeh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mashta_Elshalahmeh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mastarihat Afamiyah located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mastarihat_Afamiyah> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mastarihat_Afamiyah> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mastarihat_Afamiyah> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mrikb located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mrikb> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mrikb> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mrikb> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Mweileh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Mweileh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Mweileh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Mweileh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Nabe Eltib located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Nabe_Eltib> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Nabe_Eltib> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Nabe_Eltib> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ojet - Kabasin Elarab located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ojet_-_Kabasin_Elarab> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ojet_-_Kabasin_Elarab> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ojet_-_Kabasin_Elarab> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ojt Eltoba located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ojt_Eltoba> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ojt_Eltoba> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ojt_Eltoba> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Qal'at al-Jaras located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Qal'at_al-Jaras> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Qal'at_al-Jaras> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Qal'at_al-Jaras> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Qanater, Hama Governorate located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Qanater,_Hama_Governorate> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Qanater,_Hama_Governorate> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Qanater,_Hama_Governorate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Qastal al-Burj located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Qastal_al-Burj> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Qastal_al-Burj> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Qastal_al-Burj> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Ras al-Maara located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Ras_al-Maara> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Ras_al-Maara> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Ras_al-Maara> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rasm Al-Brdkana located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Al-Brdkana> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Al-Brdkana> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rasm_Al-Brdkana> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rasm Amun located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Amun> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Amun> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rasm_Amun> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rasm Anz located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Anz> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Anz> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rasm_Anz> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rasm Elahmar located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Elahmar> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rasm_Elahmar> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rasm_Elahmar> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rudat al-Tar located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rudat_al-Tar> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rudat_al-Tar> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rudat_al-Tar> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Rweideh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Rweideh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Rweideh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Rweideh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Saidiyeh, Hama located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Saidiyeh,_Hama> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Saidiyeh,_Hama> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Saidiyeh,_Hama> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Saqiyet Nijm located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Saqiyet_Nijm> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Saqiyet_Nijm> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Saqiyet_Nijm> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Shahta located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Shahta> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Shahta> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Shahta> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Shatheh located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Shatheh> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Shatheh> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Shatheh> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Shaykh Ali located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Shaykh_Ali> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Shaykh_Ali> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Shaykh_Ali> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Suwak al-Shamali located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Suwak_al-Shamali> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Suwak_al-Shamali> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Suwak_al-Shamali> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Tabara Elhamra located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Tabara_Elhamra> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Tabara_Elhamra> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Tabara_Elhamra> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Tahunet Elhalawa located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Tahunet_Elhalawa> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Tahunet_Elhalawa> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Tahunet_Elhalawa> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "66",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "LOCATION",
    "returnType" : "LOCATION",
    "frameType" : "FULL_DATASET",
    "sentences" : [ "Where is Tell al-Shih located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple <http://dbpedia.org/resource/Tell_al-Shih> <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple <http://dbpedia.org/resource/Tell_al-Shih> <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n    (triple <http://dbpedia.org/resource/Tell_al-Shih> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>)\n  ))\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : false
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Sylvia Plath?", "Tell me the Alma Mater of the spouse of Sylvia Plath?", "What is the Alma Mater of the spouse of Sylvia Plath?", "What was the Alma Mater of the spouse of Sylvia Plath?", "Which university is the Alma Mater of the spouse of Sylvia Plath?", "Which university was the Alma Mater of the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Joanne Whalley?", "Tell me the Alma Mater of the spouse of Joanne Whalley?", "What is the Alma Mater of the spouse of Joanne Whalley?", "What was the Alma Mater of the spouse of Joanne Whalley?", "Which university is the Alma Mater of the spouse of Joanne Whalley?", "Which university was the Alma Mater of the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Minnie Maddern Fiske?", "Tell me the Alma Mater of the spouse of Minnie Maddern Fiske?", "What is the Alma Mater of the spouse of Minnie Maddern Fiske?", "What was the Alma Mater of the spouse of Minnie Maddern Fiske?", "Which university is the Alma Mater of the spouse of Minnie Maddern Fiske?", "Which university was the Alma Mater of the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Padma Lakshmi?", "Tell me the Alma Mater of the spouse of Padma Lakshmi?", "What is the Alma Mater of the spouse of Padma Lakshmi?", "What was the Alma Mater of the spouse of Padma Lakshmi?", "Which university is the Alma Mater of the spouse of Padma Lakshmi?", "Which university was the Alma Mater of the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Savitri (actress)?", "Tell me the Alma Mater of the spouse of Savitri (actress)?", "What is the Alma Mater of the spouse of Savitri (actress)?", "What was the Alma Mater of the spouse of Savitri (actress)?", "Which university is the Alma Mater of the spouse of Savitri (actress)?", "Which university was the Alma Mater of the spouse of Savitri (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Savitri_(actress)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Aaron Spelling?", "Tell me the Alma Mater of the spouse of Aaron Spelling?", "What is the Alma Mater of the spouse of Aaron Spelling?", "What was the Alma Mater of the spouse of Aaron Spelling?", "Which university is the Alma Mater of the spouse of Aaron Spelling?", "Which university was the Alma Mater of the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Adam Hochschild?", "Tell me the Alma Mater of the spouse of Adam Hochschild?", "What is the Alma Mater of the spouse of Adam Hochschild?", "What was the Alma Mater of the spouse of Adam Hochschild?", "Which university is the Alma Mater of the spouse of Adam Hochschild?", "Which university was the Alma Mater of the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Barbara Simons?", "Tell me the Alma Mater of the spouse of Barbara Simons?", "What is the Alma Mater of the spouse of Barbara Simons?", "What was the Alma Mater of the spouse of Barbara Simons?", "Which university is the Alma Mater of the spouse of Barbara Simons?", "Which university was the Alma Mater of the spouse of Barbara Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Candy Spelling?", "Tell me the Alma Mater of the spouse of Candy Spelling?", "What is the Alma Mater of the spouse of Candy Spelling?", "What was the Alma Mater of the spouse of Candy Spelling?", "Which university is the Alma Mater of the spouse of Candy Spelling?", "Which university was the Alma Mater of the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?", "Tell me the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?", "What is the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?", "What was the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?", "Which university is the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?", "Which university was the Alma Mater of the spouse of Eleanor Silliman Belknap Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of James Harris Simons?", "Tell me the Alma Mater of the spouse of James Harris Simons?", "What is the Alma Mater of the spouse of James Harris Simons?", "What was the Alma Mater of the spouse of James Harris Simons?", "Which university is the Alma Mater of the spouse of James Harris Simons?", "Which university was the Alma Mater of the spouse of James Harris Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Harris_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Loret Miller Ruppe?", "Tell me the Alma Mater of the spouse of Loret Miller Ruppe?", "What is the Alma Mater of the spouse of Loret Miller Ruppe?", "What was the Alma Mater of the spouse of Loret Miller Ruppe?", "Which university is the Alma Mater of the spouse of Loret Miller Ruppe?", "Which university was the Alma Mater of the spouse of Loret Miller Ruppe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loret_Miller_Ruppe> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Clara McMillen?", "Tell me the Alma Mater of the spouse of Clara McMillen?", "What is the Alma Mater of the spouse of Clara McMillen?", "What was the Alma Mater of the spouse of Clara McMillen?", "Which university is the Alma Mater of the spouse of Clara McMillen?", "Which university was the Alma Mater of the spouse of Clara McMillen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clara_McMillen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Deborah Walley?", "Tell me the Alma Mater of the spouse of Deborah Walley?", "What is the Alma Mater of the spouse of Deborah Walley?", "What was the Alma Mater of the spouse of Deborah Walley?", "Which university is the Alma Mater of the spouse of Deborah Walley?", "Which university was the Alma Mater of the spouse of Deborah Walley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deborah_Walley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Sarala Roy?", "Tell me the Alma Mater of the spouse of Sarala Roy?", "What is the Alma Mater of the spouse of Sarala Roy?", "What was the Alma Mater of the spouse of Sarala Roy?", "Which university is the Alma Mater of the spouse of Sarala Roy?", "Which university was the Alma Mater of the spouse of Sarala Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sarala_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lydia Lopokova?", "Tell me the Alma Mater of the spouse of Lydia Lopokova?", "What is the Alma Mater of the spouse of Lydia Lopokova?", "What was the Alma Mater of the spouse of Lydia Lopokova?", "Which university is the Alma Mater of the spouse of Lydia Lopokova?", "Which university was the Alma Mater of the spouse of Lydia Lopokova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Lopokova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lydia Clarke?", "Tell me the Alma Mater of the spouse of Lydia Clarke?", "What is the Alma Mater of the spouse of Lydia Clarke?", "What was the Alma Mater of the spouse of Lydia Clarke?", "Which university is the Alma Mater of the spouse of Lydia Clarke?", "Which university was the Alma Mater of the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Eliza Jumel?", "Tell me the Alma Mater of the spouse of Eliza Jumel?", "What is the Alma Mater of the spouse of Eliza Jumel?", "What was the Alma Mater of the spouse of Eliza Jumel?", "Which university is the Alma Mater of the spouse of Eliza Jumel?", "Which university was the Alma Mater of the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lady Caroline Lamb?", "Tell me the Alma Mater of the spouse of Lady Caroline Lamb?", "What is the Alma Mater of the spouse of Lady Caroline Lamb?", "What was the Alma Mater of the spouse of Lady Caroline Lamb?", "Which university is the Alma Mater of the spouse of Lady Caroline Lamb?", "Which university was the Alma Mater of the spouse of Lady Caroline Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lady_Caroline_Lamb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Margaret Sullavan?", "Tell me the Alma Mater of the spouse of Margaret Sullavan?", "What is the Alma Mater of the spouse of Margaret Sullavan?", "What was the Alma Mater of the spouse of Margaret Sullavan?", "Which university is the Alma Mater of the spouse of Margaret Sullavan?", "Which university was the Alma Mater of the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?", "Tell me the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?", "What is the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?", "What was the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?", "Which university is the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?", "Which university was the Alma Mater of the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of David Evans Shaw?", "Tell me the Alma Mater of the spouse of David Evans Shaw?", "What is the Alma Mater of the spouse of David Evans Shaw?", "What was the Alma Mater of the spouse of David Evans Shaw?", "Which university is the Alma Mater of the spouse of David Evans Shaw?", "Which university was the Alma Mater of the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of John Jay O'Connor?", "Tell me the Alma Mater of the spouse of John Jay O'Connor?", "What is the Alma Mater of the spouse of John Jay O'Connor?", "What was the Alma Mater of the spouse of John Jay O'Connor?", "Which university is the Alma Mater of the spouse of John Jay O'Connor?", "Which university was the Alma Mater of the spouse of John Jay O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jay_O'Connor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Luma de Oliveira?", "Tell me the Alma Mater of the spouse of Luma de Oliveira?", "What is the Alma Mater of the spouse of Luma de Oliveira?", "What was the Alma Mater of the spouse of Luma de Oliveira?", "Which university is the Alma Mater of the spouse of Luma de Oliveira?", "Which university was the Alma Mater of the spouse of Luma de Oliveira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luma_de_Oliveira> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Bernadette Chirac?", "Tell me the Alma Mater of the spouse of Bernadette Chirac?", "What is the Alma Mater of the spouse of Bernadette Chirac?", "What was the Alma Mater of the spouse of Bernadette Chirac?", "Which university is the Alma Mater of the spouse of Bernadette Chirac?", "Which university was the Alma Mater of the spouse of Bernadette Chirac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bernadette_Chirac> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Leonard Woolf?", "Tell me the Alma Mater of the spouse of Leonard Woolf?", "What is the Alma Mater of the spouse of Leonard Woolf?", "What was the Alma Mater of the spouse of Leonard Woolf?", "Which university is the Alma Mater of the spouse of Leonard Woolf?", "Which university was the Alma Mater of the spouse of Leonard Woolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leonard_Woolf> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Loki Schmidt?", "Tell me the Alma Mater of the spouse of Loki Schmidt?", "What is the Alma Mater of the spouse of Loki Schmidt?", "What was the Alma Mater of the spouse of Loki Schmidt?", "Which university is the Alma Mater of the spouse of Loki Schmidt?", "Which university was the Alma Mater of the spouse of Loki Schmidt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loki_Schmidt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Richard Sennett?", "Tell me the Alma Mater of the spouse of Richard Sennett?", "What is the Alma Mater of the spouse of Richard Sennett?", "What was the Alma Mater of the spouse of Richard Sennett?", "Which university is the Alma Mater of the spouse of Richard Sennett?", "Which university was the Alma Mater of the spouse of Richard Sennett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Sennett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Marion Mahony Griffin?", "Tell me the Alma Mater of the spouse of Marion Mahony Griffin?", "What is the Alma Mater of the spouse of Marion Mahony Griffin?", "What was the Alma Mater of the spouse of Marion Mahony Griffin?", "Which university is the Alma Mater of the spouse of Marion Mahony Griffin?", "Which university was the Alma Mater of the spouse of Marion Mahony Griffin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marion_Mahony_Griffin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Robert Gist?", "Tell me the Alma Mater of the spouse of Robert Gist?", "What is the Alma Mater of the spouse of Robert Gist?", "What was the Alma Mater of the spouse of Robert Gist?", "Which university is the Alma Mater of the spouse of Robert Gist?", "Which university was the Alma Mater of the spouse of Robert Gist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Gist> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Bill Gates?", "Tell me the Alma Mater of the spouse of Bill Gates?", "What is the Alma Mater of the spouse of Bill Gates?", "What was the Alma Mater of the spouse of Bill Gates?", "Which university is the Alma Mater of the spouse of Bill Gates?", "Which university was the Alma Mater of the spouse of Bill Gates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Carl Sagan?", "Tell me the Alma Mater of the spouse of Carl Sagan?", "What is the Alma Mater of the spouse of Carl Sagan?", "What was the Alma Mater of the spouse of Carl Sagan?", "Which university is the Alma Mater of the spouse of Carl Sagan?", "Which university was the Alma Mater of the spouse of Carl Sagan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Sagan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Chiang Kai-shek?", "Tell me the Alma Mater of the spouse of Chiang Kai-shek?", "What is the Alma Mater of the spouse of Chiang Kai-shek?", "What was the Alma Mater of the spouse of Chiang Kai-shek?", "Which university is the Alma Mater of the spouse of Chiang Kai-shek?", "Which university was the Alma Mater of the spouse of Chiang Kai-shek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chiang_Kai-shek> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Frank Sinatra?", "Tell me the Alma Mater of the spouse of Frank Sinatra?", "What is the Alma Mater of the spouse of Frank Sinatra?", "What was the Alma Mater of the spouse of Frank Sinatra?", "Which university is the Alma Mater of the spouse of Frank Sinatra?", "Which university was the Alma Mater of the spouse of Frank Sinatra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Sinatra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Gene Roddenberry?", "Tell me the Alma Mater of the spouse of Gene Roddenberry?", "What is the Alma Mater of the spouse of Gene Roddenberry?", "What was the Alma Mater of the spouse of Gene Roddenberry?", "Which university is the Alma Mater of the spouse of Gene Roddenberry?", "Which university was the Alma Mater of the spouse of Gene Roddenberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gene_Roddenberry> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Jehan Sadat?", "Tell me the Alma Mater of the spouse of Jehan Sadat?", "What is the Alma Mater of the spouse of Jehan Sadat?", "What was the Alma Mater of the spouse of Jehan Sadat?", "Which university is the Alma Mater of the spouse of Jehan Sadat?", "Which university was the Alma Mater of the spouse of Jehan Sadat?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jehan_Sadat> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Sargent Shriver?", "Tell me the Alma Mater of the spouse of Sargent Shriver?", "What is the Alma Mater of the spouse of Sargent Shriver?", "What was the Alma Mater of the spouse of Sargent Shriver?", "Which university is the Alma Mater of the spouse of Sargent Shriver?", "Which university was the Alma Mater of the spouse of Sargent Shriver?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sargent_Shriver> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Sylvia Llewelyn Davies?", "Tell me the Alma Mater of the spouse of Sylvia Llewelyn Davies?", "What is the Alma Mater of the spouse of Sylvia Llewelyn Davies?", "What was the Alma Mater of the spouse of Sylvia Llewelyn Davies?", "Which university is the Alma Mater of the spouse of Sylvia Llewelyn Davies?", "Which university was the Alma Mater of the spouse of Sylvia Llewelyn Davies?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Llewelyn_Davies> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Anna Maria Corazza Bildt?", "Tell me the Alma Mater of the spouse of Anna Maria Corazza Bildt?", "What is the Alma Mater of the spouse of Anna Maria Corazza Bildt?", "What was the Alma Mater of the spouse of Anna Maria Corazza Bildt?", "Which university is the Alma Mater of the spouse of Anna Maria Corazza Bildt?", "Which university was the Alma Mater of the spouse of Anna Maria Corazza Bildt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anna_Maria_Corazza_Bildt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Nelson Mandela?", "Tell me the Alma Mater of the spouse of Nelson Mandela?", "What is the Alma Mater of the spouse of Nelson Mandela?", "What was the Alma Mater of the spouse of Nelson Mandela?", "Which university is the Alma Mater of the spouse of Nelson Mandela?", "Which university was the Alma Mater of the spouse of Nelson Mandela?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nelson_Mandela> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Janette Howard?", "Tell me the Alma Mater of the spouse of Janette Howard?", "What is the Alma Mater of the spouse of Janette Howard?", "What was the Alma Mater of the spouse of Janette Howard?", "Which university is the Alma Mater of the spouse of Janette Howard?", "Which university was the Alma Mater of the spouse of Janette Howard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Janette_Howard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Erika Mann?", "Tell me the Alma Mater of the spouse of Erika Mann?", "What is the Alma Mater of the spouse of Erika Mann?", "What was the Alma Mater of the spouse of Erika Mann?", "Which university is the Alma Mater of the spouse of Erika Mann?", "Which university was the Alma Mater of the spouse of Erika Mann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Erika_Mann> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lynn Abbey?", "Tell me the Alma Mater of the spouse of Lynn Abbey?", "What is the Alma Mater of the spouse of Lynn Abbey?", "What was the Alma Mater of the spouse of Lynn Abbey?", "Which university is the Alma Mater of the spouse of Lynn Abbey?", "Which university was the Alma Mater of the spouse of Lynn Abbey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lynn_Abbey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Jane Engelhard?", "Tell me the Alma Mater of the spouse of Jane Engelhard?", "What is the Alma Mater of the spouse of Jane Engelhard?", "What was the Alma Mater of the spouse of Jane Engelhard?", "Which university is the Alma Mater of the spouse of Jane Engelhard?", "Which university was the Alma Mater of the spouse of Jane Engelhard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Engelhard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Morfydd Llwyn Owen?", "Tell me the Alma Mater of the spouse of Morfydd Llwyn Owen?", "What is the Alma Mater of the spouse of Morfydd Llwyn Owen?", "What was the Alma Mater of the spouse of Morfydd Llwyn Owen?", "Which university is the Alma Mater of the spouse of Morfydd Llwyn Owen?", "Which university was the Alma Mater of the spouse of Morfydd Llwyn Owen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Morfydd_Llwyn_Owen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Zoë Baird?", "Tell me the Alma Mater of the spouse of Zoë Baird?", "What is the Alma Mater of the spouse of Zoë Baird?", "What was the Alma Mater of the spouse of Zoë Baird?", "Which university is the Alma Mater of the spouse of Zoë Baird?", "Which university was the Alma Mater of the spouse of Zoë Baird?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zoë_Baird> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Henry Hillman?", "Tell me the Alma Mater of the spouse of Henry Hillman?", "What is the Alma Mater of the spouse of Henry Hillman?", "What was the Alma Mater of the spouse of Henry Hillman?", "Which university is the Alma Mater of the spouse of Henry Hillman?", "Which university was the Alma Mater of the spouse of Henry Hillman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Hillman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?", "Tell me the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?", "What is the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?", "What was the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?", "Which university is the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?", "Which university was the Alma Mater of the spouse of Lavinia Spencer, Countess Spencer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lavinia_Spencer,_Countess_Spencer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Robin Lakoff?", "Tell me the Alma Mater of the spouse of Robin Lakoff?", "What is the Alma Mater of the spouse of Robin Lakoff?", "What was the Alma Mater of the spouse of Robin Lakoff?", "Which university is the Alma Mater of the spouse of Robin Lakoff?", "Which university was the Alma Mater of the spouse of Robin Lakoff?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robin_Lakoff> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Andrea Conte?", "Tell me the Alma Mater of the spouse of Andrea Conte?", "What is the Alma Mater of the spouse of Andrea Conte?", "What was the Alma Mater of the spouse of Andrea Conte?", "Which university is the Alma Mater of the spouse of Andrea Conte?", "Which university was the Alma Mater of the spouse of Andrea Conte?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrea_Conte> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Cindy McCain?", "Tell me the Alma Mater of the spouse of Cindy McCain?", "What is the Alma Mater of the spouse of Cindy McCain?", "What was the Alma Mater of the spouse of Cindy McCain?", "Which university is the Alma Mater of the spouse of Cindy McCain?", "Which university was the Alma Mater of the spouse of Cindy McCain?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cindy_McCain> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Emma Gifford?", "Tell me the Alma Mater of the spouse of Emma Gifford?", "What is the Alma Mater of the spouse of Emma Gifford?", "What was the Alma Mater of the spouse of Emma Gifford?", "Which university is the Alma Mater of the spouse of Emma Gifford?", "Which university was the Alma Mater of the spouse of Emma Gifford?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_Gifford> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lucinda Franks?", "Tell me the Alma Mater of the spouse of Lucinda Franks?", "What is the Alma Mater of the spouse of Lucinda Franks?", "What was the Alma Mater of the spouse of Lucinda Franks?", "Which university is the Alma Mater of the spouse of Lucinda Franks?", "Which university was the Alma Mater of the spouse of Lucinda Franks?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucinda_Franks> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?", "Tell me the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?", "What is the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?", "What was the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?", "Which university is the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?", "Which university was the Alma Mater of the spouse of Lucy Baldwin, Countess Baldwin of Bewdley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Baldwin,_Countess_Baldwin_of_Bewdley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Betty Bumpers?", "Tell me the Alma Mater of the spouse of Betty Bumpers?", "What is the Alma Mater of the spouse of Betty Bumpers?", "What was the Alma Mater of the spouse of Betty Bumpers?", "Which university is the Alma Mater of the spouse of Betty Bumpers?", "Which university was the Alma Mater of the spouse of Betty Bumpers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Betty_Bumpers> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Brigitte Bodenheimer?", "Tell me the Alma Mater of the spouse of Brigitte Bodenheimer?", "What is the Alma Mater of the spouse of Brigitte Bodenheimer?", "What was the Alma Mater of the spouse of Brigitte Bodenheimer?", "Which university is the Alma Mater of the spouse of Brigitte Bodenheimer?", "Which university was the Alma Mater of the spouse of Brigitte Bodenheimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brigitte_Bodenheimer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Bryan Greenberg?", "Tell me the Alma Mater of the spouse of Bryan Greenberg?", "What is the Alma Mater of the spouse of Bryan Greenberg?", "What was the Alma Mater of the spouse of Bryan Greenberg?", "Which university is the Alma Mater of the spouse of Bryan Greenberg?", "Which university was the Alma Mater of the spouse of Bryan Greenberg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bryan_Greenberg> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Elizabeth Dole?", "Tell me the Alma Mater of the spouse of Elizabeth Dole?", "What is the Alma Mater of the spouse of Elizabeth Dole?", "What was the Alma Mater of the spouse of Elizabeth Dole?", "Which university is the Alma Mater of the spouse of Elizabeth Dole?", "Which university was the Alma Mater of the spouse of Elizabeth Dole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Dole> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Emma Georgina Rothschild?", "Tell me the Alma Mater of the spouse of Emma Georgina Rothschild?", "What is the Alma Mater of the spouse of Emma Georgina Rothschild?", "What was the Alma Mater of the spouse of Emma Georgina Rothschild?", "Which university is the Alma Mater of the spouse of Emma Georgina Rothschild?", "Which university was the Alma Mater of the spouse of Emma Georgina Rothschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_Georgina_Rothschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?", "Tell me the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?", "What is the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?", "What was the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?", "Which university is the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?", "Which university was the Alma Mater of the spouse of Hester Pitt, Countess of Chatham?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hester_Pitt,_Countess_of_Chatham> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Mary Stuart, Countess of Bute?", "Tell me the Alma Mater of the spouse of Mary Stuart, Countess of Bute?", "What is the Alma Mater of the spouse of Mary Stuart, Countess of Bute?", "What was the Alma Mater of the spouse of Mary Stuart, Countess of Bute?", "Which university is the Alma Mater of the spouse of Mary Stuart, Countess of Bute?", "Which university was the Alma Mater of the spouse of Mary Stuart, Countess of Bute?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_Stuart,_Countess_of_Bute> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Jane Fonda?", "Tell me the Alma Mater of the spouse of Jane Fonda?", "What is the Alma Mater of the spouse of Jane Fonda?", "What was the Alma Mater of the spouse of Jane Fonda?", "Which university is the Alma Mater of the spouse of Jane Fonda?", "Which university was the Alma Mater of the spouse of Jane Fonda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Fonda> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Emilie Benes Brzezinski?", "Tell me the Alma Mater of the spouse of Emilie Benes Brzezinski?", "What is the Alma Mater of the spouse of Emilie Benes Brzezinski?", "What was the Alma Mater of the spouse of Emilie Benes Brzezinski?", "Which university is the Alma Mater of the spouse of Emilie Benes Brzezinski?", "Which university was the Alma Mater of the spouse of Emilie Benes Brzezinski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emilie_Benes_Brzezinski> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Anna Harrison?", "Tell me the Alma Mater of the spouse of Anna Harrison?", "What is the Alma Mater of the spouse of Anna Harrison?", "What was the Alma Mater of the spouse of Anna Harrison?", "Which university is the Alma Mater of the spouse of Anna Harrison?", "Which university was the Alma Mater of the spouse of Anna Harrison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anna_Harrison> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Caroline Harrison?", "Tell me the Alma Mater of the spouse of Caroline Harrison?", "What is the Alma Mater of the spouse of Caroline Harrison?", "What was the Alma Mater of the spouse of Caroline Harrison?", "Which university is the Alma Mater of the spouse of Caroline Harrison?", "Which university was the Alma Mater of the spouse of Caroline Harrison?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_Harrison> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Florence Harding?", "Tell me the Alma Mater of the spouse of Florence Harding?", "What is the Alma Mater of the spouse of Florence Harding?", "What was the Alma Mater of the spouse of Florence Harding?", "Which university is the Alma Mater of the spouse of Florence Harding?", "Which university was the Alma Mater of the spouse of Florence Harding?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Florence_Harding> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Helen Herron Taft?", "Tell me the Alma Mater of the spouse of Helen Herron Taft?", "What is the Alma Mater of the spouse of Helen Herron Taft?", "What was the Alma Mater of the spouse of Helen Herron Taft?", "Which university is the Alma Mater of the spouse of Helen Herron Taft?", "Which university was the Alma Mater of the spouse of Helen Herron Taft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helen_Herron_Taft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Hugo van Lawick?", "Tell me the Alma Mater of the spouse of Hugo van Lawick?", "What is the Alma Mater of the spouse of Hugo van Lawick?", "What was the Alma Mater of the spouse of Hugo van Lawick?", "Which university is the Alma Mater of the spouse of Hugo van Lawick?", "Which university was the Alma Mater of the spouse of Hugo van Lawick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hugo_van_Lawick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Nabaneeta Dev Sen?", "Tell me the Alma Mater of the spouse of Nabaneeta Dev Sen?", "What is the Alma Mater of the spouse of Nabaneeta Dev Sen?", "What was the Alma Mater of the spouse of Nabaneeta Dev Sen?", "Which university is the Alma Mater of the spouse of Nabaneeta Dev Sen?", "Which university was the Alma Mater of the spouse of Nabaneeta Dev Sen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nabaneeta_Dev_Sen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Angélica Rivera?", "Tell me the Alma Mater of the spouse of Angélica Rivera?", "What is the Alma Mater of the spouse of Angélica Rivera?", "What was the Alma Mater of the spouse of Angélica Rivera?", "Which university is the Alma Mater of the spouse of Angélica Rivera?", "Which university was the Alma Mater of the spouse of Angélica Rivera?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Angélica_Rivera> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Cornelia Wallace?", "Tell me the Alma Mater of the spouse of Cornelia Wallace?", "What is the Alma Mater of the spouse of Cornelia Wallace?", "What was the Alma Mater of the spouse of Cornelia Wallace?", "Which university is the Alma Mater of the spouse of Cornelia Wallace?", "Which university was the Alma Mater of the spouse of Cornelia Wallace?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cornelia_Wallace> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Pushpavalli?", "Tell me the Alma Mater of the spouse of Pushpavalli?", "What is the Alma Mater of the spouse of Pushpavalli?", "What was the Alma Mater of the spouse of Pushpavalli?", "Which university is the Alma Mater of the spouse of Pushpavalli?", "Which university was the Alma Mater of the spouse of Pushpavalli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pushpavalli> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Alison White (bishop)?", "Tell me the Alma Mater of the spouse of Alison White (bishop)?", "What is the Alma Mater of the spouse of Alison White (bishop)?", "What was the Alma Mater of the spouse of Alison White (bishop)?", "Which university is the Alma Mater of the spouse of Alison White (bishop)?", "Which university was the Alma Mater of the spouse of Alison White (bishop)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alison_White_(bishop)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Anna Nicole Smith?", "Tell me the Alma Mater of the spouse of Anna Nicole Smith?", "What is the Alma Mater of the spouse of Anna Nicole Smith?", "What was the Alma Mater of the spouse of Anna Nicole Smith?", "Which university is the Alma Mater of the spouse of Anna Nicole Smith?", "Which university was the Alma Mater of the spouse of Anna Nicole Smith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anna_Nicole_Smith> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Nena von Schlebrügge?", "Tell me the Alma Mater of the spouse of Nena von Schlebrügge?", "What is the Alma Mater of the spouse of Nena von Schlebrügge?", "What was the Alma Mater of the spouse of Nena von Schlebrügge?", "Which university is the Alma Mater of the spouse of Nena von Schlebrügge?", "Which university was the Alma Mater of the spouse of Nena von Schlebrügge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nena_von_Schlebrügge> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Olga Scheinpflugová?", "Tell me the Alma Mater of the spouse of Olga Scheinpflugová?", "What is the Alma Mater of the spouse of Olga Scheinpflugová?", "What was the Alma Mater of the spouse of Olga Scheinpflugová?", "Which university is the Alma Mater of the spouse of Olga Scheinpflugová?", "Which university was the Alma Mater of the spouse of Olga Scheinpflugová?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Olga_Scheinpflugová> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Adrienne Barbeau?", "Tell me the Alma Mater of the spouse of Adrienne Barbeau?", "What is the Alma Mater of the spouse of Adrienne Barbeau?", "What was the Alma Mater of the spouse of Adrienne Barbeau?", "Which university is the Alma Mater of the spouse of Adrienne Barbeau?", "Which university was the Alma Mater of the spouse of Adrienne Barbeau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adrienne_Barbeau> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Caroline Kennedy?", "Tell me the Alma Mater of the spouse of Caroline Kennedy?", "What is the Alma Mater of the spouse of Caroline Kennedy?", "What was the Alma Mater of the spouse of Caroline Kennedy?", "Which university is the Alma Mater of the spouse of Caroline Kennedy?", "Which university was the Alma Mater of the spouse of Caroline Kennedy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_Kennedy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Fred Thompson?", "Tell me the Alma Mater of the spouse of Fred Thompson?", "What is the Alma Mater of the spouse of Fred Thompson?", "What was the Alma Mater of the spouse of Fred Thompson?", "Which university is the Alma Mater of the spouse of Fred Thompson?", "Which university was the Alma Mater of the spouse of Fred Thompson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fred_Thompson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Jesse James (customizer)?", "Tell me the Alma Mater of the spouse of Jesse James (customizer)?", "What is the Alma Mater of the spouse of Jesse James (customizer)?", "What was the Alma Mater of the spouse of Jesse James (customizer)?", "Which university is the Alma Mater of the spouse of Jesse James (customizer)?", "Which university was the Alma Mater of the spouse of Jesse James (customizer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jesse_James_(customizer)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Julia Wolfe?", "Tell me the Alma Mater of the spouse of Julia Wolfe?", "What is the Alma Mater of the spouse of Julia Wolfe?", "What was the Alma Mater of the spouse of Julia Wolfe?", "Which university is the Alma Mater of the spouse of Julia Wolfe?", "Which university was the Alma Mater of the spouse of Julia Wolfe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julia_Wolfe> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Marta Sahagún de Fox?", "Tell me the Alma Mater of the spouse of Marta Sahagún de Fox?", "What is the Alma Mater of the spouse of Marta Sahagún de Fox?", "What was the Alma Mater of the spouse of Marta Sahagún de Fox?", "Which university is the Alma Mater of the spouse of Marta Sahagún de Fox?", "Which university was the Alma Mater of the spouse of Marta Sahagún de Fox?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marta_Sahagún_de_Fox> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Sarah Brightman?", "Tell me the Alma Mater of the spouse of Sarah Brightman?", "What is the Alma Mater of the spouse of Sarah Brightman?", "What was the Alma Mater of the spouse of Sarah Brightman?", "Which university is the Alma Mater of the spouse of Sarah Brightman?", "Which university was the Alma Mater of the spouse of Sarah Brightman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sarah_Brightman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Tony Benn?", "Tell me the Alma Mater of the spouse of Tony Benn?", "What is the Alma Mater of the spouse of Tony Benn?", "What was the Alma Mater of the spouse of Tony Benn?", "Which university is the Alma Mater of the spouse of Tony Benn?", "Which university was the Alma Mater of the spouse of Tony Benn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tony_Benn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lyudmila Putina?", "Tell me the Alma Mater of the spouse of Lyudmila Putina?", "What is the Alma Mater of the spouse of Lyudmila Putina?", "What was the Alma Mater of the spouse of Lyudmila Putina?", "Which university is the Alma Mater of the spouse of Lyudmila Putina?", "Which university was the Alma Mater of the spouse of Lyudmila Putina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lyudmila_Putina> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Nicole Farhi?", "Tell me the Alma Mater of the spouse of Nicole Farhi?", "What is the Alma Mater of the spouse of Nicole Farhi?", "What was the Alma Mater of the spouse of Nicole Farhi?", "Which university is the Alma Mater of the spouse of Nicole Farhi?", "Which university was the Alma Mater of the spouse of Nicole Farhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nicole_Farhi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Samantha Bee?", "Tell me the Alma Mater of the spouse of Samantha Bee?", "What is the Alma Mater of the spouse of Samantha Bee?", "What was the Alma Mater of the spouse of Samantha Bee?", "Which university is the Alma Mater of the spouse of Samantha Bee?", "Which university was the Alma Mater of the spouse of Samantha Bee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Samantha_Bee> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Alexis Denisof?", "Tell me the Alma Mater of the spouse of Alexis Denisof?", "What is the Alma Mater of the spouse of Alexis Denisof?", "What was the Alma Mater of the spouse of Alexis Denisof?", "Which university is the Alma Mater of the spouse of Alexis Denisof?", "Which university was the Alma Mater of the spouse of Alexis Denisof?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alexis_Denisof> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Hume Cronyn?", "Tell me the Alma Mater of the spouse of Hume Cronyn?", "What is the Alma Mater of the spouse of Hume Cronyn?", "What was the Alma Mater of the spouse of Hume Cronyn?", "Which university is the Alma Mater of the spouse of Hume Cronyn?", "Which university was the Alma Mater of the spouse of Hume Cronyn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hume_Cronyn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Muriel Humphrey Brown?", "Tell me the Alma Mater of the spouse of Muriel Humphrey Brown?", "What is the Alma Mater of the spouse of Muriel Humphrey Brown?", "What was the Alma Mater of the spouse of Muriel Humphrey Brown?", "Which university is the Alma Mater of the spouse of Muriel Humphrey Brown?", "Which university was the Alma Mater of the spouse of Muriel Humphrey Brown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Muriel_Humphrey_Brown> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Mary Matalin?", "Tell me the Alma Mater of the spouse of Mary Matalin?", "What is the Alma Mater of the spouse of Mary Matalin?", "What was the Alma Mater of the spouse of Mary Matalin?", "Which university is the Alma Mater of the spouse of Mary Matalin?", "Which university was the Alma Mater of the spouse of Mary Matalin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_Matalin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Michael Huffington?", "Tell me the Alma Mater of the spouse of Michael Huffington?", "What is the Alma Mater of the spouse of Michael Huffington?", "What was the Alma Mater of the spouse of Michael Huffington?", "Which university is the Alma Mater of the spouse of Michael Huffington?", "Which university was the Alma Mater of the spouse of Michael Huffington?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Huffington> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Pentti Arajärvi?", "Tell me the Alma Mater of the spouse of Pentti Arajärvi?", "What is the Alma Mater of the spouse of Pentti Arajärvi?", "What was the Alma Mater of the spouse of Pentti Arajärvi?", "Which university is the Alma Mater of the spouse of Pentti Arajärvi?", "Which university was the Alma Mater of the spouse of Pentti Arajärvi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pentti_Arajärvi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Lisbet Palme?", "Tell me the Alma Mater of the spouse of Lisbet Palme?", "What is the Alma Mater of the spouse of Lisbet Palme?", "What was the Alma Mater of the spouse of Lisbet Palme?", "Which university is the Alma Mater of the spouse of Lisbet Palme?", "Which university was the Alma Mater of the spouse of Lisbet Palme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisbet_Palme> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?", "Tell me the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?", "What is the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?", "What was the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?", "Which university is the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?", "Which university was the Alma Mater of the spouse of Marisabel Rodríguez de Chávez?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marisabel_Rodríguez_de_Chávez> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Wu Shu-chen?", "Tell me the Alma Mater of the spouse of Wu Shu-chen?", "What is the Alma Mater of the spouse of Wu Shu-chen?", "What was the Alma Mater of the spouse of Wu Shu-chen?", "Which university is the Alma Mater of the spouse of Wu Shu-chen?", "Which university was the Alma Mater of the spouse of Wu Shu-chen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wu_Shu-chen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Jacqueline Beer?", "Tell me the Alma Mater of the spouse of Jacqueline Beer?", "What is the Alma Mater of the spouse of Jacqueline Beer?", "What was the Alma Mater of the spouse of Jacqueline Beer?", "Which university is the Alma Mater of the spouse of Jacqueline Beer?", "Which university was the Alma Mater of the spouse of Jacqueline Beer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jacqueline_Beer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Dingdong Dantes?", "Tell me the Alma Mater of the spouse of Dingdong Dantes?", "What is the Alma Mater of the spouse of Dingdong Dantes?", "What was the Alma Mater of the spouse of Dingdong Dantes?", "Which university is the Alma Mater of the spouse of Dingdong Dantes?", "Which university was the Alma Mater of the spouse of Dingdong Dantes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dingdong_Dantes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Floride Calhoun?", "Tell me the Alma Mater of the spouse of Floride Calhoun?", "What is the Alma Mater of the spouse of Floride Calhoun?", "What was the Alma Mater of the spouse of Floride Calhoun?", "Which university is the Alma Mater of the spouse of Floride Calhoun?", "Which university was the Alma Mater of the spouse of Floride Calhoun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Floride_Calhoun> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "67",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of Joan Mondale?", "Tell me the Alma Mater of the spouse of Joan Mondale?", "What is the Alma Mater of the spouse of Joan Mondale?", "What was the Alma Mater of the spouse of Joan Mondale?", "Which university is the Alma Mater of the spouse of Joan Mondale?", "Which university was the Alma Mater of the spouse of Joan Mondale?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_Mondale> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1756-02-06?", "Tell me the Alma Mater of persons born by 1756-02-06?", "What is the Alma Mater of persons born by 1756-02-06?", "What was the Alma Mater of persons born by 1756-02-06?", "Which university is the Alma Mater of persons born by 1756-02-06?", "Which university was the Alma Mater of persons born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1936-11-30?", "Tell me the Alma Mater of persons born by 1936-11-30?", "What is the Alma Mater of persons born by 1936-11-30?", "What was the Alma Mater of persons born by 1936-11-30?", "Which university is the Alma Mater of persons born by 1936-11-30?", "Which university was the Alma Mater of persons born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1918-10-06?", "Tell me the Alma Mater of persons born by 1918-10-06?", "What is the Alma Mater of persons born by 1918-10-06?", "What was the Alma Mater of persons born by 1918-10-06?", "Which university is the Alma Mater of persons born by 1918-10-06?", "Which university was the Alma Mater of persons born by 1918-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1667-05-26?", "Tell me the Alma Mater of persons born by 1667-05-26?", "What is the Alma Mater of persons born by 1667-05-26?", "What was the Alma Mater of persons born by 1667-05-26?", "Which university is the Alma Mater of persons born by 1667-05-26?", "Which university was the Alma Mater of persons born by 1667-05-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1667-05-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1952-07-06?", "Tell me the Alma Mater of persons born by 1952-07-06?", "What is the Alma Mater of persons born by 1952-07-06?", "What was the Alma Mater of persons born by 1952-07-06?", "Which university is the Alma Mater of persons born by 1952-07-06?", "Which university was the Alma Mater of persons born by 1952-07-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1900-02-05?", "Tell me the Alma Mater of persons born by 1900-02-05?", "What is the Alma Mater of persons born by 1900-02-05?", "What was the Alma Mater of persons born by 1900-02-05?", "Which university is the Alma Mater of persons born by 1900-02-05?", "Which university was the Alma Mater of persons born by 1900-02-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-02-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1752-09-18?", "Tell me the Alma Mater of persons born by 1752-09-18?", "What is the Alma Mater of persons born by 1752-09-18?", "What was the Alma Mater of persons born by 1752-09-18?", "Which university is the Alma Mater of persons born by 1752-09-18?", "Which university was the Alma Mater of persons born by 1752-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1752-09-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1940-04-25?", "Tell me the Alma Mater of persons born by 1940-04-25?", "What is the Alma Mater of persons born by 1940-04-25?", "What was the Alma Mater of persons born by 1940-04-25?", "Which university is the Alma Mater of persons born by 1940-04-25?", "Which university was the Alma Mater of persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1946-02-21?", "Tell me the Alma Mater of persons born by 1946-02-21?", "What is the Alma Mater of persons born by 1946-02-21?", "What was the Alma Mater of persons born by 1946-02-21?", "Which university is the Alma Mater of persons born by 1946-02-21?", "Which university was the Alma Mater of persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1950-01-09?", "Tell me the Alma Mater of persons born by 1950-01-09?", "What is the Alma Mater of persons born by 1950-01-09?", "What was the Alma Mater of persons born by 1950-01-09?", "Which university is the Alma Mater of persons born by 1950-01-09?", "Which university was the Alma Mater of persons born by 1950-01-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-01-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1925-06-17?", "Tell me the Alma Mater of persons born by 1925-06-17?", "What is the Alma Mater of persons born by 1925-06-17?", "What was the Alma Mater of persons born by 1925-06-17?", "Which university is the Alma Mater of persons born by 1925-06-17?", "Which university was the Alma Mater of persons born by 1925-06-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1925-06-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1894-06-23?", "Tell me the Alma Mater of persons born by 1894-06-23?", "What is the Alma Mater of persons born by 1894-06-23?", "What was the Alma Mater of persons born by 1894-06-23?", "Which university is the Alma Mater of persons born by 1894-06-23?", "Which university was the Alma Mater of persons born by 1894-06-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1894-06-23\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1842-07-26?", "Tell me the Alma Mater of persons born by 1842-07-26?", "What is the Alma Mater of persons born by 1842-07-26?", "What was the Alma Mater of persons born by 1842-07-26?", "Which university is the Alma Mater of persons born by 1842-07-26?", "Which university was the Alma Mater of persons born by 1842-07-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1842-07-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1893-01-12?", "Tell me the Alma Mater of persons born by 1893-01-12?", "What is the Alma Mater of persons born by 1893-01-12?", "What was the Alma Mater of persons born by 1893-01-12?", "Which university is the Alma Mater of persons born by 1893-01-12?", "Which university was the Alma Mater of persons born by 1893-01-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1893-01-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1903-06-14?", "Tell me the Alma Mater of persons born by 1903-06-14?", "What is the Alma Mater of persons born by 1903-06-14?", "What was the Alma Mater of persons born by 1903-06-14?", "Which university is the Alma Mater of persons born by 1903-06-14?", "Which university was the Alma Mater of persons born by 1903-06-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1903-06-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1974-03-24?", "Tell me the Alma Mater of persons born by 1974-03-24?", "What is the Alma Mater of persons born by 1974-03-24?", "What was the Alma Mater of persons born by 1974-03-24?", "Which university is the Alma Mater of persons born by 1974-03-24?", "Which university was the Alma Mater of persons born by 1974-03-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1974-03-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1933-11-03?", "Tell me the Alma Mater of persons born by 1933-11-03?", "What is the Alma Mater of persons born by 1933-11-03?", "What was the Alma Mater of persons born by 1933-11-03?", "Which university is the Alma Mater of persons born by 1933-11-03?", "Which university was the Alma Mater of persons born by 1933-11-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1933-11-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1952-02-19?", "Tell me the Alma Mater of persons born by 1952-02-19?", "What is the Alma Mater of persons born by 1952-02-19?", "What was the Alma Mater of persons born by 1952-02-19?", "Which university is the Alma Mater of persons born by 1952-02-19?", "Which university was the Alma Mater of persons born by 1952-02-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-02-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1514-12-31?", "Tell me the Alma Mater of persons born by 1514-12-31?", "What is the Alma Mater of persons born by 1514-12-31?", "What was the Alma Mater of persons born by 1514-12-31?", "Which university is the Alma Mater of persons born by 1514-12-31?", "Which university was the Alma Mater of persons born by 1514-12-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1514-12-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1848-02-24?", "Tell me the Alma Mater of persons born by 1848-02-24?", "What is the Alma Mater of persons born by 1848-02-24?", "What was the Alma Mater of persons born by 1848-02-24?", "Which university is the Alma Mater of persons born by 1848-02-24?", "Which university was the Alma Mater of persons born by 1848-02-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1848-02-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1948-03-22?", "Tell me the Alma Mater of persons born by 1948-03-22?", "What is the Alma Mater of persons born by 1948-03-22?", "What was the Alma Mater of persons born by 1948-03-22?", "Which university is the Alma Mater of persons born by 1948-03-22?", "Which university was the Alma Mater of persons born by 1948-03-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1948-03-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1944-01-26?", "Tell me the Alma Mater of persons born by 1944-01-26?", "What is the Alma Mater of persons born by 1944-01-26?", "What was the Alma Mater of persons born by 1944-01-26?", "Which university is the Alma Mater of persons born by 1944-01-26?", "Which university was the Alma Mater of persons born by 1944-01-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1944-01-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1917-02-25?", "Tell me the Alma Mater of persons born by 1917-02-25?", "What is the Alma Mater of persons born by 1917-02-25?", "What was the Alma Mater of persons born by 1917-02-25?", "Which university is the Alma Mater of persons born by 1917-02-25?", "Which university was the Alma Mater of persons born by 1917-02-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1917-02-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1943-09-17?", "Tell me the Alma Mater of persons born by 1943-09-17?", "What is the Alma Mater of persons born by 1943-09-17?", "What was the Alma Mater of persons born by 1943-09-17?", "Which university is the Alma Mater of persons born by 1943-09-17?", "Which university was the Alma Mater of persons born by 1943-09-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-09-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1918-12-25?", "Tell me the Alma Mater of persons born by 1918-12-25?", "What is the Alma Mater of persons born by 1918-12-25?", "What was the Alma Mater of persons born by 1918-12-25?", "Which university is the Alma Mater of persons born by 1918-12-25?", "Which university was the Alma Mater of persons born by 1918-12-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-12-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1925-11-17?", "Tell me the Alma Mater of persons born by 1925-11-17?", "What is the Alma Mater of persons born by 1925-11-17?", "What was the Alma Mater of persons born by 1925-11-17?", "Which university is the Alma Mater of persons born by 1925-11-17?", "Which university was the Alma Mater of persons born by 1925-11-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1925-11-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1851-07-08?", "Tell me the Alma Mater of persons born by 1851-07-08?", "What is the Alma Mater of persons born by 1851-07-08?", "What was the Alma Mater of persons born by 1851-07-08?", "Which university is the Alma Mater of persons born by 1851-07-08?", "Which university was the Alma Mater of persons born by 1851-07-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1851-07-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1790-11-17?", "Tell me the Alma Mater of persons born by 1790-11-17?", "What is the Alma Mater of persons born by 1790-11-17?", "What was the Alma Mater of persons born by 1790-11-17?", "Which university is the Alma Mater of persons born by 1790-11-17?", "Which university was the Alma Mater of persons born by 1790-11-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1790-11-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1922-12-24?", "Tell me the Alma Mater of persons born by 1922-12-24?", "What is the Alma Mater of persons born by 1922-12-24?", "What was the Alma Mater of persons born by 1922-12-24?", "Which university is the Alma Mater of persons born by 1922-12-24?", "Which university was the Alma Mater of persons born by 1922-12-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1922-12-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1902-06-16?", "Tell me the Alma Mater of persons born by 1902-06-16?", "What is the Alma Mater of persons born by 1902-06-16?", "What was the Alma Mater of persons born by 1902-06-16?", "Which university is the Alma Mater of persons born by 1902-06-16?", "Which university was the Alma Mater of persons born by 1902-06-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1902-06-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1949-10-21?", "Tell me the Alma Mater of persons born by 1949-10-21?", "What is the Alma Mater of persons born by 1949-10-21?", "What was the Alma Mater of persons born by 1949-10-21?", "Which university is the Alma Mater of persons born by 1949-10-21?", "Which university was the Alma Mater of persons born by 1949-10-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1949-10-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1903-05-02?", "Tell me the Alma Mater of persons born by 1903-05-02?", "What is the Alma Mater of persons born by 1903-05-02?", "What was the Alma Mater of persons born by 1903-05-02?", "Which university is the Alma Mater of persons born by 1903-05-02?", "Which university was the Alma Mater of persons born by 1903-05-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1903-05-02\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1923-07-22?", "Tell me the Alma Mater of persons born by 1923-07-22?", "What is the Alma Mater of persons born by 1923-07-22?", "What was the Alma Mater of persons born by 1923-07-22?", "Which university is the Alma Mater of persons born by 1923-07-22?", "Which university was the Alma Mater of persons born by 1923-07-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-07-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1927-06-27?", "Tell me the Alma Mater of persons born by 1927-06-27?", "What is the Alma Mater of persons born by 1927-06-27?", "What was the Alma Mater of persons born by 1927-06-27?", "Which university is the Alma Mater of persons born by 1927-06-27?", "Which university was the Alma Mater of persons born by 1927-06-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1927-06-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1856-04-05?", "Tell me the Alma Mater of persons born by 1856-04-05?", "What is the Alma Mater of persons born by 1856-04-05?", "What was the Alma Mater of persons born by 1856-04-05?", "Which university is the Alma Mater of persons born by 1856-04-05?", "Which university was the Alma Mater of persons born by 1856-04-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1856-04-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1963-01-15?", "Tell me the Alma Mater of persons born by 1963-01-15?", "What is the Alma Mater of persons born by 1963-01-15?", "What was the Alma Mater of persons born by 1963-01-15?", "Which university is the Alma Mater of persons born by 1963-01-15?", "Which university was the Alma Mater of persons born by 1963-01-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1963-01-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1917-06-08?", "Tell me the Alma Mater of persons born by 1917-06-08?", "What is the Alma Mater of persons born by 1917-06-08?", "What was the Alma Mater of persons born by 1917-06-08?", "Which university is the Alma Mater of persons born by 1917-06-08?", "Which university was the Alma Mater of persons born by 1917-06-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1917-06-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1843-07-07?", "Tell me the Alma Mater of persons born by 1843-07-07?", "What is the Alma Mater of persons born by 1843-07-07?", "What was the Alma Mater of persons born by 1843-07-07?", "Which university is the Alma Mater of persons born by 1843-07-07?", "Which university was the Alma Mater of persons born by 1843-07-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1843-07-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1949-07-15?", "Tell me the Alma Mater of persons born by 1949-07-15?", "What is the Alma Mater of persons born by 1949-07-15?", "What was the Alma Mater of persons born by 1949-07-15?", "Which university is the Alma Mater of persons born by 1949-07-15?", "Which university was the Alma Mater of persons born by 1949-07-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1949-07-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1878-01-06?", "Tell me the Alma Mater of persons born by 1878-01-06?", "What is the Alma Mater of persons born by 1878-01-06?", "What was the Alma Mater of persons born by 1878-01-06?", "Which university is the Alma Mater of persons born by 1878-01-06?", "Which university was the Alma Mater of persons born by 1878-01-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1878-01-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1928-07-15?", "Tell me the Alma Mater of persons born by 1928-07-15?", "What is the Alma Mater of persons born by 1928-07-15?", "What was the Alma Mater of persons born by 1928-07-15?", "Which university is the Alma Mater of persons born by 1928-07-15?", "Which university was the Alma Mater of persons born by 1928-07-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1928-07-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1934-03-31?", "Tell me the Alma Mater of persons born by 1934-03-31?", "What is the Alma Mater of persons born by 1934-03-31?", "What was the Alma Mater of persons born by 1934-03-31?", "Which university is the Alma Mater of persons born by 1934-03-31?", "Which university was the Alma Mater of persons born by 1934-03-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1934-03-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1884-02-23?", "Tell me the Alma Mater of persons born by 1884-02-23?", "What is the Alma Mater of persons born by 1884-02-23?", "What was the Alma Mater of persons born by 1884-02-23?", "Which university is the Alma Mater of persons born by 1884-02-23?", "Which university was the Alma Mater of persons born by 1884-02-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1884-02-23\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1977-04-14?", "Tell me the Alma Mater of persons born by 1977-04-14?", "What is the Alma Mater of persons born by 1977-04-14?", "What was the Alma Mater of persons born by 1977-04-14?", "Which university is the Alma Mater of persons born by 1977-04-14?", "Which university was the Alma Mater of persons born by 1977-04-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1977-04-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1933-11-04?", "Tell me the Alma Mater of persons born by 1933-11-04?", "What is the Alma Mater of persons born by 1933-11-04?", "What was the Alma Mater of persons born by 1933-11-04?", "Which university is the Alma Mater of persons born by 1933-11-04?", "Which university was the Alma Mater of persons born by 1933-11-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1933-11-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1754-02-02?", "Tell me the Alma Mater of persons born by 1754-02-02?", "What is the Alma Mater of persons born by 1754-02-02?", "What was the Alma Mater of persons born by 1754-02-02?", "Which university is the Alma Mater of persons born by 1754-02-02?", "Which university was the Alma Mater of persons born by 1754-02-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1754-02-02\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1923-10-04?", "Tell me the Alma Mater of persons born by 1923-10-04?", "What is the Alma Mater of persons born by 1923-10-04?", "What was the Alma Mater of persons born by 1923-10-04?", "Which university is the Alma Mater of persons born by 1923-10-04?", "Which university was the Alma Mater of persons born by 1923-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1950-10-12?", "Tell me the Alma Mater of persons born by 1950-10-12?", "What is the Alma Mater of persons born by 1950-10-12?", "What was the Alma Mater of persons born by 1950-10-12?", "Which university is the Alma Mater of persons born by 1950-10-12?", "Which university was the Alma Mater of persons born by 1950-10-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-10-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1629-04-14?", "Tell me the Alma Mater of persons born by 1629-04-14?", "What is the Alma Mater of persons born by 1629-04-14?", "What was the Alma Mater of persons born by 1629-04-14?", "Which university is the Alma Mater of persons born by 1629-04-14?", "Which university was the Alma Mater of persons born by 1629-04-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1629-04-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1931-05-29?", "Tell me the Alma Mater of persons born by 1931-05-29?", "What is the Alma Mater of persons born by 1931-05-29?", "What was the Alma Mater of persons born by 1931-05-29?", "Which university is the Alma Mater of persons born by 1931-05-29?", "Which university was the Alma Mater of persons born by 1931-05-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-05-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1924-11-21?", "Tell me the Alma Mater of persons born by 1924-11-21?", "What is the Alma Mater of persons born by 1924-11-21?", "What was the Alma Mater of persons born by 1924-11-21?", "Which university is the Alma Mater of persons born by 1924-11-21?", "Which university was the Alma Mater of persons born by 1924-11-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1924-11-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1632-10-20?", "Tell me the Alma Mater of persons born by 1632-10-20?", "What is the Alma Mater of persons born by 1632-10-20?", "What was the Alma Mater of persons born by 1632-10-20?", "Which university is the Alma Mater of persons born by 1632-10-20?", "Which university was the Alma Mater of persons born by 1632-10-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1632-10-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1937-07-25?", "Tell me the Alma Mater of persons born by 1937-07-25?", "What is the Alma Mater of persons born by 1937-07-25?", "What was the Alma Mater of persons born by 1937-07-25?", "Which university is the Alma Mater of persons born by 1937-07-25?", "Which university was the Alma Mater of persons born by 1937-07-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1937-07-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1700-02-08?", "Tell me the Alma Mater of persons born by 1700-02-08?", "What is the Alma Mater of persons born by 1700-02-08?", "What was the Alma Mater of persons born by 1700-02-08?", "Which university is the Alma Mater of persons born by 1700-02-08?", "Which university was the Alma Mater of persons born by 1700-02-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1700-02-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "88",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of persons born by 1941-03-11?", "Tell me the Alma Mater of persons born by 1941-03-11?", "What is the Alma Mater of persons born by 1941-03-11?", "What was the Alma Mater of persons born by 1941-03-11?", "Which university is the Alma Mater of persons born by 1941-03-11?", "Which university was the Alma Mater of persons born by 1941-03-11?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1941-03-11\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Andrzej Wajda?", "Tell me the birth date of the spouse of Andrzej Wajda?", "What is the birth date of the spouse of Andrzej Wajda?", "What was the birth date of the spouse of Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrzej_Wajda> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Brad Pitt?", "Tell me the birth date of the spouse of Brad Pitt?", "What is the birth date of the spouse of Brad Pitt?", "What was the birth date of the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Carole Lombard?", "Tell me the birth date of the spouse of Carole Lombard?", "What is the birth date of the spouse of Carole Lombard?", "What was the birth date of the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Caroline of Brunswick?", "Tell me the birth date of the spouse of Caroline of Brunswick?", "What is the birth date of the spouse of Caroline of Brunswick?", "What was the birth date of the spouse of Caroline of Brunswick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Catherine I of Russia?", "Tell me the birth date of the spouse of Catherine I of Russia?", "What is the birth date of the spouse of Catherine I of Russia?", "What was the birth date of the spouse of Catherine I of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catherine_I_of_Russia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Christopher Lambert?", "Tell me the birth date of the spouse of Christopher Lambert?", "What is the birth date of the spouse of Christopher Lambert?", "What was the birth date of the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Clark Gable?", "Tell me the birth date of the spouse of Clark Gable?", "What is the birth date of the spouse of Clark Gable?", "What was the birth date of the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Cnut the Great?", "Tell me the birth date of the spouse of Cnut the Great?", "What is the birth date of the spouse of Cnut the Great?", "What was the birth date of the spouse of Cnut the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cnut_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Edmond Hamilton?", "Tell me the birth date of the spouse of Edmond Hamilton?", "What is the birth date of the spouse of Edmond Hamilton?", "What was the birth date of the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Elizabeth Taylor?", "Tell me the birth date of the spouse of Elizabeth Taylor?", "What is the birth date of the spouse of Elizabeth Taylor?", "What was the birth date of the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Elizabeth Woodville?", "Tell me the birth date of the spouse of Elizabeth Woodville?", "What is the birth date of the spouse of Elizabeth Woodville?", "What was the birth date of the spouse of Elizabeth Woodville?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Woodville> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Emma of Normandy?", "Tell me the birth date of the spouse of Emma of Normandy?", "What is the birth date of the spouse of Emma of Normandy?", "What was the birth date of the spouse of Emma of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_of_Normandy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of George IV of the United Kingdom?", "Tell me the birth date of the spouse of George IV of the United Kingdom?", "What is the birth date of the spouse of George IV of the United Kingdom?", "What was the birth date of the spouse of George IV of the United Kingdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_IV_of_the_United_Kingdom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Gwyneth Paltrow?", "Tell me the birth date of the spouse of Gwyneth Paltrow?", "What is the birth date of the spouse of Gwyneth Paltrow?", "What was the birth date of the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Ingrid Bergman?", "Tell me the birth date of the spouse of Ingrid Bergman?", "What is the birth date of the spouse of Ingrid Bergman?", "What was the birth date of the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Jennifer Aniston?", "Tell me the birth date of the spouse of Jennifer Aniston?", "What is the birth date of the spouse of Jennifer Aniston?", "What was the birth date of the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Leigh Brackett?", "Tell me the birth date of the spouse of Leigh Brackett?", "What is the birth date of the spouse of Leigh Brackett?", "What was the birth date of the spouse of Leigh Brackett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leigh_Brackett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Louis XVI of France?", "Tell me the birth date of the spouse of Louis XVI of France?", "What is the birth date of the spouse of Louis XVI of France?", "What was the birth date of the spouse of Louis XVI of France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_XVI_of_France> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Marie Antoinette?", "Tell me the birth date of the spouse of Marie Antoinette?", "What is the birth date of the spouse of Marie Antoinette?", "What was the birth date of the spouse of Marie Antoinette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Antoinette> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Peter the Great?", "Tell me the birth date of the spouse of Peter the Great?", "What is the birth date of the spouse of Peter the Great?", "What was the birth date of the spouse of Peter the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Richard Burton?", "Tell me the birth date of the spouse of Richard Burton?", "What is the birth date of the spouse of Richard Burton?", "What was the birth date of the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Roberto Rossellini?", "Tell me the birth date of the spouse of Roberto Rossellini?", "What is the birth date of the spouse of Roberto Rossellini?", "What was the birth date of the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Salman Rushdie?", "Tell me the birth date of the spouse of Salman Rushdie?", "What is the birth date of the spouse of Salman Rushdie?", "What was the birth date of the spouse of Salman Rushdie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salman_Rushdie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sylvia Plath?", "Tell me the birth date of the spouse of Sylvia Plath?", "What is the birth date of the spouse of Sylvia Plath?", "What was the birth date of the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Ted Hughes?", "Tell me the birth date of the spouse of Ted Hughes?", "What is the birth date of the spouse of Ted Hughes?", "What was the birth date of the spouse of Ted Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ted_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Theophanu?", "Tell me the birth date of the spouse of Theophanu?", "What is the birth date of the spouse of Theophanu?", "What was the birth date of the spouse of Theophanu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Theophanu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Val Kilmer?", "Tell me the birth date of the spouse of Val Kilmer?", "What is the birth date of the spouse of Val Kilmer?", "What was the birth date of the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Vivien Leigh?", "Tell me the birth date of the spouse of Vivien Leigh?", "What is the birth date of the spouse of Vivien Leigh?", "What was the birth date of the spouse of Vivien Leigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Leigh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Camille Flammarion?", "Tell me the birth date of the spouse of Camille Flammarion?", "What is the birth date of the spouse of Camille Flammarion?", "What was the birth date of the spouse of Camille Flammarion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camille_Flammarion> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Chris Martin?", "Tell me the birth date of the spouse of Chris Martin?", "What is the birth date of the spouse of Chris Martin?", "What was the birth date of the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Céline Bara?", "Tell me the birth date of the spouse of Céline Bara?", "What is the birth date of the spouse of Céline Bara?", "What was the birth date of the spouse of Céline Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Céline_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Dennis Quaid?", "Tell me the birth date of the spouse of Dennis Quaid?", "What is the birth date of the spouse of Dennis Quaid?", "What was the birth date of the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Joanne Whalley?", "Tell me the birth date of the spouse of Joanne Whalley?", "What is the birth date of the spouse of Joanne Whalley?", "What was the birth date of the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of John Grey of Groby?", "Tell me the birth date of the spouse of John Grey of Groby?", "What is the birth date of the spouse of John Grey of Groby?", "What was the birth date of the spouse of John Grey of Groby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Grey_of_Groby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Minnie Maddern Fiske?", "Tell me the birth date of the spouse of Minnie Maddern Fiske?", "What is the birth date of the spouse of Minnie Maddern Fiske?", "What was the birth date of the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Padma Lakshmi?", "Tell me the birth date of the spouse of Padma Lakshmi?", "What is the birth date of the spouse of Padma Lakshmi?", "What was the birth date of the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Talisa Soto?", "Tell me the birth date of the spouse of Talisa Soto?", "What is the birth date of the spouse of Talisa Soto?", "What was the birth date of the spouse of Talisa Soto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talisa_Soto> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Aaron Spelling?", "Tell me the birth date of the spouse of Aaron Spelling?", "What is the birth date of the spouse of Aaron Spelling?", "What was the birth date of the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Adam Hochschild?", "Tell me the birth date of the spouse of Adam Hochschild?", "What is the birth date of the spouse of Adam Hochschild?", "What was the birth date of the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Alastair Dunnett?", "Tell me the birth date of the spouse of Alastair Dunnett?", "What is the birth date of the spouse of Alastair Dunnett?", "What was the birth date of the spouse of Alastair Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alastair_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Arlie Russell Hochschild?", "Tell me the birth date of the spouse of Arlie Russell Hochschild?", "What is the birth date of the spouse of Arlie Russell Hochschild?", "What was the birth date of the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Beata Tyszkiewicz?", "Tell me the birth date of the spouse of Beata Tyszkiewicz?", "What is the birth date of the spouse of Beata Tyszkiewicz?", "What was the birth date of the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Benjamin Bratt?", "Tell me the birth date of the spouse of Benjamin Bratt?", "What is the birth date of the spouse of Benjamin Bratt?", "What was the birth date of the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Bunker Roy?", "Tell me the birth date of the spouse of Bunker Roy?", "What is the birth date of the spouse of Bunker Roy?", "What was the birth date of the spouse of Bunker Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bunker_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Candy Spelling?", "Tell me the birth date of the spouse of Candy Spelling?", "What is the birth date of the spouse of Candy Spelling?", "What was the birth date of the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Cyrille Bara?", "Tell me the birth date of the spouse of Cyrille Bara?", "What is the birth date of the spouse of Cyrille Bara?", "What was the birth date of the spouse of Cyrille Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cyrille_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Dorothy Dunnett?", "Tell me the birth date of the spouse of Dorothy Dunnett?", "What is the birth date of the spouse of Dorothy Dunnett?", "What was the birth date of the spouse of Dorothy Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dorothy_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Ehud Olmert?", "Tell me the birth date of the spouse of Ehud Olmert?", "What is the birth date of the spouse of Ehud Olmert?", "What was the birth date of the spouse of Ehud Olmert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ehud_Olmert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Elvira of Castile, Queen of León?", "Tell me the birth date of the spouse of Elvira of Castile, Queen of León?", "What is the birth date of the spouse of Elvira of Castile, Queen of León?", "What was the birth date of the spouse of Elvira of Castile, Queen of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Gemini Ganesan?", "Tell me the birth date of the spouse of Gemini Ganesan?", "What is the birth date of the spouse of Gemini Ganesan?", "What was the birth date of the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Harriet Smithson?", "Tell me the birth date of the spouse of Harriet Smithson?", "What is the birth date of the spouse of Harriet Smithson?", "What was the birth date of the spouse of Harriet Smithson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Harriet_Smithson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of James Harris Simons?", "Tell me the birth date of the spouse of James Harris Simons?", "What is the birth date of the spouse of James Harris Simons?", "What was the birth date of the spouse of James Harris Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Harris_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Lewis Craig Humphrey?", "Tell me the birth date of the spouse of Lewis Craig Humphrey?", "What is the birth date of the spouse of Lewis Craig Humphrey?", "What was the birth date of the spouse of Lewis Craig Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lewis_Craig_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Paul Hasluck?", "Tell me the birth date of the spouse of Paul Hasluck?", "What is the birth date of the spouse of Paul Hasluck?", "What was the birth date of the spouse of Paul Hasluck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Hasluck> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Paula Dockery?", "Tell me the birth date of the spouse of Paula Dockery?", "What is the birth date of the spouse of Paula Dockery?", "What was the birth date of the spouse of Paula Dockery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paula_Dockery> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Robert Sidney, 2nd Earl of Leicester?", "Tell me the birth date of the spouse of Robert Sidney, 2nd Earl of Leicester?", "What is the birth date of the spouse of Robert Sidney, 2nd Earl of Leicester?", "What was the birth date of the spouse of Robert Sidney, 2nd Earl of Leicester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Sidney,_2nd_Earl_of_Leicester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Rolly Bester?", "Tell me the birth date of the spouse of Rolly Bester?", "What is the birth date of the spouse of Rolly Bester?", "What was the birth date of the spouse of Rolly Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rolly_Bester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Ruy Guerra?", "Tell me the birth date of the spouse of Ruy Guerra?", "What is the birth date of the spouse of Ruy Guerra?", "What was the birth date of the spouse of Ruy Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruy_Guerra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Clara McMillen?", "Tell me the birth date of the spouse of Clara McMillen?", "What is the birth date of the spouse of Clara McMillen?", "What was the birth date of the spouse of Clara McMillen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clara_McMillen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Diana Gould (dancer)?", "Tell me the birth date of the spouse of Diana Gould (dancer)?", "What is the birth date of the spouse of Diana Gould (dancer)?", "What was the birth date of the spouse of Diana Gould (dancer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Gould_(dancer)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sidney Miller (actor)?", "Tell me the birth date of the spouse of Sidney Miller (actor)?", "What is the birth date of the spouse of Sidney Miller (actor)?", "What was the birth date of the spouse of Sidney Miller (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Miller_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sir Edward Burgh?", "Tell me the birth date of the spouse of Sir Edward Burgh?", "What is the birth date of the spouse of Sir Edward Burgh?", "What was the birth date of the spouse of Sir Edward Burgh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sir_Edward_Burgh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Henry Morgenthau Jr.?", "Tell me the birth date of the spouse of Henry Morgenthau Jr.?", "What is the birth date of the spouse of Henry Morgenthau Jr.?", "What was the birth date of the spouse of Henry Morgenthau Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Morgenthau_Jr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Lydia Lopokova?", "Tell me the birth date of the spouse of Lydia Lopokova?", "What is the birth date of the spouse of Lydia Lopokova?", "What was the birth date of the spouse of Lydia Lopokova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Lopokova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Maxwell Reed?", "Tell me the birth date of the spouse of Maxwell Reed?", "What is the birth date of the spouse of Maxwell Reed?", "What was the birth date of the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sigrid the Haughty?", "Tell me the birth date of the spouse of Sigrid the Haughty?", "What is the birth date of the spouse of Sigrid the Haughty?", "What was the birth date of the spouse of Sigrid the Haughty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sigrid_the_Haughty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Elena Ceaușescu?", "Tell me the birth date of the spouse of Elena Ceaușescu?", "What is the birth date of the spouse of Elena Ceaușescu?", "What was the birth date of the spouse of Elena Ceaușescu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Ceaușescu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Lydia Clarke?", "Tell me the birth date of the spouse of Lydia Clarke?", "What is the birth date of the spouse of Lydia Clarke?", "What was the birth date of the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Ruqaiya Sultan Begum?", "Tell me the birth date of the spouse of Ruqaiya Sultan Begum?", "What is the birth date of the spouse of Ruqaiya Sultan Begum?", "What was the birth date of the spouse of Ruqaiya Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruqaiya_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Eliza Jumel?", "Tell me the birth date of the spouse of Eliza Jumel?", "What is the birth date of the spouse of Eliza Jumel?", "What was the birth date of the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Lena Herzog?", "Tell me the birth date of the spouse of Lena Herzog?", "What is the birth date of the spouse of Lena Herzog?", "What was the birth date of the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Katie Lee (chef)?", "Tell me the birth date of the spouse of Katie Lee (chef)?", "What is the birth date of the spouse of Katie Lee (chef)?", "What was the birth date of the spouse of Katie Lee (chef)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Lee_(chef)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Elsa Pataky?", "Tell me the birth date of the spouse of Elsa Pataky?", "What is the birth date of the spouse of Elsa Pataky?", "What was the birth date of the spouse of Elsa Pataky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elsa_Pataky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Maïwenn?", "Tell me the birth date of the spouse of Maïwenn?", "What is the birth date of the spouse of Maïwenn?", "What was the birth date of the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Tom Courtenay?", "Tell me the birth date of the spouse of Tom Courtenay?", "What is the birth date of the spouse of Tom Courtenay?", "What was the birth date of the spouse of Tom Courtenay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tom_Courtenay> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Christian I of Denmark?", "Tell me the birth date of the spouse of Christian I of Denmark?", "What is the birth date of the spouse of Christian I of Denmark?", "What was the birth date of the spouse of Christian I of Denmark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian_I_of_Denmark> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Edward of Westminster, Prince of Wales?", "Tell me the birth date of the spouse of Edward of Westminster, Prince of Wales?", "What is the birth date of the spouse of Edward of Westminster, Prince of Wales?", "What was the birth date of the spouse of Edward of Westminster, Prince of Wales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Joanne Woodward?", "Tell me the birth date of the spouse of Joanne Woodward?", "What is the birth date of the spouse of Joanne Woodward?", "What was the birth date of the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Lady Caroline Lamb?", "Tell me the birth date of the spouse of Lady Caroline Lamb?", "What is the birth date of the spouse of Lady Caroline Lamb?", "What was the birth date of the spouse of Lady Caroline Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lady_Caroline_Lamb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Margaret Sullavan?", "Tell me the birth date of the spouse of Margaret Sullavan?", "What is the birth date of the spouse of Margaret Sullavan?", "What was the birth date of the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Maria Fitzherbert?", "Tell me the birth date of the spouse of Maria Fitzherbert?", "What is the birth date of the spouse of Maria Fitzherbert?", "What was the birth date of the spouse of Maria Fitzherbert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maria_Fitzherbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Mickey Deans?", "Tell me the birth date of the spouse of Mickey Deans?", "What is the birth date of the spouse of Mickey Deans?", "What was the birth date of the spouse of Mickey Deans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mickey_Deans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Alice Hathaway Lee Roosevelt?", "Tell me the birth date of the spouse of Alice Hathaway Lee Roosevelt?", "What is the birth date of the spouse of Alice Hathaway Lee Roosevelt?", "What was the birth date of the spouse of Alice Hathaway Lee Roosevelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Frank Bunker Gilbreth Sr.?", "Tell me the birth date of the spouse of Frank Bunker Gilbreth Sr.?", "What is the birth date of the spouse of Frank Bunker Gilbreth Sr.?", "What was the birth date of the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Alfred Steele?", "Tell me the birth date of the spouse of Alfred Steele?", "What is the birth date of the spouse of Alfred Steele?", "What was the birth date of the spouse of Alfred Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Steele> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Barbara Hutton?", "Tell me the birth date of the spouse of Barbara Hutton?", "What is the birth date of the spouse of Barbara Hutton?", "What was the birth date of the spouse of Barbara Hutton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Hutton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sidney Luft?", "Tell me the birth date of the spouse of Sidney Luft?", "What is the birth date of the spouse of Sidney Luft?", "What was the birth date of the spouse of Sidney Luft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Luft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sylvia Ashley?", "Tell me the birth date of the spouse of Sylvia Ashley?", "What is the birth date of the spouse of Sylvia Ashley?", "What was the birth date of the spouse of Sylvia Ashley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Ashley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Salima Sultan Begum?", "Tell me the birth date of the spouse of Salima Sultan Begum?", "What is the birth date of the spouse of Salima Sultan Begum?", "What was the birth date of the spouse of Salima Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salima_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Cecily Neville, Duchess of Warwick?", "Tell me the birth date of the spouse of Cecily Neville, Duchess of Warwick?", "What is the birth date of the spouse of Cecily Neville, Duchess of Warwick?", "What was the birth date of the spouse of Cecily Neville, Duchess of Warwick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cecily_Neville,_Duchess_of_Warwick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of David Evans Shaw?", "Tell me the birth date of the spouse of David Evans Shaw?", "What is the birth date of the spouse of David Evans Shaw?", "What was the birth date of the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of John Jay O'Connor?", "Tell me the birth date of the spouse of John Jay O'Connor?", "What is the birth date of the spouse of John Jay O'Connor?", "What was the birth date of the spouse of John Jay O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jay_O'Connor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Marta Fernandez Miranda de Batista?", "Tell me the birth date of the spouse of Marta Fernandez Miranda de Batista?", "What is the birth date of the spouse of Marta Fernandez Miranda de Batista?", "What was the birth date of the spouse of Marta Fernandez Miranda de Batista?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Josephine Dillon?", "Tell me the birth date of the spouse of Josephine Dillon?", "What is the birth date of the spouse of Josephine Dillon?", "What was the birth date of the spouse of Josephine Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josephine_Dillon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Sunita Deshpande?", "Tell me the birth date of the spouse of Sunita Deshpande?", "What is the birth date of the spouse of Sunita Deshpande?", "What was the birth date of the spouse of Sunita Deshpande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunita_Deshpande> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Bettina Gorton?", "Tell me the birth date of the spouse of Bettina Gorton?", "What is the birth date of the spouse of Bettina Gorton?", "What was the birth date of the spouse of Bettina Gorton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bettina_Gorton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Luma de Oliveira?", "Tell me the birth date of the spouse of Luma de Oliveira?", "What is the birth date of the spouse of Luma de Oliveira?", "What was the birth date of the spouse of Luma de Oliveira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luma_de_Oliveira> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Tove of the Obotrites?", "Tell me the birth date of the spouse of Tove of the Obotrites?", "What is the birth date of the spouse of Tove of the Obotrites?", "What was the birth date of the spouse of Tove of the Obotrites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tove_of_the_Obotrites> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Gelli de Belen?", "Tell me the birth date of the spouse of Gelli de Belen?", "What is the birth date of the spouse of Gelli de Belen?", "What was the birth date of the spouse of Gelli de Belen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gelli_de_Belen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "89",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of Albia Dominica?", "Tell me the birth date of the spouse of Albia Dominica?", "What is the birth date of the spouse of Albia Dominica?", "What was the birth date of the spouse of Albia Dominica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albia_Dominica> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1969-12-17?", "Tell me the birth date of persons born by 1969-12-17?", "What is the birth date of persons born by 1969-12-17?", "What was the birth date of persons born by 1969-12-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1969-12-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1936-11-30?", "Tell me the birth date of persons born by 1936-11-30?", "What is the birth date of persons born by 1936-11-30?", "What was the birth date of persons born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1990-10-30?", "Tell me the birth date of persons born by 1990-10-30?", "What is the birth date of persons born by 1990-10-30?", "What was the birth date of persons born by 1990-10-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1990-10-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1976-11-12?", "Tell me the birth date of persons born by 1976-11-12?", "What is the birth date of persons born by 1976-11-12?", "What was the birth date of persons born by 1976-11-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1976-11-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1989-11-29?", "Tell me the birth date of persons born by 1989-11-29?", "What is the birth date of persons born by 1989-11-29?", "What was the birth date of persons born by 1989-11-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1989-11-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1943-12-29?", "Tell me the birth date of persons born by 1943-12-29?", "What is the birth date of persons born by 1943-12-29?", "What was the birth date of persons born by 1943-12-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-12-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1918-12-30?", "Tell me the birth date of persons born by 1918-12-30?", "What is the birth date of persons born by 1918-12-30?", "What was the birth date of persons born by 1918-12-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-12-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1975-10-13?", "Tell me the birth date of persons born by 1975-10-13?", "What is the birth date of persons born by 1975-10-13?", "What was the birth date of persons born by 1975-10-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1975-10-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1896-09-01?", "Tell me the birth date of persons born by 1896-09-01?", "What is the birth date of persons born by 1896-09-01?", "What was the birth date of persons born by 1896-09-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1896-09-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1756-02-06?", "Tell me the birth date of persons born by 1756-02-06?", "What is the birth date of persons born by 1756-02-06?", "What was the birth date of persons born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1900-11-14?", "Tell me the birth date of persons born by 1900-11-14?", "What is the birth date of persons born by 1900-11-14?", "What was the birth date of persons born by 1900-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1918-10-06?", "Tell me the birth date of persons born by 1918-10-06?", "What is the birth date of persons born by 1918-10-06?", "What was the birth date of persons born by 1918-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1667-05-26?", "Tell me the birth date of persons born by 1667-05-26?", "What is the birth date of persons born by 1667-05-26?", "What was the birth date of persons born by 1667-05-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1667-05-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1779-11-14?", "Tell me the birth date of persons born by 1779-11-14?", "What is the birth date of persons born by 1779-11-14?", "What was the birth date of persons born by 1779-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1779-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1937-01-01?", "Tell me the birth date of persons born by 1937-01-01?", "What is the birth date of persons born by 1937-01-01?", "What was the birth date of persons born by 1937-01-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1937-01-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1952-07-06?", "Tell me the birth date of persons born by 1952-07-06?", "What is the birth date of persons born by 1952-07-06?", "What was the birth date of persons born by 1952-07-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1900-02-05?", "Tell me the birth date of persons born by 1900-02-05?", "What is the birth date of persons born by 1900-02-05?", "What was the birth date of persons born by 1900-02-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-02-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1870-12-10?", "Tell me the birth date of persons born by 1870-12-10?", "What is the birth date of persons born by 1870-12-10?", "What was the birth date of persons born by 1870-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1870-12-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1752-09-18?", "Tell me the birth date of persons born by 1752-09-18?", "What is the birth date of persons born by 1752-09-18?", "What was the birth date of persons born by 1752-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1752-09-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1929-05-16?", "Tell me the birth date of persons born by 1929-05-16?", "What is the birth date of persons born by 1929-05-16?", "What was the birth date of persons born by 1929-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1929-05-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1955-02-13?", "Tell me the birth date of persons born by 1955-02-13?", "What is the birth date of persons born by 1955-02-13?", "What was the birth date of persons born by 1955-02-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1955-02-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1940-04-25?", "Tell me the birth date of persons born by 1940-04-25?", "What is the birth date of persons born by 1940-04-25?", "What was the birth date of persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1946-02-21?", "Tell me the birth date of persons born by 1946-02-21?", "What is the birth date of persons born by 1946-02-21?", "What was the birth date of persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1970-08-13?", "Tell me the birth date of persons born by 1970-08-13?", "What is the birth date of persons born by 1970-08-13?", "What was the birth date of persons born by 1970-08-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1970-08-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1863-12-08?", "Tell me the birth date of persons born by 1863-12-08?", "What is the birth date of persons born by 1863-12-08?", "What was the birth date of persons born by 1863-12-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1863-12-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1936-05-09?", "Tell me the birth date of persons born by 1936-05-09?", "What is the birth date of persons born by 1936-05-09?", "What was the birth date of persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1414-11-09?", "Tell me the birth date of persons born by 1414-11-09?", "What is the birth date of persons born by 1414-11-09?", "What was the birth date of persons born by 1414-11-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1414-11-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1931-05-03?", "Tell me the birth date of persons born by 1931-05-03?", "What is the birth date of persons born by 1931-05-03?", "What was the birth date of persons born by 1931-05-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-05-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "110",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of persons born by 1950-01-09?", "Tell me the birth date of persons born by 1950-01-09?", "What is the birth date of persons born by 1950-01-09?", "What was the birth date of persons born by 1950-01-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-01-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Alfred Bester?", "Tell me the occupation of the spouse of Alfred Bester?", "What is the occupation of the spouse of Alfred Bester?", "What was the occupation of the spouse of Alfred Bester?", "Which person function is the occupation of the spouse of Alfred Bester?", "Which person function was the occupation of the spouse of Alfred Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Bester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Brad Pitt?", "Tell me the occupation of the spouse of Brad Pitt?", "What is the occupation of the spouse of Brad Pitt?", "What was the occupation of the spouse of Brad Pitt?", "Which person function is the occupation of the spouse of Brad Pitt?", "Which person function was the occupation of the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Carole Lombard?", "Tell me the occupation of the spouse of Carole Lombard?", "What is the occupation of the spouse of Carole Lombard?", "What was the occupation of the spouse of Carole Lombard?", "Which person function is the occupation of the spouse of Carole Lombard?", "Which person function was the occupation of the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Christopher Lambert?", "Tell me the occupation of the spouse of Christopher Lambert?", "What is the occupation of the spouse of Christopher Lambert?", "What was the occupation of the spouse of Christopher Lambert?", "Which person function is the occupation of the spouse of Christopher Lambert?", "Which person function was the occupation of the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Clark Gable?", "Tell me the occupation of the spouse of Clark Gable?", "What is the occupation of the spouse of Clark Gable?", "What was the occupation of the spouse of Clark Gable?", "Which person function is the occupation of the spouse of Clark Gable?", "Which person function was the occupation of the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Edmond Hamilton?", "Tell me the occupation of the spouse of Edmond Hamilton?", "What is the occupation of the spouse of Edmond Hamilton?", "What was the occupation of the spouse of Edmond Hamilton?", "Which person function is the occupation of the spouse of Edmond Hamilton?", "Which person function was the occupation of the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Elizabeth Taylor?", "Tell me the occupation of the spouse of Elizabeth Taylor?", "What is the occupation of the spouse of Elizabeth Taylor?", "What was the occupation of the spouse of Elizabeth Taylor?", "Which person function is the occupation of the spouse of Elizabeth Taylor?", "Which person function was the occupation of the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Gwyneth Paltrow?", "Tell me the occupation of the spouse of Gwyneth Paltrow?", "What is the occupation of the spouse of Gwyneth Paltrow?", "What was the occupation of the spouse of Gwyneth Paltrow?", "Which person function is the occupation of the spouse of Gwyneth Paltrow?", "Which person function was the occupation of the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Ingrid Bergman?", "Tell me the occupation of the spouse of Ingrid Bergman?", "What is the occupation of the spouse of Ingrid Bergman?", "What was the occupation of the spouse of Ingrid Bergman?", "Which person function is the occupation of the spouse of Ingrid Bergman?", "Which person function was the occupation of the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Jennifer Aniston?", "Tell me the occupation of the spouse of Jennifer Aniston?", "What is the occupation of the spouse of Jennifer Aniston?", "What was the occupation of the spouse of Jennifer Aniston?", "Which person function is the occupation of the spouse of Jennifer Aniston?", "Which person function was the occupation of the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Richard Burton?", "Tell me the occupation of the spouse of Richard Burton?", "What is the occupation of the spouse of Richard Burton?", "What was the occupation of the spouse of Richard Burton?", "Which person function is the occupation of the spouse of Richard Burton?", "Which person function was the occupation of the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Roberto Rossellini?", "Tell me the occupation of the spouse of Roberto Rossellini?", "What is the occupation of the spouse of Roberto Rossellini?", "What was the occupation of the spouse of Roberto Rossellini?", "Which person function is the occupation of the spouse of Roberto Rossellini?", "Which person function was the occupation of the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Val Kilmer?", "Tell me the occupation of the spouse of Val Kilmer?", "What is the occupation of the spouse of Val Kilmer?", "What was the occupation of the spouse of Val Kilmer?", "Which person function is the occupation of the spouse of Val Kilmer?", "Which person function was the occupation of the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Chris Martin?", "Tell me the occupation of the spouse of Chris Martin?", "What is the occupation of the spouse of Chris Martin?", "What was the occupation of the spouse of Chris Martin?", "Which person function is the occupation of the spouse of Chris Martin?", "Which person function was the occupation of the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Dennis Quaid?", "Tell me the occupation of the spouse of Dennis Quaid?", "What is the occupation of the spouse of Dennis Quaid?", "What was the occupation of the spouse of Dennis Quaid?", "Which person function is the occupation of the spouse of Dennis Quaid?", "Which person function was the occupation of the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Joanne Whalley?", "Tell me the occupation of the spouse of Joanne Whalley?", "What is the occupation of the spouse of Joanne Whalley?", "What was the occupation of the spouse of Joanne Whalley?", "Which person function is the occupation of the spouse of Joanne Whalley?", "Which person function was the occupation of the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Minnie Maddern Fiske?", "Tell me the occupation of the spouse of Minnie Maddern Fiske?", "What is the occupation of the spouse of Minnie Maddern Fiske?", "What was the occupation of the spouse of Minnie Maddern Fiske?", "Which person function is the occupation of the spouse of Minnie Maddern Fiske?", "Which person function was the occupation of the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Savitri (actress)?", "Tell me the occupation of the spouse of Savitri (actress)?", "What is the occupation of the spouse of Savitri (actress)?", "What was the occupation of the spouse of Savitri (actress)?", "Which person function is the occupation of the spouse of Savitri (actress)?", "Which person function was the occupation of the spouse of Savitri (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Savitri_(actress)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Talisa Soto?", "Tell me the occupation of the spouse of Talisa Soto?", "What is the occupation of the spouse of Talisa Soto?", "What was the occupation of the spouse of Talisa Soto?", "Which person function is the occupation of the spouse of Talisa Soto?", "Which person function was the occupation of the spouse of Talisa Soto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talisa_Soto> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Aaron Spelling?", "Tell me the occupation of the spouse of Aaron Spelling?", "What is the occupation of the spouse of Aaron Spelling?", "What was the occupation of the spouse of Aaron Spelling?", "Which person function is the occupation of the spouse of Aaron Spelling?", "Which person function was the occupation of the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Alastair Dunnett?", "Tell me the occupation of the spouse of Alastair Dunnett?", "What is the occupation of the spouse of Alastair Dunnett?", "What was the occupation of the spouse of Alastair Dunnett?", "Which person function is the occupation of the spouse of Alastair Dunnett?", "Which person function was the occupation of the spouse of Alastair Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alastair_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Arlie Russell Hochschild?", "Tell me the occupation of the spouse of Arlie Russell Hochschild?", "What is the occupation of the spouse of Arlie Russell Hochschild?", "What was the occupation of the spouse of Arlie Russell Hochschild?", "Which person function is the occupation of the spouse of Arlie Russell Hochschild?", "Which person function was the occupation of the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Barbara Simons?", "Tell me the occupation of the spouse of Barbara Simons?", "What is the occupation of the spouse of Barbara Simons?", "What was the occupation of the spouse of Barbara Simons?", "Which person function is the occupation of the spouse of Barbara Simons?", "Which person function was the occupation of the spouse of Barbara Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Beata Tyszkiewicz?", "Tell me the occupation of the spouse of Beata Tyszkiewicz?", "What is the occupation of the spouse of Beata Tyszkiewicz?", "What was the occupation of the spouse of Beata Tyszkiewicz?", "Which person function is the occupation of the spouse of Beata Tyszkiewicz?", "Which person function was the occupation of the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Benjamin Bratt?", "Tell me the occupation of the spouse of Benjamin Bratt?", "What is the occupation of the spouse of Benjamin Bratt?", "What was the occupation of the spouse of Benjamin Bratt?", "Which person function is the occupation of the spouse of Benjamin Bratt?", "Which person function was the occupation of the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Bunker Roy?", "Tell me the occupation of the spouse of Bunker Roy?", "What is the occupation of the spouse of Bunker Roy?", "What was the occupation of the spouse of Bunker Roy?", "Which person function is the occupation of the spouse of Bunker Roy?", "Which person function was the occupation of the spouse of Bunker Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bunker_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Candy Spelling?", "Tell me the occupation of the spouse of Candy Spelling?", "What is the occupation of the spouse of Candy Spelling?", "What was the occupation of the spouse of Candy Spelling?", "Which person function is the occupation of the spouse of Candy Spelling?", "Which person function was the occupation of the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Eleanor Silliman Belknap Humphrey?", "Tell me the occupation of the spouse of Eleanor Silliman Belknap Humphrey?", "What is the occupation of the spouse of Eleanor Silliman Belknap Humphrey?", "What was the occupation of the spouse of Eleanor Silliman Belknap Humphrey?", "Which person function is the occupation of the spouse of Eleanor Silliman Belknap Humphrey?", "Which person function was the occupation of the spouse of Eleanor Silliman Belknap Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Lewis Craig Humphrey?", "Tell me the occupation of the spouse of Lewis Craig Humphrey?", "What is the occupation of the spouse of Lewis Craig Humphrey?", "What was the occupation of the spouse of Lewis Craig Humphrey?", "Which person function is the occupation of the spouse of Lewis Craig Humphrey?", "Which person function was the occupation of the spouse of Lewis Craig Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lewis_Craig_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Ruy Guerra?", "Tell me the occupation of the spouse of Ruy Guerra?", "What is the occupation of the spouse of Ruy Guerra?", "What was the occupation of the spouse of Ruy Guerra?", "Which person function is the occupation of the spouse of Ruy Guerra?", "Which person function was the occupation of the spouse of Ruy Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruy_Guerra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Yuri Rasovsky?", "Tell me the occupation of the spouse of Yuri Rasovsky?", "What is the occupation of the spouse of Yuri Rasovsky?", "What was the occupation of the spouse of Yuri Rasovsky?", "Which person function is the occupation of the spouse of Yuri Rasovsky?", "Which person function was the occupation of the spouse of Yuri Rasovsky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yuri_Rasovsky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Deborah Walley?", "Tell me the occupation of the spouse of Deborah Walley?", "What is the occupation of the spouse of Deborah Walley?", "What was the occupation of the spouse of Deborah Walley?", "Which person function is the occupation of the spouse of Deborah Walley?", "Which person function was the occupation of the spouse of Deborah Walley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deborah_Walley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Sarala Roy?", "Tell me the occupation of the spouse of Sarala Roy?", "What is the occupation of the spouse of Sarala Roy?", "What was the occupation of the spouse of Sarala Roy?", "Which person function is the occupation of the spouse of Sarala Roy?", "Which person function was the occupation of the spouse of Sarala Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sarala_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Sidney Miller (actor)?", "Tell me the occupation of the spouse of Sidney Miller (actor)?", "What is the occupation of the spouse of Sidney Miller (actor)?", "What was the occupation of the spouse of Sidney Miller (actor)?", "Which person function is the occupation of the spouse of Sidney Miller (actor)?", "Which person function was the occupation of the spouse of Sidney Miller (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Miller_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Henry Morgenthau Jr.?", "Tell me the occupation of the spouse of Henry Morgenthau Jr.?", "What is the occupation of the spouse of Henry Morgenthau Jr.?", "What was the occupation of the spouse of Henry Morgenthau Jr.?", "Which person function is the occupation of the spouse of Henry Morgenthau Jr.?", "Which person function was the occupation of the spouse of Henry Morgenthau Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Morgenthau_Jr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Maxwell Reed?", "Tell me the occupation of the spouse of Maxwell Reed?", "What is the occupation of the spouse of Maxwell Reed?", "What was the occupation of the spouse of Maxwell Reed?", "Which person function is the occupation of the spouse of Maxwell Reed?", "Which person function was the occupation of the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Lydia Clarke?", "Tell me the occupation of the spouse of Lydia Clarke?", "What is the occupation of the spouse of Lydia Clarke?", "What was the occupation of the spouse of Lydia Clarke?", "Which person function is the occupation of the spouse of Lydia Clarke?", "Which person function was the occupation of the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Kiran Juneja?", "Tell me the occupation of the spouse of Kiran Juneja?", "What is the occupation of the spouse of Kiran Juneja?", "What was the occupation of the spouse of Kiran Juneja?", "Which person function is the occupation of the spouse of Kiran Juneja?", "Which person function was the occupation of the spouse of Kiran Juneja?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kiran_Juneja> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Lena Herzog?", "Tell me the occupation of the spouse of Lena Herzog?", "What is the occupation of the spouse of Lena Herzog?", "What was the occupation of the spouse of Lena Herzog?", "Which person function is the occupation of the spouse of Lena Herzog?", "Which person function was the occupation of the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Elsa Pataky?", "Tell me the occupation of the spouse of Elsa Pataky?", "What is the occupation of the spouse of Elsa Pataky?", "What was the occupation of the spouse of Elsa Pataky?", "Which person function is the occupation of the spouse of Elsa Pataky?", "Which person function was the occupation of the spouse of Elsa Pataky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elsa_Pataky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Maïwenn?", "Tell me the occupation of the spouse of Maïwenn?", "What is the occupation of the spouse of Maïwenn?", "What was the occupation of the spouse of Maïwenn?", "Which person function is the occupation of the spouse of Maïwenn?", "Which person function was the occupation of the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Joanne Woodward?", "Tell me the occupation of the spouse of Joanne Woodward?", "What is the occupation of the spouse of Joanne Woodward?", "What was the occupation of the spouse of Joanne Woodward?", "Which person function is the occupation of the spouse of Joanne Woodward?", "Which person function was the occupation of the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Margaret Sullavan?", "Tell me the occupation of the spouse of Margaret Sullavan?", "What is the occupation of the spouse of Margaret Sullavan?", "What was the occupation of the spouse of Margaret Sullavan?", "Which person function is the occupation of the spouse of Margaret Sullavan?", "Which person function was the occupation of the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Mickey Deans?", "Tell me the occupation of the spouse of Mickey Deans?", "What is the occupation of the spouse of Mickey Deans?", "What was the occupation of the spouse of Mickey Deans?", "Which person function is the occupation of the spouse of Mickey Deans?", "Which person function was the occupation of the spouse of Mickey Deans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mickey_Deans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Gustaf Gründgens?", "Tell me the occupation of the spouse of Gustaf Gründgens?", "What is the occupation of the spouse of Gustaf Gründgens?", "What was the occupation of the spouse of Gustaf Gründgens?", "Which person function is the occupation of the spouse of Gustaf Gründgens?", "Which person function was the occupation of the spouse of Gustaf Gründgens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gustaf_Gründgens> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Frank Bunker Gilbreth Sr.?", "Tell me the occupation of the spouse of Frank Bunker Gilbreth Sr.?", "What is the occupation of the spouse of Frank Bunker Gilbreth Sr.?", "What was the occupation of the spouse of Frank Bunker Gilbreth Sr.?", "Which person function is the occupation of the spouse of Frank Bunker Gilbreth Sr.?", "Which person function was the occupation of the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Alfred Steele?", "Tell me the occupation of the spouse of Alfred Steele?", "What is the occupation of the spouse of Alfred Steele?", "What was the occupation of the spouse of Alfred Steele?", "Which person function is the occupation of the spouse of Alfred Steele?", "Which person function was the occupation of the spouse of Alfred Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Steele> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Ralph Forbes?", "Tell me the occupation of the spouse of Ralph Forbes?", "What is the occupation of the spouse of Ralph Forbes?", "What was the occupation of the spouse of Ralph Forbes?", "Which person function is the occupation of the spouse of Ralph Forbes?", "Which person function was the occupation of the spouse of Ralph Forbes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ralph_Forbes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Sidney Luft?", "Tell me the occupation of the spouse of Sidney Luft?", "What is the occupation of the spouse of Sidney Luft?", "What was the occupation of the spouse of Sidney Luft?", "Which person function is the occupation of the spouse of Sidney Luft?", "Which person function was the occupation of the spouse of Sidney Luft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Luft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Sylvia Ashley?", "Tell me the occupation of the spouse of Sylvia Ashley?", "What is the occupation of the spouse of Sylvia Ashley?", "What was the occupation of the spouse of Sylvia Ashley?", "Which person function is the occupation of the spouse of Sylvia Ashley?", "Which person function was the occupation of the spouse of Sylvia Ashley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Ashley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of David Evans Shaw?", "Tell me the occupation of the spouse of David Evans Shaw?", "What is the occupation of the spouse of David Evans Shaw?", "What was the occupation of the spouse of David Evans Shaw?", "Which person function is the occupation of the spouse of David Evans Shaw?", "Which person function was the occupation of the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Josephine Dillon?", "Tell me the occupation of the spouse of Josephine Dillon?", "What is the occupation of the spouse of Josephine Dillon?", "What was the occupation of the spouse of Josephine Dillon?", "Which person function is the occupation of the spouse of Josephine Dillon?", "Which person function was the occupation of the spouse of Josephine Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josephine_Dillon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Lucy Barker?", "Tell me the occupation of the spouse of Lucy Barker?", "What is the occupation of the spouse of Lucy Barker?", "What was the occupation of the spouse of Lucy Barker?", "Which person function is the occupation of the spouse of Lucy Barker?", "Which person function was the occupation of the spouse of Lucy Barker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Barker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Sunita Deshpande?", "Tell me the occupation of the spouse of Sunita Deshpande?", "What is the occupation of the spouse of Sunita Deshpande?", "What was the occupation of the spouse of Sunita Deshpande?", "Which person function is the occupation of the spouse of Sunita Deshpande?", "Which person function was the occupation of the spouse of Sunita Deshpande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunita_Deshpande> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Amy Holden Jones?", "Tell me the occupation of the spouse of Amy Holden Jones?", "What is the occupation of the spouse of Amy Holden Jones?", "What was the occupation of the spouse of Amy Holden Jones?", "Which person function is the occupation of the spouse of Amy Holden Jones?", "Which person function was the occupation of the spouse of Amy Holden Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Holden_Jones> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Luma de Oliveira?", "Tell me the occupation of the spouse of Luma de Oliveira?", "What is the occupation of the spouse of Luma de Oliveira?", "What was the occupation of the spouse of Luma de Oliveira?", "Which person function is the occupation of the spouse of Luma de Oliveira?", "Which person function was the occupation of the spouse of Luma de Oliveira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luma_de_Oliveira> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Gelli de Belen?", "Tell me the occupation of the spouse of Gelli de Belen?", "What is the occupation of the spouse of Gelli de Belen?", "What was the occupation of the spouse of Gelli de Belen?", "Which person function is the occupation of the spouse of Gelli de Belen?", "Which person function was the occupation of the spouse of Gelli de Belen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gelli_de_Belen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Amelia Warner?", "Tell me the occupation of the spouse of Amelia Warner?", "What is the occupation of the spouse of Amelia Warner?", "What was the occupation of the spouse of Amelia Warner?", "Which person function is the occupation of the spouse of Amelia Warner?", "Which person function was the occupation of the spouse of Amelia Warner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amelia_Warner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Bianca Jagger?", "Tell me the occupation of the spouse of Bianca Jagger?", "What is the occupation of the spouse of Bianca Jagger?", "What was the occupation of the spouse of Bianca Jagger?", "Which person function is the occupation of the spouse of Bianca Jagger?", "Which person function was the occupation of the spouse of Bianca Jagger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bianca_Jagger> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Daniel Massey (actor)?", "Tell me the occupation of the spouse of Daniel Massey (actor)?", "What is the occupation of the spouse of Daniel Massey (actor)?", "What was the occupation of the spouse of Daniel Massey (actor)?", "Which person function is the occupation of the spouse of Daniel Massey (actor)?", "Which person function was the occupation of the spouse of Daniel Massey (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daniel_Massey_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Jack Ryan (politician)?", "Tell me the occupation of the spouse of Jack Ryan (politician)?", "What is the occupation of the spouse of Jack Ryan (politician)?", "What was the occupation of the spouse of Jack Ryan (politician)?", "Which person function is the occupation of the spouse of Jack Ryan (politician)?", "Which person function was the occupation of the spouse of Jack Ryan (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Kay Adams-Corleone?", "Tell me the occupation of the spouse of Kay Adams-Corleone?", "What is the occupation of the spouse of Kay Adams-Corleone?", "What was the occupation of the spouse of Kay Adams-Corleone?", "Which person function is the occupation of the spouse of Kay Adams-Corleone?", "Which person function was the occupation of the spouse of Kay Adams-Corleone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kay_Adams-Corleone> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Leonard Woolf?", "Tell me the occupation of the spouse of Leonard Woolf?", "What is the occupation of the spouse of Leonard Woolf?", "What was the occupation of the spouse of Leonard Woolf?", "Which person function is the occupation of the spouse of Leonard Woolf?", "Which person function was the occupation of the spouse of Leonard Woolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leonard_Woolf> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Michael Wilding (actor)?", "Tell me the occupation of the spouse of Michael Wilding (actor)?", "What is the occupation of the spouse of Michael Wilding (actor)?", "What was the occupation of the spouse of Michael Wilding (actor)?", "Which person function is the occupation of the spouse of Michael Wilding (actor)?", "Which person function was the occupation of the spouse of Michael Wilding (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Wilding_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Robert Williams (actor)?", "Tell me the occupation of the spouse of Robert Williams (actor)?", "What is the occupation of the spouse of Robert Williams (actor)?", "What was the occupation of the spouse of Robert Williams (actor)?", "Which person function is the occupation of the spouse of Robert Williams (actor)?", "Which person function was the occupation of the spouse of Robert Williams (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Williams_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Carl Koch (director)?", "Tell me the occupation of the spouse of Carl Koch (director)?", "What is the occupation of the spouse of Carl Koch (director)?", "What was the occupation of the spouse of Carl Koch (director)?", "Which person function is the occupation of the spouse of Carl Koch (director)?", "Which person function was the occupation of the spouse of Carl Koch (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Koch_(director)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Hank Azaria?", "Tell me the occupation of the spouse of Hank Azaria?", "What is the occupation of the spouse of Hank Azaria?", "What was the occupation of the spouse of Hank Azaria?", "Which person function is the occupation of the spouse of Hank Azaria?", "Which person function was the occupation of the spouse of Hank Azaria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hank_Azaria> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Shabnam?", "Tell me the occupation of the spouse of Shabnam?", "What is the occupation of the spouse of Shabnam?", "What was the occupation of the spouse of Shabnam?", "Which person function is the occupation of the spouse of Shabnam?", "Which person function was the occupation of the spouse of Shabnam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shabnam> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Dilys Hamlett?", "Tell me the occupation of the spouse of Dilys Hamlett?", "What is the occupation of the spouse of Dilys Hamlett?", "What was the occupation of the spouse of Dilys Hamlett?", "Which person function is the occupation of the spouse of Dilys Hamlett?", "Which person function was the occupation of the spouse of Dilys Hamlett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dilys_Hamlett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Elizabeth Corday?", "Tell me the occupation of the spouse of Elizabeth Corday?", "What is the occupation of the spouse of Elizabeth Corday?", "What was the occupation of the spouse of Elizabeth Corday?", "Which person function is the occupation of the spouse of Elizabeth Corday?", "Which person function was the occupation of the spouse of Elizabeth Corday?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Corday> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Marion Mahony Griffin?", "Tell me the occupation of the spouse of Marion Mahony Griffin?", "What is the occupation of the spouse of Marion Mahony Griffin?", "What was the occupation of the spouse of Marion Mahony Griffin?", "Which person function is the occupation of the spouse of Marion Mahony Griffin?", "Which person function was the occupation of the spouse of Marion Mahony Griffin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marion_Mahony_Griffin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Mary Hay (actress)?", "Tell me the occupation of the spouse of Mary Hay (actress)?", "What is the occupation of the spouse of Mary Hay (actress)?", "What was the occupation of the spouse of Mary Hay (actress)?", "Which person function is the occupation of the spouse of Mary Hay (actress)?", "Which person function was the occupation of the spouse of Mary Hay (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mary_Hay_(actress)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Russell Lloyd (film editor)?", "Tell me the occupation of the spouse of Russell Lloyd (film editor)?", "What is the occupation of the spouse of Russell Lloyd (film editor)?", "What was the occupation of the spouse of Russell Lloyd (film editor)?", "Which person function is the occupation of the spouse of Russell Lloyd (film editor)?", "Which person function was the occupation of the spouse of Russell Lloyd (film editor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Russell_Lloyd_(film_editor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Tom Moore (actor)?", "Tell me the occupation of the spouse of Tom Moore (actor)?", "What is the occupation of the spouse of Tom Moore (actor)?", "What was the occupation of the spouse of Tom Moore (actor)?", "Which person function is the occupation of the spouse of Tom Moore (actor)?", "Which person function was the occupation of the spouse of Tom Moore (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tom_Moore_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Carlos the Jackal?", "Tell me the occupation of the spouse of Carlos the Jackal?", "What is the occupation of the spouse of Carlos the Jackal?", "What was the occupation of the spouse of Carlos the Jackal?", "Which person function is the occupation of the spouse of Carlos the Jackal?", "Which person function was the occupation of the spouse of Carlos the Jackal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carlos_the_Jackal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Rob Pike?", "Tell me the occupation of the spouse of Rob Pike?", "What is the occupation of the spouse of Rob Pike?", "What was the occupation of the spouse of Rob Pike?", "Which person function is the occupation of the spouse of Rob Pike?", "Which person function was the occupation of the spouse of Rob Pike?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rob_Pike> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Helen Dallimore?", "Tell me the occupation of the spouse of Helen Dallimore?", "What is the occupation of the spouse of Helen Dallimore?", "What was the occupation of the spouse of Helen Dallimore?", "Which person function is the occupation of the spouse of Helen Dallimore?", "Which person function was the occupation of the spouse of Helen Dallimore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helen_Dallimore> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Proinsias Mac Aonghusa?", "Tell me the occupation of the spouse of Proinsias Mac Aonghusa?", "What is the occupation of the spouse of Proinsias Mac Aonghusa?", "What was the occupation of the spouse of Proinsias Mac Aonghusa?", "Which person function is the occupation of the spouse of Proinsias Mac Aonghusa?", "Which person function was the occupation of the spouse of Proinsias Mac Aonghusa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Proinsias_Mac_Aonghusa> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Raza Jaffrey?", "Tell me the occupation of the spouse of Raza Jaffrey?", "What is the occupation of the spouse of Raza Jaffrey?", "What was the occupation of the spouse of Raza Jaffrey?", "Which person function is the occupation of the spouse of Raza Jaffrey?", "Which person function was the occupation of the spouse of Raza Jaffrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Raza_Jaffrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Robert Gist?", "Tell me the occupation of the spouse of Robert Gist?", "What is the occupation of the spouse of Robert Gist?", "What was the occupation of the spouse of Robert Gist?", "Which person function is the occupation of the spouse of Robert Gist?", "Which person function was the occupation of the spouse of Robert Gist?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Gist> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Rutanya Alda?", "Tell me the occupation of the spouse of Rutanya Alda?", "What is the occupation of the spouse of Rutanya Alda?", "What was the occupation of the spouse of Rutanya Alda?", "Which person function is the occupation of the spouse of Rutanya Alda?", "Which person function was the occupation of the spouse of Rutanya Alda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rutanya_Alda> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Taryn Simon?", "Tell me the occupation of the spouse of Taryn Simon?", "What is the occupation of the spouse of Taryn Simon?", "What was the occupation of the spouse of Taryn Simon?", "Which person function is the occupation of the spouse of Taryn Simon?", "Which person function was the occupation of the spouse of Taryn Simon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Taryn_Simon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Chrissie White?", "Tell me the occupation of the spouse of Chrissie White?", "What is the occupation of the spouse of Chrissie White?", "What was the occupation of the spouse of Chrissie White?", "Which person function is the occupation of the spouse of Chrissie White?", "Which person function was the occupation of the spouse of Chrissie White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chrissie_White> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Aaliyah?", "Tell me the occupation of the spouse of Aaliyah?", "What is the occupation of the spouse of Aaliyah?", "What was the occupation of the spouse of Aaliyah?", "Which person function is the occupation of the spouse of Aaliyah?", "Which person function was the occupation of the spouse of Aaliyah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaliyah> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Bill Gates?", "Tell me the occupation of the spouse of Bill Gates?", "What is the occupation of the spouse of Bill Gates?", "What was the occupation of the spouse of Bill Gates?", "Which person function is the occupation of the spouse of Bill Gates?", "Which person function was the occupation of the spouse of Bill Gates?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Calista Flockhart?", "Tell me the occupation of the spouse of Calista Flockhart?", "What is the occupation of the spouse of Calista Flockhart?", "What was the occupation of the spouse of Calista Flockhart?", "Which person function is the occupation of the spouse of Calista Flockhart?", "Which person function was the occupation of the spouse of Calista Flockhart?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Calista_Flockhart> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Chiang Kai-shek?", "Tell me the occupation of the spouse of Chiang Kai-shek?", "What is the occupation of the spouse of Chiang Kai-shek?", "What was the occupation of the spouse of Chiang Kai-shek?", "Which person function is the occupation of the spouse of Chiang Kai-shek?", "Which person function was the occupation of the spouse of Chiang Kai-shek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chiang_Kai-shek> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of David Beckham?", "Tell me the occupation of the spouse of David Beckham?", "What is the occupation of the spouse of David Beckham?", "What was the occupation of the spouse of David Beckham?", "Which person function is the occupation of the spouse of David Beckham?", "Which person function was the occupation of the spouse of David Beckham?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Beckham> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Frank Sinatra?", "Tell me the occupation of the spouse of Frank Sinatra?", "What is the occupation of the spouse of Frank Sinatra?", "What was the occupation of the spouse of Frank Sinatra?", "Which person function is the occupation of the spouse of Frank Sinatra?", "Which person function was the occupation of the spouse of Frank Sinatra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Sinatra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Gene Roddenberry?", "Tell me the occupation of the spouse of Gene Roddenberry?", "What is the occupation of the spouse of Gene Roddenberry?", "What was the occupation of the spouse of Gene Roddenberry?", "Which person function is the occupation of the spouse of Gene Roddenberry?", "Which person function was the occupation of the spouse of Gene Roddenberry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gene_Roddenberry> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Jet Li?", "Tell me the occupation of the spouse of Jet Li?", "What is the occupation of the spouse of Jet Li?", "What was the occupation of the spouse of Jet Li?", "Which person function is the occupation of the spouse of Jet Li?", "Which person function was the occupation of the spouse of Jet Li?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jet_Li> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Nicole Kidman?", "Tell me the occupation of the spouse of Nicole Kidman?", "What is the occupation of the spouse of Nicole Kidman?", "What was the occupation of the spouse of Nicole Kidman?", "Which person function is the occupation of the spouse of Nicole Kidman?", "Which person function was the occupation of the spouse of Nicole Kidman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nicole_Kidman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Patrick Macnee?", "Tell me the occupation of the spouse of Patrick Macnee?", "What is the occupation of the spouse of Patrick Macnee?", "What was the occupation of the spouse of Patrick Macnee?", "Which person function is the occupation of the spouse of Patrick Macnee?", "Which person function was the occupation of the spouse of Patrick Macnee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Patrick_Macnee> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Roman Polanski?", "Tell me the occupation of the spouse of Roman Polanski?", "What is the occupation of the spouse of Roman Polanski?", "What was the occupation of the spouse of Roman Polanski?", "Which person function is the occupation of the spouse of Roman Polanski?", "Which person function was the occupation of the spouse of Roman Polanski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roman_Polanski> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Stephen King?", "Tell me the occupation of the spouse of Stephen King?", "What is the occupation of the spouse of Stephen King?", "What was the occupation of the spouse of Stephen King?", "Which person function is the occupation of the spouse of Stephen King?", "Which person function was the occupation of the spouse of Stephen King?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Stephen_King> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?", "Tell me the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?", "What is the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?", "What was the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?", "Which person function is the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?", "Which person function was the occupation of the spouse of Anne Hathaway (Shakespeare's wife)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anne_Hathaway_(Shakespeare's_wife)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Evelyn Keyes?", "Tell me the occupation of the spouse of Evelyn Keyes?", "What is the occupation of the spouse of Evelyn Keyes?", "What was the occupation of the spouse of Evelyn Keyes?", "Which person function is the occupation of the spouse of Evelyn Keyes?", "Which person function was the occupation of the spouse of Evelyn Keyes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Evelyn_Keyes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Gauri Shinde?", "Tell me the occupation of the spouse of Gauri Shinde?", "What is the occupation of the spouse of Gauri Shinde?", "What was the occupation of the spouse of Gauri Shinde?", "Which person function is the occupation of the spouse of Gauri Shinde?", "Which person function was the occupation of the spouse of Gauri Shinde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gauri_Shinde> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Ichirō Hatoyama?", "Tell me the occupation of the spouse of Ichirō Hatoyama?", "What is the occupation of the spouse of Ichirō Hatoyama?", "What was the occupation of the spouse of Ichirō Hatoyama?", "Which person function is the occupation of the spouse of Ichirō Hatoyama?", "Which person function was the occupation of the spouse of Ichirō Hatoyama?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ichirō_Hatoyama> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "111",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of Jesse Birdsall?", "Tell me the occupation of the spouse of Jesse Birdsall?", "What is the occupation of the spouse of Jesse Birdsall?", "What was the occupation of the spouse of Jesse Birdsall?", "Which person function is the occupation of the spouse of Jesse Birdsall?", "Which person function was the occupation of the spouse of Jesse Birdsall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jesse_Birdsall> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1936-11-30?", "Tell me the occupation of persons born by 1936-11-30?", "What is the occupation of persons born by 1936-11-30?", "What was the occupation of persons born by 1936-11-30?", "Which person function is the occupation of persons born by 1936-11-30?", "Which person function was the occupation of persons born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1940-04-25?", "Tell me the occupation of persons born by 1940-04-25?", "What is the occupation of persons born by 1940-04-25?", "What was the occupation of persons born by 1940-04-25?", "Which person function is the occupation of persons born by 1940-04-25?", "Which person function was the occupation of persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1946-02-21?", "Tell me the occupation of persons born by 1946-02-21?", "What is the occupation of persons born by 1946-02-21?", "What was the occupation of persons born by 1946-02-21?", "Which person function is the occupation of persons born by 1946-02-21?", "Which person function was the occupation of persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1863-12-08?", "Tell me the occupation of persons born by 1863-12-08?", "What is the occupation of persons born by 1863-12-08?", "What was the occupation of persons born by 1863-12-08?", "Which person function is the occupation of persons born by 1863-12-08?", "Which person function was the occupation of persons born by 1863-12-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1863-12-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1936-05-09?", "Tell me the occupation of persons born by 1936-05-09?", "What is the occupation of persons born by 1936-05-09?", "What was the occupation of persons born by 1936-05-09?", "Which person function is the occupation of persons born by 1936-05-09?", "Which person function was the occupation of persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1785-03-07?", "Tell me the occupation of persons born by 1785-03-07?", "What is the occupation of persons born by 1785-03-07?", "What was the occupation of persons born by 1785-03-07?", "Which person function is the occupation of persons born by 1785-03-07?", "Which person function was the occupation of persons born by 1785-03-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1785-03-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1819-08-25?", "Tell me the occupation of persons born by 1819-08-25?", "What is the occupation of persons born by 1819-08-25?", "What was the occupation of persons born by 1819-08-25?", "Which person function is the occupation of persons born by 1819-08-25?", "Which person function was the occupation of persons born by 1819-08-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1819-08-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1974-03-24?", "Tell me the occupation of persons born by 1974-03-24?", "What is the occupation of persons born by 1974-03-24?", "What was the occupation of persons born by 1974-03-24?", "Which person function is the occupation of persons born by 1974-03-24?", "Which person function was the occupation of persons born by 1974-03-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1974-03-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1958-04-21?", "Tell me the occupation of persons born by 1958-04-21?", "What is the occupation of persons born by 1958-04-21?", "What was the occupation of persons born by 1958-04-21?", "Which person function is the occupation of persons born by 1958-04-21?", "Which person function was the occupation of persons born by 1958-04-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1958-04-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1948-03-22?", "Tell me the occupation of persons born by 1948-03-22?", "What is the occupation of persons born by 1948-03-22?", "What was the occupation of persons born by 1948-03-22?", "Which person function is the occupation of persons born by 1948-03-22?", "Which person function was the occupation of persons born by 1948-03-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1948-03-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1928-10-31?", "Tell me the occupation of persons born by 1928-10-31?", "What is the occupation of persons born by 1928-10-31?", "What was the occupation of persons born by 1928-10-31?", "Which person function is the occupation of persons born by 1928-10-31?", "Which person function was the occupation of persons born by 1928-10-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1928-10-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1926-03-06?", "Tell me the occupation of persons born by 1926-03-06?", "What is the occupation of persons born by 1926-03-06?", "What was the occupation of persons born by 1926-03-06?", "Which person function is the occupation of persons born by 1926-03-06?", "Which person function was the occupation of persons born by 1926-03-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1926-03-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1940-11-22?", "Tell me the occupation of persons born by 1940-11-22?", "What is the occupation of persons born by 1940-11-22?", "What was the occupation of persons born by 1940-11-22?", "Which person function is the occupation of persons born by 1940-11-22?", "Which person function was the occupation of persons born by 1940-11-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1895-12-16?", "Tell me the occupation of persons born by 1895-12-16?", "What is the occupation of persons born by 1895-12-16?", "What was the occupation of persons born by 1895-12-16?", "Which person function is the occupation of persons born by 1895-12-16?", "Which person function was the occupation of persons born by 1895-12-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1895-12-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1944-01-26?", "Tell me the occupation of persons born by 1944-01-26?", "What is the occupation of persons born by 1944-01-26?", "What was the occupation of persons born by 1944-01-26?", "Which person function is the occupation of persons born by 1944-01-26?", "Which person function was the occupation of persons born by 1944-01-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1944-01-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1919-10-18?", "Tell me the occupation of persons born by 1919-10-18?", "What is the occupation of persons born by 1919-10-18?", "What was the occupation of persons born by 1919-10-18?", "Which person function is the occupation of persons born by 1919-10-18?", "Which person function was the occupation of persons born by 1919-10-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1919-10-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1907-09-23?", "Tell me the occupation of persons born by 1907-09-23?", "What is the occupation of persons born by 1907-09-23?", "What was the occupation of persons born by 1907-09-23?", "Which person function is the occupation of persons born by 1907-09-23?", "Which person function was the occupation of persons born by 1907-09-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1907-09-23\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1890-04-06?", "Tell me the occupation of persons born by 1890-04-06?", "What is the occupation of persons born by 1890-04-06?", "What was the occupation of persons born by 1890-04-06?", "Which person function is the occupation of persons born by 1890-04-06?", "Which person function was the occupation of persons born by 1890-04-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1890-04-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1915-04-21?", "Tell me the occupation of persons born by 1915-04-21?", "What is the occupation of persons born by 1915-04-21?", "What was the occupation of persons born by 1915-04-21?", "Which person function is the occupation of persons born by 1915-04-21?", "Which person function was the occupation of persons born by 1915-04-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1915-04-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1960-08-10?", "Tell me the occupation of persons born by 1960-08-10?", "What is the occupation of persons born by 1960-08-10?", "What was the occupation of persons born by 1960-08-10?", "Which person function is the occupation of persons born by 1960-08-10?", "Which person function was the occupation of persons born by 1960-08-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1960-08-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1867-05-27?", "Tell me the occupation of persons born by 1867-05-27?", "What is the occupation of persons born by 1867-05-27?", "What was the occupation of persons born by 1867-05-27?", "Which person function is the occupation of persons born by 1867-05-27?", "Which person function was the occupation of persons born by 1867-05-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1867-05-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1968-04-19?", "Tell me the occupation of persons born by 1968-04-19?", "What is the occupation of persons born by 1968-04-19?", "What was the occupation of persons born by 1968-04-19?", "Which person function is the occupation of persons born by 1968-04-19?", "Which person function was the occupation of persons born by 1968-04-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1968-04-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1921-03-11?", "Tell me the occupation of persons born by 1921-03-11?", "What is the occupation of persons born by 1921-03-11?", "What was the occupation of persons born by 1921-03-11?", "Which person function is the occupation of persons born by 1921-03-11?", "Which person function was the occupation of persons born by 1921-03-11?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1921-03-11\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1931-03-16?", "Tell me the occupation of persons born by 1931-03-16?", "What is the occupation of persons born by 1931-03-16?", "What was the occupation of persons born by 1931-03-16?", "Which person function is the occupation of persons born by 1931-03-16?", "Which person function was the occupation of persons born by 1931-03-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-03-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1922-12-24?", "Tell me the occupation of persons born by 1922-12-24?", "What is the occupation of persons born by 1922-12-24?", "What was the occupation of persons born by 1922-12-24?", "Which person function is the occupation of persons born by 1922-12-24?", "Which person function was the occupation of persons born by 1922-12-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1922-12-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1583-06-16?", "Tell me the occupation of persons born by 1583-06-16?", "What is the occupation of persons born by 1583-06-16?", "What was the occupation of persons born by 1583-06-16?", "Which person function is the occupation of persons born by 1583-06-16?", "Which person function was the occupation of persons born by 1583-06-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1583-06-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1907-07-16?", "Tell me the occupation of persons born by 1907-07-16?", "What is the occupation of persons born by 1907-07-16?", "What was the occupation of persons born by 1907-07-16?", "Which person function is the occupation of persons born by 1907-07-16?", "Which person function was the occupation of persons born by 1907-07-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1907-07-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1928-06-19?", "Tell me the occupation of persons born by 1928-06-19?", "What is the occupation of persons born by 1928-06-19?", "What was the occupation of persons born by 1928-06-19?", "Which person function is the occupation of persons born by 1928-06-19?", "Which person function was the occupation of persons born by 1928-06-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1928-06-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1849-10-06?", "Tell me the occupation of persons born by 1849-10-06?", "What is the occupation of persons born by 1849-10-06?", "What was the occupation of persons born by 1849-10-06?", "Which person function is the occupation of persons born by 1849-10-06?", "Which person function was the occupation of persons born by 1849-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1849-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1909-05-30?", "Tell me the occupation of persons born by 1909-05-30?", "What is the occupation of persons born by 1909-05-30?", "What was the occupation of persons born by 1909-05-30?", "Which person function is the occupation of persons born by 1909-05-30?", "Which person function was the occupation of persons born by 1909-05-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1909-05-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1940-03-16?", "Tell me the occupation of persons born by 1940-03-16?", "What is the occupation of persons born by 1940-03-16?", "What was the occupation of persons born by 1940-03-16?", "Which person function is the occupation of persons born by 1940-03-16?", "Which person function was the occupation of persons born by 1940-03-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-03-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1843-06-09?", "Tell me the occupation of persons born by 1843-06-09?", "What is the occupation of persons born by 1843-06-09?", "What was the occupation of persons born by 1843-06-09?", "Which person function is the occupation of persons born by 1843-06-09?", "Which person function was the occupation of persons born by 1843-06-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1843-06-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1894-04-15?", "Tell me the occupation of persons born by 1894-04-15?", "What is the occupation of persons born by 1894-04-15?", "What was the occupation of persons born by 1894-04-15?", "Which person function is the occupation of persons born by 1894-04-15?", "Which person function was the occupation of persons born by 1894-04-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1894-04-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1919-02-24?", "Tell me the occupation of persons born by 1919-02-24?", "What is the occupation of persons born by 1919-02-24?", "What was the occupation of persons born by 1919-02-24?", "Which person function is the occupation of persons born by 1919-02-24?", "Which person function was the occupation of persons born by 1919-02-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1919-02-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1915-04-07?", "Tell me the occupation of persons born by 1915-04-07?", "What is the occupation of persons born by 1915-04-07?", "What was the occupation of persons born by 1915-04-07?", "Which person function is the occupation of persons born by 1915-04-07?", "Which person function was the occupation of persons born by 1915-04-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1915-04-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1906-06-22?", "Tell me the occupation of persons born by 1906-06-22?", "What is the occupation of persons born by 1906-06-22?", "What was the occupation of persons born by 1906-06-22?", "Which person function is the occupation of persons born by 1906-06-22?", "Which person function was the occupation of persons born by 1906-06-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1906-06-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1903-03-10?", "Tell me the occupation of persons born by 1903-03-10?", "What is the occupation of persons born by 1903-03-10?", "What was the occupation of persons born by 1903-03-10?", "Which person function is the occupation of persons born by 1903-03-10?", "Which person function was the occupation of persons born by 1903-03-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1903-03-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1922-07-26?", "Tell me the occupation of persons born by 1922-07-26?", "What is the occupation of persons born by 1922-07-26?", "What was the occupation of persons born by 1922-07-26?", "Which person function is the occupation of persons born by 1922-07-26?", "Which person function was the occupation of persons born by 1922-07-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1922-07-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1943-04-10?", "Tell me the occupation of persons born by 1943-04-10?", "What is the occupation of persons born by 1943-04-10?", "What was the occupation of persons born by 1943-04-10?", "Which person function is the occupation of persons born by 1943-04-10?", "Which person function was the occupation of persons born by 1943-04-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-04-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1856-04-05?", "Tell me the occupation of persons born by 1856-04-05?", "What is the occupation of persons born by 1856-04-05?", "What was the occupation of persons born by 1856-04-05?", "Which person function is the occupation of persons born by 1856-04-05?", "Which person function was the occupation of persons born by 1856-04-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1856-04-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1963-12-18?", "Tell me the occupation of persons born by 1963-12-18?", "What is the occupation of persons born by 1963-12-18?", "What was the occupation of persons born by 1963-12-18?", "Which person function is the occupation of persons born by 1963-12-18?", "Which person function was the occupation of persons born by 1963-12-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1963-12-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1940-11-27?", "Tell me the occupation of persons born by 1940-11-27?", "What is the occupation of persons born by 1940-11-27?", "What was the occupation of persons born by 1940-11-27?", "Which person function is the occupation of persons born by 1940-11-27?", "Which person function was the occupation of persons born by 1940-11-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1895-10-04?", "Tell me the occupation of persons born by 1895-10-04?", "What is the occupation of persons born by 1895-10-04?", "What was the occupation of persons born by 1895-10-04?", "Which person function is the occupation of persons born by 1895-10-04?", "Which person function was the occupation of persons born by 1895-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1895-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1972-08-30?", "Tell me the occupation of persons born by 1972-08-30?", "What is the occupation of persons born by 1972-08-30?", "What was the occupation of persons born by 1972-08-30?", "Which person function is the occupation of persons born by 1972-08-30?", "Which person function was the occupation of persons born by 1972-08-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1972-08-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1909-02-09?", "Tell me the occupation of persons born by 1909-02-09?", "What is the occupation of persons born by 1909-02-09?", "What was the occupation of persons born by 1909-02-09?", "Which person function is the occupation of persons born by 1909-02-09?", "Which person function was the occupation of persons born by 1909-02-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1909-02-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1908-10-06?", "Tell me the occupation of persons born by 1908-10-06?", "What is the occupation of persons born by 1908-10-06?", "What was the occupation of persons born by 1908-10-06?", "Which person function is the occupation of persons born by 1908-10-06?", "Which person function was the occupation of persons born by 1908-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1908-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1943-10-22?", "Tell me the occupation of persons born by 1943-10-22?", "What is the occupation of persons born by 1943-10-22?", "What was the occupation of persons born by 1943-10-22?", "Which person function is the occupation of persons born by 1943-10-22?", "Which person function was the occupation of persons born by 1943-10-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-10-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1902-09-20?", "Tell me the occupation of persons born by 1902-09-20?", "What is the occupation of persons born by 1902-09-20?", "What was the occupation of persons born by 1902-09-20?", "Which person function is the occupation of persons born by 1902-09-20?", "Which person function was the occupation of persons born by 1902-09-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1902-09-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1977-04-14?", "Tell me the occupation of persons born by 1977-04-14?", "What is the occupation of persons born by 1977-04-14?", "What was the occupation of persons born by 1977-04-14?", "Which person function is the occupation of persons born by 1977-04-14?", "Which person function was the occupation of persons born by 1977-04-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1977-04-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1923-10-04?", "Tell me the occupation of persons born by 1923-10-04?", "What is the occupation of persons born by 1923-10-04?", "What was the occupation of persons born by 1923-10-04?", "Which person function is the occupation of persons born by 1923-10-04?", "Which person function was the occupation of persons born by 1923-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1969-03-04?", "Tell me the occupation of persons born by 1969-03-04?", "What is the occupation of persons born by 1969-03-04?", "What was the occupation of persons born by 1969-03-04?", "Which person function is the occupation of persons born by 1969-03-04?", "Which person function was the occupation of persons born by 1969-03-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1969-03-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of persons born by 1943-07-12?", "Tell me the occupation of persons born by 1943-07-12?", "What is the occupation of persons born by 1943-07-12?", "What was the occupation of persons born by 1943-07-12?", "Which person function is the occupation of persons born by 1943-07-12?", "Which person function was the occupation of persons born by 1943-07-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-07-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Brad Pitt?", "Tell me the birth place of the spouse of Brad Pitt?", "What is the birth place of the spouse of Brad Pitt?", "What was the birth place of the spouse of Brad Pitt?", "Which place is the birth place of the spouse of Brad Pitt?", "Which place was the birth place of the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Carole Lombard?", "Tell me the birth place of the spouse of Carole Lombard?", "What is the birth place of the spouse of Carole Lombard?", "What was the birth place of the spouse of Carole Lombard?", "Which place is the birth place of the spouse of Carole Lombard?", "Which place was the birth place of the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Caroline of Brunswick?", "Tell me the birth place of the spouse of Caroline of Brunswick?", "What is the birth place of the spouse of Caroline of Brunswick?", "What was the birth place of the spouse of Caroline of Brunswick?", "Which place is the birth place of the spouse of Caroline of Brunswick?", "Which place was the birth place of the spouse of Caroline of Brunswick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Catherine I of Russia?", "Tell me the birth place of the spouse of Catherine I of Russia?", "What is the birth place of the spouse of Catherine I of Russia?", "What was the birth place of the spouse of Catherine I of Russia?", "Which place is the birth place of the spouse of Catherine I of Russia?", "Which place was the birth place of the spouse of Catherine I of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catherine_I_of_Russia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Christopher Lambert?", "Tell me the birth place of the spouse of Christopher Lambert?", "What is the birth place of the spouse of Christopher Lambert?", "What was the birth place of the spouse of Christopher Lambert?", "Which place is the birth place of the spouse of Christopher Lambert?", "Which place was the birth place of the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Clark Gable?", "Tell me the birth place of the spouse of Clark Gable?", "What is the birth place of the spouse of Clark Gable?", "What was the birth place of the spouse of Clark Gable?", "Which place is the birth place of the spouse of Clark Gable?", "Which place was the birth place of the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Cnut the Great?", "Tell me the birth place of the spouse of Cnut the Great?", "What is the birth place of the spouse of Cnut the Great?", "What was the birth place of the spouse of Cnut the Great?", "Which place is the birth place of the spouse of Cnut the Great?", "Which place was the birth place of the spouse of Cnut the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cnut_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Edmond Hamilton?", "Tell me the birth place of the spouse of Edmond Hamilton?", "What is the birth place of the spouse of Edmond Hamilton?", "What was the birth place of the spouse of Edmond Hamilton?", "Which place is the birth place of the spouse of Edmond Hamilton?", "Which place was the birth place of the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Elizabeth Taylor?", "Tell me the birth place of the spouse of Elizabeth Taylor?", "What is the birth place of the spouse of Elizabeth Taylor?", "What was the birth place of the spouse of Elizabeth Taylor?", "Which place is the birth place of the spouse of Elizabeth Taylor?", "Which place was the birth place of the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Emma of Normandy?", "Tell me the birth place of the spouse of Emma of Normandy?", "What is the birth place of the spouse of Emma of Normandy?", "What was the birth place of the spouse of Emma of Normandy?", "Which place is the birth place of the spouse of Emma of Normandy?", "Which place was the birth place of the spouse of Emma of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_of_Normandy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of George IV of the United Kingdom?", "Tell me the birth place of the spouse of George IV of the United Kingdom?", "What is the birth place of the spouse of George IV of the United Kingdom?", "What was the birth place of the spouse of George IV of the United Kingdom?", "Which place is the birth place of the spouse of George IV of the United Kingdom?", "Which place was the birth place of the spouse of George IV of the United Kingdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_IV_of_the_United_Kingdom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Gwyneth Paltrow?", "Tell me the birth place of the spouse of Gwyneth Paltrow?", "What is the birth place of the spouse of Gwyneth Paltrow?", "What was the birth place of the spouse of Gwyneth Paltrow?", "Which place is the birth place of the spouse of Gwyneth Paltrow?", "Which place was the birth place of the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Ingrid Bergman?", "Tell me the birth place of the spouse of Ingrid Bergman?", "What is the birth place of the spouse of Ingrid Bergman?", "What was the birth place of the spouse of Ingrid Bergman?", "Which place is the birth place of the spouse of Ingrid Bergman?", "Which place was the birth place of the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Jennifer Aniston?", "Tell me the birth place of the spouse of Jennifer Aniston?", "What is the birth place of the spouse of Jennifer Aniston?", "What was the birth place of the spouse of Jennifer Aniston?", "Which place is the birth place of the spouse of Jennifer Aniston?", "Which place was the birth place of the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Leigh Brackett?", "Tell me the birth place of the spouse of Leigh Brackett?", "What is the birth place of the spouse of Leigh Brackett?", "What was the birth place of the spouse of Leigh Brackett?", "Which place is the birth place of the spouse of Leigh Brackett?", "Which place was the birth place of the spouse of Leigh Brackett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leigh_Brackett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Louis XVI of France?", "Tell me the birth place of the spouse of Louis XVI of France?", "What is the birth place of the spouse of Louis XVI of France?", "What was the birth place of the spouse of Louis XVI of France?", "Which place is the birth place of the spouse of Louis XVI of France?", "Which place was the birth place of the spouse of Louis XVI of France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_XVI_of_France> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Marie Antoinette?", "Tell me the birth place of the spouse of Marie Antoinette?", "What is the birth place of the spouse of Marie Antoinette?", "What was the birth place of the spouse of Marie Antoinette?", "Which place is the birth place of the spouse of Marie Antoinette?", "Which place was the birth place of the spouse of Marie Antoinette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Antoinette> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Peter the Great?", "Tell me the birth place of the spouse of Peter the Great?", "What is the birth place of the spouse of Peter the Great?", "What was the birth place of the spouse of Peter the Great?", "Which place is the birth place of the spouse of Peter the Great?", "Which place was the birth place of the spouse of Peter the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Richard Burton?", "Tell me the birth place of the spouse of Richard Burton?", "What is the birth place of the spouse of Richard Burton?", "What was the birth place of the spouse of Richard Burton?", "Which place is the birth place of the spouse of Richard Burton?", "Which place was the birth place of the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Roberto Rossellini?", "Tell me the birth place of the spouse of Roberto Rossellini?", "What is the birth place of the spouse of Roberto Rossellini?", "What was the birth place of the spouse of Roberto Rossellini?", "Which place is the birth place of the spouse of Roberto Rossellini?", "Which place was the birth place of the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Salman Rushdie?", "Tell me the birth place of the spouse of Salman Rushdie?", "What is the birth place of the spouse of Salman Rushdie?", "What was the birth place of the spouse of Salman Rushdie?", "Which place is the birth place of the spouse of Salman Rushdie?", "Which place was the birth place of the spouse of Salman Rushdie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salman_Rushdie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sylvia Plath?", "Tell me the birth place of the spouse of Sylvia Plath?", "What is the birth place of the spouse of Sylvia Plath?", "What was the birth place of the spouse of Sylvia Plath?", "Which place is the birth place of the spouse of Sylvia Plath?", "Which place was the birth place of the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Ted Hughes?", "Tell me the birth place of the spouse of Ted Hughes?", "What is the birth place of the spouse of Ted Hughes?", "What was the birth place of the spouse of Ted Hughes?", "Which place is the birth place of the spouse of Ted Hughes?", "Which place was the birth place of the spouse of Ted Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ted_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Theophanu?", "Tell me the birth place of the spouse of Theophanu?", "What is the birth place of the spouse of Theophanu?", "What was the birth place of the spouse of Theophanu?", "Which place is the birth place of the spouse of Theophanu?", "Which place was the birth place of the spouse of Theophanu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Theophanu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Val Kilmer?", "Tell me the birth place of the spouse of Val Kilmer?", "What is the birth place of the spouse of Val Kilmer?", "What was the birth place of the spouse of Val Kilmer?", "Which place is the birth place of the spouse of Val Kilmer?", "Which place was the birth place of the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Vivien Leigh?", "Tell me the birth place of the spouse of Vivien Leigh?", "What is the birth place of the spouse of Vivien Leigh?", "What was the birth place of the spouse of Vivien Leigh?", "Which place is the birth place of the spouse of Vivien Leigh?", "Which place was the birth place of the spouse of Vivien Leigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Leigh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Camille Flammarion?", "Tell me the birth place of the spouse of Camille Flammarion?", "What is the birth place of the spouse of Camille Flammarion?", "What was the birth place of the spouse of Camille Flammarion?", "Which place is the birth place of the spouse of Camille Flammarion?", "Which place was the birth place of the spouse of Camille Flammarion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camille_Flammarion> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Chris Martin?", "Tell me the birth place of the spouse of Chris Martin?", "What is the birth place of the spouse of Chris Martin?", "What was the birth place of the spouse of Chris Martin?", "Which place is the birth place of the spouse of Chris Martin?", "Which place was the birth place of the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Dennis Quaid?", "Tell me the birth place of the spouse of Dennis Quaid?", "What is the birth place of the spouse of Dennis Quaid?", "What was the birth place of the spouse of Dennis Quaid?", "Which place is the birth place of the spouse of Dennis Quaid?", "Which place was the birth place of the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Joanne Whalley?", "Tell me the birth place of the spouse of Joanne Whalley?", "What is the birth place of the spouse of Joanne Whalley?", "What was the birth place of the spouse of Joanne Whalley?", "Which place is the birth place of the spouse of Joanne Whalley?", "Which place was the birth place of the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of John Grey of Groby?", "Tell me the birth place of the spouse of John Grey of Groby?", "What is the birth place of the spouse of John Grey of Groby?", "What was the birth place of the spouse of John Grey of Groby?", "Which place is the birth place of the spouse of John Grey of Groby?", "Which place was the birth place of the spouse of John Grey of Groby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Grey_of_Groby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Minnie Maddern Fiske?", "Tell me the birth place of the spouse of Minnie Maddern Fiske?", "What is the birth place of the spouse of Minnie Maddern Fiske?", "What was the birth place of the spouse of Minnie Maddern Fiske?", "Which place is the birth place of the spouse of Minnie Maddern Fiske?", "Which place was the birth place of the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Padma Lakshmi?", "Tell me the birth place of the spouse of Padma Lakshmi?", "What is the birth place of the spouse of Padma Lakshmi?", "What was the birth place of the spouse of Padma Lakshmi?", "Which place is the birth place of the spouse of Padma Lakshmi?", "Which place was the birth place of the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Adam Hochschild?", "Tell me the birth place of the spouse of Adam Hochschild?", "What is the birth place of the spouse of Adam Hochschild?", "What was the birth place of the spouse of Adam Hochschild?", "Which place is the birth place of the spouse of Adam Hochschild?", "Which place was the birth place of the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Arlie Russell Hochschild?", "Tell me the birth place of the spouse of Arlie Russell Hochschild?", "What is the birth place of the spouse of Arlie Russell Hochschild?", "What was the birth place of the spouse of Arlie Russell Hochschild?", "Which place is the birth place of the spouse of Arlie Russell Hochschild?", "Which place was the birth place of the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Beata Tyszkiewicz?", "Tell me the birth place of the spouse of Beata Tyszkiewicz?", "What is the birth place of the spouse of Beata Tyszkiewicz?", "What was the birth place of the spouse of Beata Tyszkiewicz?", "Which place is the birth place of the spouse of Beata Tyszkiewicz?", "Which place was the birth place of the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Benjamin Bratt?", "Tell me the birth place of the spouse of Benjamin Bratt?", "What is the birth place of the spouse of Benjamin Bratt?", "What was the birth place of the spouse of Benjamin Bratt?", "Which place is the birth place of the spouse of Benjamin Bratt?", "Which place was the birth place of the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Bunker Roy?", "Tell me the birth place of the spouse of Bunker Roy?", "What is the birth place of the spouse of Bunker Roy?", "What was the birth place of the spouse of Bunker Roy?", "Which place is the birth place of the spouse of Bunker Roy?", "Which place was the birth place of the spouse of Bunker Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bunker_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Candy Spelling?", "Tell me the birth place of the spouse of Candy Spelling?", "What is the birth place of the spouse of Candy Spelling?", "What was the birth place of the spouse of Candy Spelling?", "Which place is the birth place of the spouse of Candy Spelling?", "Which place was the birth place of the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Cyrille Bara?", "Tell me the birth place of the spouse of Cyrille Bara?", "What is the birth place of the spouse of Cyrille Bara?", "What was the birth place of the spouse of Cyrille Bara?", "Which place is the birth place of the spouse of Cyrille Bara?", "Which place was the birth place of the spouse of Cyrille Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cyrille_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Dorothy Dunnett?", "Tell me the birth place of the spouse of Dorothy Dunnett?", "What is the birth place of the spouse of Dorothy Dunnett?", "What was the birth place of the spouse of Dorothy Dunnett?", "Which place is the birth place of the spouse of Dorothy Dunnett?", "Which place was the birth place of the spouse of Dorothy Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dorothy_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Ehud Olmert?", "Tell me the birth place of the spouse of Ehud Olmert?", "What is the birth place of the spouse of Ehud Olmert?", "What was the birth place of the spouse of Ehud Olmert?", "Which place is the birth place of the spouse of Ehud Olmert?", "Which place was the birth place of the spouse of Ehud Olmert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ehud_Olmert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Gemini Ganesan?", "Tell me the birth place of the spouse of Gemini Ganesan?", "What is the birth place of the spouse of Gemini Ganesan?", "What was the birth place of the spouse of Gemini Ganesan?", "Which place is the birth place of the spouse of Gemini Ganesan?", "Which place was the birth place of the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Harriet Smithson?", "Tell me the birth place of the spouse of Harriet Smithson?", "What is the birth place of the spouse of Harriet Smithson?", "What was the birth place of the spouse of Harriet Smithson?", "Which place is the birth place of the spouse of Harriet Smithson?", "Which place was the birth place of the spouse of Harriet Smithson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Harriet_Smithson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Paul Hasluck?", "Tell me the birth place of the spouse of Paul Hasluck?", "What is the birth place of the spouse of Paul Hasluck?", "What was the birth place of the spouse of Paul Hasluck?", "Which place is the birth place of the spouse of Paul Hasluck?", "Which place was the birth place of the spouse of Paul Hasluck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Hasluck> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Rolly Bester?", "Tell me the birth place of the spouse of Rolly Bester?", "What is the birth place of the spouse of Rolly Bester?", "What was the birth place of the spouse of Rolly Bester?", "Which place is the birth place of the spouse of Rolly Bester?", "Which place was the birth place of the spouse of Rolly Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rolly_Bester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Clara McMillen?", "Tell me the birth place of the spouse of Clara McMillen?", "What is the birth place of the spouse of Clara McMillen?", "What was the birth place of the spouse of Clara McMillen?", "Which place is the birth place of the spouse of Clara McMillen?", "Which place was the birth place of the spouse of Clara McMillen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clara_McMillen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Diana Gould (dancer)?", "Tell me the birth place of the spouse of Diana Gould (dancer)?", "What is the birth place of the spouse of Diana Gould (dancer)?", "What was the birth place of the spouse of Diana Gould (dancer)?", "Which place is the birth place of the spouse of Diana Gould (dancer)?", "Which place was the birth place of the spouse of Diana Gould (dancer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Gould_(dancer)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sidney Miller (actor)?", "Tell me the birth place of the spouse of Sidney Miller (actor)?", "What is the birth place of the spouse of Sidney Miller (actor)?", "What was the birth place of the spouse of Sidney Miller (actor)?", "Which place is the birth place of the spouse of Sidney Miller (actor)?", "Which place was the birth place of the spouse of Sidney Miller (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Miller_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sir Edward Burgh?", "Tell me the birth place of the spouse of Sir Edward Burgh?", "What is the birth place of the spouse of Sir Edward Burgh?", "What was the birth place of the spouse of Sir Edward Burgh?", "Which place is the birth place of the spouse of Sir Edward Burgh?", "Which place was the birth place of the spouse of Sir Edward Burgh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sir_Edward_Burgh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Lydia Lopokova?", "Tell me the birth place of the spouse of Lydia Lopokova?", "What is the birth place of the spouse of Lydia Lopokova?", "What was the birth place of the spouse of Lydia Lopokova?", "Which place is the birth place of the spouse of Lydia Lopokova?", "Which place was the birth place of the spouse of Lydia Lopokova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Lopokova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Maxwell Reed?", "Tell me the birth place of the spouse of Maxwell Reed?", "What is the birth place of the spouse of Maxwell Reed?", "What was the birth place of the spouse of Maxwell Reed?", "Which place is the birth place of the spouse of Maxwell Reed?", "Which place was the birth place of the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sigrid the Haughty?", "Tell me the birth place of the spouse of Sigrid the Haughty?", "What is the birth place of the spouse of Sigrid the Haughty?", "What was the birth place of the spouse of Sigrid the Haughty?", "Which place is the birth place of the spouse of Sigrid the Haughty?", "Which place was the birth place of the spouse of Sigrid the Haughty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sigrid_the_Haughty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Elena Ceaușescu?", "Tell me the birth place of the spouse of Elena Ceaușescu?", "What is the birth place of the spouse of Elena Ceaușescu?", "What was the birth place of the spouse of Elena Ceaușescu?", "Which place is the birth place of the spouse of Elena Ceaușescu?", "Which place was the birth place of the spouse of Elena Ceaușescu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Ceaușescu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Lydia Clarke?", "Tell me the birth place of the spouse of Lydia Clarke?", "What is the birth place of the spouse of Lydia Clarke?", "What was the birth place of the spouse of Lydia Clarke?", "Which place is the birth place of the spouse of Lydia Clarke?", "Which place was the birth place of the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Ruqaiya Sultan Begum?", "Tell me the birth place of the spouse of Ruqaiya Sultan Begum?", "What is the birth place of the spouse of Ruqaiya Sultan Begum?", "What was the birth place of the spouse of Ruqaiya Sultan Begum?", "Which place is the birth place of the spouse of Ruqaiya Sultan Begum?", "Which place was the birth place of the spouse of Ruqaiya Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruqaiya_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Eliza Jumel?", "Tell me the birth place of the spouse of Eliza Jumel?", "What is the birth place of the spouse of Eliza Jumel?", "What was the birth place of the spouse of Eliza Jumel?", "Which place is the birth place of the spouse of Eliza Jumel?", "Which place was the birth place of the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Lena Herzog?", "Tell me the birth place of the spouse of Lena Herzog?", "What is the birth place of the spouse of Lena Herzog?", "What was the birth place of the spouse of Lena Herzog?", "Which place is the birth place of the spouse of Lena Herzog?", "Which place was the birth place of the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Katie Lee (chef)?", "Tell me the birth place of the spouse of Katie Lee (chef)?", "What is the birth place of the spouse of Katie Lee (chef)?", "What was the birth place of the spouse of Katie Lee (chef)?", "Which place is the birth place of the spouse of Katie Lee (chef)?", "Which place was the birth place of the spouse of Katie Lee (chef)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Lee_(chef)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Elsa Pataky?", "Tell me the birth place of the spouse of Elsa Pataky?", "What is the birth place of the spouse of Elsa Pataky?", "What was the birth place of the spouse of Elsa Pataky?", "Which place is the birth place of the spouse of Elsa Pataky?", "Which place was the birth place of the spouse of Elsa Pataky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elsa_Pataky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Maïwenn?", "Tell me the birth place of the spouse of Maïwenn?", "What is the birth place of the spouse of Maïwenn?", "What was the birth place of the spouse of Maïwenn?", "Which place is the birth place of the spouse of Maïwenn?", "Which place was the birth place of the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Edward of Westminster, Prince of Wales?", "Tell me the birth place of the spouse of Edward of Westminster, Prince of Wales?", "What is the birth place of the spouse of Edward of Westminster, Prince of Wales?", "What was the birth place of the spouse of Edward of Westminster, Prince of Wales?", "Which place is the birth place of the spouse of Edward of Westminster, Prince of Wales?", "Which place was the birth place of the spouse of Edward of Westminster, Prince of Wales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Joanne Woodward?", "Tell me the birth place of the spouse of Joanne Woodward?", "What is the birth place of the spouse of Joanne Woodward?", "What was the birth place of the spouse of Joanne Woodward?", "Which place is the birth place of the spouse of Joanne Woodward?", "Which place was the birth place of the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Lady Caroline Lamb?", "Tell me the birth place of the spouse of Lady Caroline Lamb?", "What is the birth place of the spouse of Lady Caroline Lamb?", "What was the birth place of the spouse of Lady Caroline Lamb?", "Which place is the birth place of the spouse of Lady Caroline Lamb?", "Which place was the birth place of the spouse of Lady Caroline Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lady_Caroline_Lamb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Margaret Sullavan?", "Tell me the birth place of the spouse of Margaret Sullavan?", "What is the birth place of the spouse of Margaret Sullavan?", "What was the birth place of the spouse of Margaret Sullavan?", "Which place is the birth place of the spouse of Margaret Sullavan?", "Which place was the birth place of the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Maria Fitzherbert?", "Tell me the birth place of the spouse of Maria Fitzherbert?", "What is the birth place of the spouse of Maria Fitzherbert?", "What was the birth place of the spouse of Maria Fitzherbert?", "Which place is the birth place of the spouse of Maria Fitzherbert?", "Which place was the birth place of the spouse of Maria Fitzherbert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maria_Fitzherbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Mickey Deans?", "Tell me the birth place of the spouse of Mickey Deans?", "What is the birth place of the spouse of Mickey Deans?", "What was the birth place of the spouse of Mickey Deans?", "Which place is the birth place of the spouse of Mickey Deans?", "Which place was the birth place of the spouse of Mickey Deans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mickey_Deans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Alice Hathaway Lee Roosevelt?", "Tell me the birth place of the spouse of Alice Hathaway Lee Roosevelt?", "What is the birth place of the spouse of Alice Hathaway Lee Roosevelt?", "What was the birth place of the spouse of Alice Hathaway Lee Roosevelt?", "Which place is the birth place of the spouse of Alice Hathaway Lee Roosevelt?", "Which place was the birth place of the spouse of Alice Hathaway Lee Roosevelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Frank Bunker Gilbreth Sr.?", "Tell me the birth place of the spouse of Frank Bunker Gilbreth Sr.?", "What is the birth place of the spouse of Frank Bunker Gilbreth Sr.?", "What was the birth place of the spouse of Frank Bunker Gilbreth Sr.?", "Which place is the birth place of the spouse of Frank Bunker Gilbreth Sr.?", "Which place was the birth place of the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Alfred Steele?", "Tell me the birth place of the spouse of Alfred Steele?", "What is the birth place of the spouse of Alfred Steele?", "What was the birth place of the spouse of Alfred Steele?", "Which place is the birth place of the spouse of Alfred Steele?", "Which place was the birth place of the spouse of Alfred Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Steele> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Barbara Hutton?", "Tell me the birth place of the spouse of Barbara Hutton?", "What is the birth place of the spouse of Barbara Hutton?", "What was the birth place of the spouse of Barbara Hutton?", "Which place is the birth place of the spouse of Barbara Hutton?", "Which place was the birth place of the spouse of Barbara Hutton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Hutton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sidney Luft?", "Tell me the birth place of the spouse of Sidney Luft?", "What is the birth place of the spouse of Sidney Luft?", "What was the birth place of the spouse of Sidney Luft?", "Which place is the birth place of the spouse of Sidney Luft?", "Which place was the birth place of the spouse of Sidney Luft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Luft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sylvia Ashley?", "Tell me the birth place of the spouse of Sylvia Ashley?", "What is the birth place of the spouse of Sylvia Ashley?", "What was the birth place of the spouse of Sylvia Ashley?", "Which place is the birth place of the spouse of Sylvia Ashley?", "Which place was the birth place of the spouse of Sylvia Ashley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Ashley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Salima Sultan Begum?", "Tell me the birth place of the spouse of Salima Sultan Begum?", "What is the birth place of the spouse of Salima Sultan Begum?", "What was the birth place of the spouse of Salima Sultan Begum?", "Which place is the birth place of the spouse of Salima Sultan Begum?", "Which place was the birth place of the spouse of Salima Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salima_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of David Evans Shaw?", "Tell me the birth place of the spouse of David Evans Shaw?", "What is the birth place of the spouse of David Evans Shaw?", "What was the birth place of the spouse of David Evans Shaw?", "Which place is the birth place of the spouse of David Evans Shaw?", "Which place was the birth place of the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of John Jay O'Connor?", "Tell me the birth place of the spouse of John Jay O'Connor?", "What is the birth place of the spouse of John Jay O'Connor?", "What was the birth place of the spouse of John Jay O'Connor?", "Which place is the birth place of the spouse of John Jay O'Connor?", "Which place was the birth place of the spouse of John Jay O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jay_O'Connor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Marta Fernandez Miranda de Batista?", "Tell me the birth place of the spouse of Marta Fernandez Miranda de Batista?", "What is the birth place of the spouse of Marta Fernandez Miranda de Batista?", "What was the birth place of the spouse of Marta Fernandez Miranda de Batista?", "Which place is the birth place of the spouse of Marta Fernandez Miranda de Batista?", "Which place was the birth place of the spouse of Marta Fernandez Miranda de Batista?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Josephine Dillon?", "Tell me the birth place of the spouse of Josephine Dillon?", "What is the birth place of the spouse of Josephine Dillon?", "What was the birth place of the spouse of Josephine Dillon?", "Which place is the birth place of the spouse of Josephine Dillon?", "Which place was the birth place of the spouse of Josephine Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josephine_Dillon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Sunita Deshpande?", "Tell me the birth place of the spouse of Sunita Deshpande?", "What is the birth place of the spouse of Sunita Deshpande?", "What was the birth place of the spouse of Sunita Deshpande?", "Which place is the birth place of the spouse of Sunita Deshpande?", "Which place was the birth place of the spouse of Sunita Deshpande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunita_Deshpande> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Bettina Gorton?", "Tell me the birth place of the spouse of Bettina Gorton?", "What is the birth place of the spouse of Bettina Gorton?", "What was the birth place of the spouse of Bettina Gorton?", "Which place is the birth place of the spouse of Bettina Gorton?", "Which place was the birth place of the spouse of Bettina Gorton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bettina_Gorton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Tove of the Obotrites?", "Tell me the birth place of the spouse of Tove of the Obotrites?", "What is the birth place of the spouse of Tove of the Obotrites?", "What was the birth place of the spouse of Tove of the Obotrites?", "Which place is the birth place of the spouse of Tove of the Obotrites?", "Which place was the birth place of the spouse of Tove of the Obotrites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tove_of_the_Obotrites> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Albia Dominica?", "Tell me the birth place of the spouse of Albia Dominica?", "What is the birth place of the spouse of Albia Dominica?", "What was the birth place of the spouse of Albia Dominica?", "Which place is the birth place of the spouse of Albia Dominica?", "Which place was the birth place of the spouse of Albia Dominica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albia_Dominica> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Tell me the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "What is the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "What was the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Which place is the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Which place was the birth place of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Antony_Armstrong-Jones,_1st_Earl_of_Snowdon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Bernadette Chirac?", "Tell me the birth place of the spouse of Bernadette Chirac?", "What is the birth place of the spouse of Bernadette Chirac?", "What was the birth place of the spouse of Bernadette Chirac?", "Which place is the birth place of the spouse of Bernadette Chirac?", "Which place was the birth place of the spouse of Bernadette Chirac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bernadette_Chirac> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Bianca Jagger?", "Tell me the birth place of the spouse of Bianca Jagger?", "What is the birth place of the spouse of Bianca Jagger?", "What was the birth place of the spouse of Bianca Jagger?", "Which place is the birth place of the spouse of Bianca Jagger?", "Which place was the birth place of the spouse of Bianca Jagger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bianca_Jagger> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Daniel Massey (actor)?", "Tell me the birth place of the spouse of Daniel Massey (actor)?", "What is the birth place of the spouse of Daniel Massey (actor)?", "What was the birth place of the spouse of Daniel Massey (actor)?", "Which place is the birth place of the spouse of Daniel Massey (actor)?", "Which place was the birth place of the spouse of Daniel Massey (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daniel_Massey_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Francis I, Holy Roman Emperor?", "Tell me the birth place of the spouse of Francis I, Holy Roman Emperor?", "What is the birth place of the spouse of Francis I, Holy Roman Emperor?", "What was the birth place of the spouse of Francis I, Holy Roman Emperor?", "Which place is the birth place of the spouse of Francis I, Holy Roman Emperor?", "Which place was the birth place of the spouse of Francis I, Holy Roman Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Francis_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Kitty Carlisle?", "Tell me the birth place of the spouse of Kitty Carlisle?", "What is the birth place of the spouse of Kitty Carlisle?", "What was the birth place of the spouse of Kitty Carlisle?", "Which place is the birth place of the spouse of Kitty Carlisle?", "Which place was the birth place of the spouse of Kitty Carlisle?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kitty_Carlisle> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Leonard Woolf?", "Tell me the birth place of the spouse of Leonard Woolf?", "What is the birth place of the spouse of Leonard Woolf?", "What was the birth place of the spouse of Leonard Woolf?", "Which place is the birth place of the spouse of Leonard Woolf?", "Which place was the birth place of the spouse of Leonard Woolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leonard_Woolf> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Loki Schmidt?", "Tell me the birth place of the spouse of Loki Schmidt?", "What is the birth place of the spouse of Loki Schmidt?", "What was the birth place of the spouse of Loki Schmidt?", "Which place is the birth place of the spouse of Loki Schmidt?", "Which place was the birth place of the spouse of Loki Schmidt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Loki_Schmidt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Lotte Lenya?", "Tell me the birth place of the spouse of Lotte Lenya?", "What is the birth place of the spouse of Lotte Lenya?", "What was the birth place of the spouse of Lotte Lenya?", "Which place is the birth place of the spouse of Lotte Lenya?", "Which place was the birth place of the spouse of Lotte Lenya?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lotte_Lenya> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Michael Wilding (actor)?", "Tell me the birth place of the spouse of Michael Wilding (actor)?", "What is the birth place of the spouse of Michael Wilding (actor)?", "What was the birth place of the spouse of Michael Wilding (actor)?", "Which place is the birth place of the spouse of Michael Wilding (actor)?", "Which place was the birth place of the spouse of Michael Wilding (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Michael_Wilding_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Mumtaz Mahal?", "Tell me the birth place of the spouse of Mumtaz Mahal?", "What is the birth place of the spouse of Mumtaz Mahal?", "What was the birth place of the spouse of Mumtaz Mahal?", "Which place is the birth place of the spouse of Mumtaz Mahal?", "Which place was the birth place of the spouse of Mumtaz Mahal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mumtaz_Mahal> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Princess Charlotte of Wales?", "Tell me the birth place of the spouse of Princess Charlotte of Wales?", "What is the birth place of the spouse of Princess Charlotte of Wales?", "What was the birth place of the spouse of Princess Charlotte of Wales?", "Which place is the birth place of the spouse of Princess Charlotte of Wales?", "Which place was the birth place of the spouse of Princess Charlotte of Wales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Princess_Charlotte_of_Wales> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Richard Sennett?", "Tell me the birth place of the spouse of Richard Sennett?", "What is the birth place of the spouse of Richard Sennett?", "What was the birth place of the spouse of Richard Sennett?", "Which place is the birth place of the spouse of Richard Sennett?", "Which place was the birth place of the spouse of Richard Sennett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Sennett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Robert Williams (actor)?", "Tell me the birth place of the spouse of Robert Williams (actor)?", "What is the birth place of the spouse of Robert Williams (actor)?", "What was the birth place of the spouse of Robert Williams (actor)?", "Which place is the birth place of the spouse of Robert Williams (actor)?", "Which place was the birth place of the spouse of Robert Williams (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Williams_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Hank Azaria?", "Tell me the birth place of the spouse of Hank Azaria?", "What is the birth place of the spouse of Hank Azaria?", "What was the birth place of the spouse of Hank Azaria?", "Which place is the birth place of the spouse of Hank Azaria?", "Which place was the birth place of the spouse of Hank Azaria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hank_Azaria> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Owen Tudor?", "Tell me the birth place of the spouse of Owen Tudor?", "What is the birth place of the spouse of Owen Tudor?", "What was the birth place of the spouse of Owen Tudor?", "Which place is the birth place of the spouse of Owen Tudor?", "Which place was the birth place of the spouse of Owen Tudor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Owen_Tudor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of John Neville, 3rd Baron Latimer?", "Tell me the birth place of the spouse of John Neville, 3rd Baron Latimer?", "What is the birth place of the spouse of John Neville, 3rd Baron Latimer?", "What was the birth place of the spouse of John Neville, 3rd Baron Latimer?", "Which place is the birth place of the spouse of John Neville, 3rd Baron Latimer?", "Which place was the birth place of the spouse of John Neville, 3rd Baron Latimer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Neville,_3rd_Baron_Latimer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of Kirsty Sword Gusmão?", "Tell me the birth place of the spouse of Kirsty Sword Gusmão?", "What is the birth place of the spouse of Kirsty Sword Gusmão?", "What was the birth place of the spouse of Kirsty Sword Gusmão?", "Which place is the birth place of the spouse of Kirsty Sword Gusmão?", "Which place was the birth place of the spouse of Kirsty Sword Gusmão?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kirsty_Sword_Gusmão> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1976-11-12?", "Tell me the birth place of persons born by 1976-11-12?", "What is the birth place of persons born by 1976-11-12?", "What was the birth place of persons born by 1976-11-12?", "Which place is the birth place of persons born by 1976-11-12?", "Which place was the birth place of persons born by 1976-11-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1976-11-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1943-12-29?", "Tell me the birth place of persons born by 1943-12-29?", "What is the birth place of persons born by 1943-12-29?", "What was the birth place of persons born by 1943-12-29?", "Which place is the birth place of persons born by 1943-12-29?", "Which place was the birth place of persons born by 1943-12-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-12-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1896-09-01?", "Tell me the birth place of persons born by 1896-09-01?", "What is the birth place of persons born by 1896-09-01?", "What was the birth place of persons born by 1896-09-01?", "Which place is the birth place of persons born by 1896-09-01?", "Which place was the birth place of persons born by 1896-09-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1896-09-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1756-02-06?", "Tell me the birth place of persons born by 1756-02-06?", "What is the birth place of persons born by 1756-02-06?", "What was the birth place of persons born by 1756-02-06?", "Which place is the birth place of persons born by 1756-02-06?", "Which place was the birth place of persons born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1900-11-14?", "Tell me the birth place of persons born by 1900-11-14?", "What is the birth place of persons born by 1900-11-14?", "What was the birth place of persons born by 1900-11-14?", "Which place is the birth place of persons born by 1900-11-14?", "Which place was the birth place of persons born by 1900-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1936-11-30?", "Tell me the birth place of persons born by 1936-11-30?", "What is the birth place of persons born by 1936-11-30?", "What was the birth place of persons born by 1936-11-30?", "Which place is the birth place of persons born by 1936-11-30?", "Which place was the birth place of persons born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1918-10-06?", "Tell me the birth place of persons born by 1918-10-06?", "What is the birth place of persons born by 1918-10-06?", "What was the birth place of persons born by 1918-10-06?", "Which place is the birth place of persons born by 1918-10-06?", "Which place was the birth place of persons born by 1918-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1667-05-26?", "Tell me the birth place of persons born by 1667-05-26?", "What is the birth place of persons born by 1667-05-26?", "What was the birth place of persons born by 1667-05-26?", "Which place is the birth place of persons born by 1667-05-26?", "Which place was the birth place of persons born by 1667-05-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1667-05-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1779-11-14?", "Tell me the birth place of persons born by 1779-11-14?", "What is the birth place of persons born by 1779-11-14?", "What was the birth place of persons born by 1779-11-14?", "Which place is the birth place of persons born by 1779-11-14?", "Which place was the birth place of persons born by 1779-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1779-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1937-01-01?", "Tell me the birth place of persons born by 1937-01-01?", "What is the birth place of persons born by 1937-01-01?", "What was the birth place of persons born by 1937-01-01?", "Which place is the birth place of persons born by 1937-01-01?", "Which place was the birth place of persons born by 1937-01-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1937-01-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1952-07-06?", "Tell me the birth place of persons born by 1952-07-06?", "What is the birth place of persons born by 1952-07-06?", "What was the birth place of persons born by 1952-07-06?", "Which place is the birth place of persons born by 1952-07-06?", "Which place was the birth place of persons born by 1952-07-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1900-02-05?", "Tell me the birth place of persons born by 1900-02-05?", "What is the birth place of persons born by 1900-02-05?", "What was the birth place of persons born by 1900-02-05?", "Which place is the birth place of persons born by 1900-02-05?", "Which place was the birth place of persons born by 1900-02-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-02-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1870-12-10?", "Tell me the birth place of persons born by 1870-12-10?", "What is the birth place of persons born by 1870-12-10?", "What was the birth place of persons born by 1870-12-10?", "Which place is the birth place of persons born by 1870-12-10?", "Which place was the birth place of persons born by 1870-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1870-12-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1752-09-18?", "Tell me the birth place of persons born by 1752-09-18?", "What is the birth place of persons born by 1752-09-18?", "What was the birth place of persons born by 1752-09-18?", "Which place is the birth place of persons born by 1752-09-18?", "Which place was the birth place of persons born by 1752-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1752-09-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1929-05-16?", "Tell me the birth place of persons born by 1929-05-16?", "What is the birth place of persons born by 1929-05-16?", "What was the birth place of persons born by 1929-05-16?", "Which place is the birth place of persons born by 1929-05-16?", "Which place was the birth place of persons born by 1929-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1929-05-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1955-02-13?", "Tell me the birth place of persons born by 1955-02-13?", "What is the birth place of persons born by 1955-02-13?", "What was the birth place of persons born by 1955-02-13?", "Which place is the birth place of persons born by 1955-02-13?", "Which place was the birth place of persons born by 1955-02-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1955-02-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1940-04-25?", "Tell me the birth place of persons born by 1940-04-25?", "What is the birth place of persons born by 1940-04-25?", "What was the birth place of persons born by 1940-04-25?", "Which place is the birth place of persons born by 1940-04-25?", "Which place was the birth place of persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1946-02-21?", "Tell me the birth place of persons born by 1946-02-21?", "What is the birth place of persons born by 1946-02-21?", "What was the birth place of persons born by 1946-02-21?", "Which place is the birth place of persons born by 1946-02-21?", "Which place was the birth place of persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1970-08-13?", "Tell me the birth place of persons born by 1970-08-13?", "What is the birth place of persons born by 1970-08-13?", "What was the birth place of persons born by 1970-08-13?", "Which place is the birth place of persons born by 1970-08-13?", "Which place was the birth place of persons born by 1970-08-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1970-08-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1863-12-08?", "Tell me the birth place of persons born by 1863-12-08?", "What is the birth place of persons born by 1863-12-08?", "What was the birth place of persons born by 1863-12-08?", "Which place is the birth place of persons born by 1863-12-08?", "Which place was the birth place of persons born by 1863-12-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1863-12-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1936-05-09?", "Tell me the birth place of persons born by 1936-05-09?", "What is the birth place of persons born by 1936-05-09?", "What was the birth place of persons born by 1936-05-09?", "Which place is the birth place of persons born by 1936-05-09?", "Which place was the birth place of persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1414-11-09?", "Tell me the birth place of persons born by 1414-11-09?", "What is the birth place of persons born by 1414-11-09?", "What was the birth place of persons born by 1414-11-09?", "Which place is the birth place of persons born by 1414-11-09?", "Which place was the birth place of persons born by 1414-11-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1414-11-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1931-05-03?", "Tell me the birth place of persons born by 1931-05-03?", "What is the birth place of persons born by 1931-05-03?", "What was the birth place of persons born by 1931-05-03?", "Which place is the birth place of persons born by 1931-05-03?", "Which place was the birth place of persons born by 1931-05-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-05-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1950-01-09?", "Tell me the birth place of persons born by 1950-01-09?", "What is the birth place of persons born by 1950-01-09?", "What was the birth place of persons born by 1950-01-09?", "Which place is the birth place of persons born by 1950-01-09?", "Which place was the birth place of persons born by 1950-01-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-01-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1785-03-07?", "Tell me the birth place of persons born by 1785-03-07?", "What is the birth place of persons born by 1785-03-07?", "What was the birth place of persons born by 1785-03-07?", "Which place is the birth place of persons born by 1785-03-07?", "Which place was the birth place of persons born by 1785-03-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1785-03-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1954-12-15?", "Tell me the birth place of persons born by 1954-12-15?", "What is the birth place of persons born by 1954-12-15?", "What was the birth place of persons born by 1954-12-15?", "Which place is the birth place of persons born by 1954-12-15?", "Which place was the birth place of persons born by 1954-12-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1954-12-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1941-12-31?", "Tell me the birth place of persons born by 1941-12-31?", "What is the birth place of persons born by 1941-12-31?", "What was the birth place of persons born by 1941-12-31?", "Which place is the birth place of persons born by 1941-12-31?", "Which place was the birth place of persons born by 1941-12-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1941-12-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1806-07-19?", "Tell me the birth place of persons born by 1806-07-19?", "What is the birth place of persons born by 1806-07-19?", "What was the birth place of persons born by 1806-07-19?", "Which place is the birth place of persons born by 1806-07-19?", "Which place was the birth place of persons born by 1806-07-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1806-07-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1925-06-17?", "Tell me the birth place of persons born by 1925-06-17?", "What is the birth place of persons born by 1925-06-17?", "What was the birth place of persons born by 1925-06-17?", "Which place is the birth place of persons born by 1925-06-17?", "Which place was the birth place of persons born by 1925-06-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1925-06-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1820-03-20?", "Tell me the birth place of persons born by 1820-03-20?", "What is the birth place of persons born by 1820-03-20?", "What was the birth place of persons born by 1820-03-20?", "Which place is the birth place of persons born by 1820-03-20?", "Which place was the birth place of persons born by 1820-03-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1820-03-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1913-12-18?", "Tell me the birth place of persons born by 1913-12-18?", "What is the birth place of persons born by 1913-12-18?", "What was the birth place of persons born by 1913-12-18?", "Which place is the birth place of persons born by 1913-12-18?", "Which place was the birth place of persons born by 1913-12-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1913-12-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1894-06-23?", "Tell me the birth place of persons born by 1894-06-23?", "What is the birth place of persons born by 1894-06-23?", "What was the birth place of persons born by 1894-06-23?", "Which place is the birth place of persons born by 1894-06-23?", "Which place was the birth place of persons born by 1894-06-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1894-06-23\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1842-07-26?", "Tell me the birth place of persons born by 1842-07-26?", "What is the birth place of persons born by 1842-07-26?", "What was the birth place of persons born by 1842-07-26?", "Which place is the birth place of persons born by 1842-07-26?", "Which place was the birth place of persons born by 1842-07-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1842-07-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1891-10-05?", "Tell me the birth place of persons born by 1891-10-05?", "What is the birth place of persons born by 1891-10-05?", "What was the birth place of persons born by 1891-10-05?", "Which place is the birth place of persons born by 1891-10-05?", "Which place was the birth place of persons born by 1891-10-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1891-10-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1861-02-15?", "Tell me the birth place of persons born by 1861-02-15?", "What is the birth place of persons born by 1861-02-15?", "What was the birth place of persons born by 1861-02-15?", "Which place is the birth place of persons born by 1861-02-15?", "Which place was the birth place of persons born by 1861-02-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1861-02-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1893-01-12?", "Tell me the birth place of persons born by 1893-01-12?", "What is the birth place of persons born by 1893-01-12?", "What was the birth place of persons born by 1893-01-12?", "Which place is the birth place of persons born by 1893-01-12?", "Which place was the birth place of persons born by 1893-01-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1893-01-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1923-01-12?", "Tell me the birth place of persons born by 1923-01-12?", "What is the birth place of persons born by 1923-01-12?", "What was the birth place of persons born by 1923-01-12?", "Which place is the birth place of persons born by 1923-01-12?", "Which place was the birth place of persons born by 1923-01-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-01-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1944-02-09?", "Tell me the birth place of persons born by 1944-02-09?", "What is the birth place of persons born by 1944-02-09?", "What was the birth place of persons born by 1944-02-09?", "Which place is the birth place of persons born by 1944-02-09?", "Which place was the birth place of persons born by 1944-02-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1944-02-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1819-08-25?", "Tell me the birth place of persons born by 1819-08-25?", "What is the birth place of persons born by 1819-08-25?", "What was the birth place of persons born by 1819-08-25?", "Which place is the birth place of persons born by 1819-08-25?", "Which place was the birth place of persons born by 1819-08-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1819-08-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1813-11-13?", "Tell me the birth place of persons born by 1813-11-13?", "What is the birth place of persons born by 1813-11-13?", "What was the birth place of persons born by 1813-11-13?", "Which place is the birth place of persons born by 1813-11-13?", "Which place was the birth place of persons born by 1813-11-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1813-11-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1903-06-14?", "Tell me the birth place of persons born by 1903-06-14?", "What is the birth place of persons born by 1903-06-14?", "What was the birth place of persons born by 1903-06-14?", "Which place is the birth place of persons born by 1903-06-14?", "Which place was the birth place of persons born by 1903-06-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1903-06-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1974-03-24?", "Tell me the birth place of persons born by 1974-03-24?", "What is the birth place of persons born by 1974-03-24?", "What was the birth place of persons born by 1974-03-24?", "Which place is the birth place of persons born by 1974-03-24?", "Which place was the birth place of persons born by 1974-03-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1974-03-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of persons born by 1933-11-03?", "Tell me the birth place of persons born by 1933-11-03?", "What is the birth place of persons born by 1933-11-03?", "What was the birth place of persons born by 1933-11-03?", "Which place is the birth place of persons born by 1933-11-03?", "Which place was the birth place of persons born by 1933-11-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1933-11-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Andrzej Wajda?", "Tell me the spouse of the spouse of Andrzej Wajda?", "What is the spouse of the spouse of Andrzej Wajda?", "What was the spouse of the spouse of Andrzej Wajda?", "Which person is the spouse of the spouse of Andrzej Wajda?", "Which person was the spouse of the spouse of Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrzej_Wajda> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Brad Pitt?", "Tell me the spouse of the spouse of Brad Pitt?", "What is the spouse of the spouse of Brad Pitt?", "What was the spouse of the spouse of Brad Pitt?", "Which person is the spouse of the spouse of Brad Pitt?", "Which person was the spouse of the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Carole Lombard?", "Tell me the spouse of the spouse of Carole Lombard?", "What is the spouse of the spouse of Carole Lombard?", "What was the spouse of the spouse of Carole Lombard?", "Which person is the spouse of the spouse of Carole Lombard?", "Which person was the spouse of the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Caroline of Brunswick?", "Tell me the spouse of the spouse of Caroline of Brunswick?", "What is the spouse of the spouse of Caroline of Brunswick?", "What was the spouse of the spouse of Caroline of Brunswick?", "Which person is the spouse of the spouse of Caroline of Brunswick?", "Which person was the spouse of the spouse of Caroline of Brunswick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Catherine I of Russia?", "Tell me the spouse of the spouse of Catherine I of Russia?", "What is the spouse of the spouse of Catherine I of Russia?", "What was the spouse of the spouse of Catherine I of Russia?", "Which person is the spouse of the spouse of Catherine I of Russia?", "Which person was the spouse of the spouse of Catherine I of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catherine_I_of_Russia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Clark Gable?", "Tell me the spouse of the spouse of Clark Gable?", "What is the spouse of the spouse of Clark Gable?", "What was the spouse of the spouse of Clark Gable?", "Which person is the spouse of the spouse of Clark Gable?", "Which person was the spouse of the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Cnut the Great?", "Tell me the spouse of the spouse of Cnut the Great?", "What is the spouse of the spouse of Cnut the Great?", "What was the spouse of the spouse of Cnut the Great?", "Which person is the spouse of the spouse of Cnut the Great?", "Which person was the spouse of the spouse of Cnut the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cnut_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Edmond Hamilton?", "Tell me the spouse of the spouse of Edmond Hamilton?", "What is the spouse of the spouse of Edmond Hamilton?", "What was the spouse of the spouse of Edmond Hamilton?", "Which person is the spouse of the spouse of Edmond Hamilton?", "Which person was the spouse of the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elizabeth Taylor?", "Tell me the spouse of the spouse of Elizabeth Taylor?", "What is the spouse of the spouse of Elizabeth Taylor?", "What was the spouse of the spouse of Elizabeth Taylor?", "Which person is the spouse of the spouse of Elizabeth Taylor?", "Which person was the spouse of the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elizabeth Woodville?", "Tell me the spouse of the spouse of Elizabeth Woodville?", "What is the spouse of the spouse of Elizabeth Woodville?", "What was the spouse of the spouse of Elizabeth Woodville?", "Which person is the spouse of the spouse of Elizabeth Woodville?", "Which person was the spouse of the spouse of Elizabeth Woodville?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Woodville> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Emma of Normandy?", "Tell me the spouse of the spouse of Emma of Normandy?", "What is the spouse of the spouse of Emma of Normandy?", "What was the spouse of the spouse of Emma of Normandy?", "Which person is the spouse of the spouse of Emma of Normandy?", "Which person was the spouse of the spouse of Emma of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_of_Normandy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of George IV of the United Kingdom?", "Tell me the spouse of the spouse of George IV of the United Kingdom?", "What is the spouse of the spouse of George IV of the United Kingdom?", "What was the spouse of the spouse of George IV of the United Kingdom?", "Which person is the spouse of the spouse of George IV of the United Kingdom?", "Which person was the spouse of the spouse of George IV of the United Kingdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_IV_of_the_United_Kingdom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Gwyneth Paltrow?", "Tell me the spouse of the spouse of Gwyneth Paltrow?", "What is the spouse of the spouse of Gwyneth Paltrow?", "What was the spouse of the spouse of Gwyneth Paltrow?", "Which person is the spouse of the spouse of Gwyneth Paltrow?", "Which person was the spouse of the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Ingrid Bergman?", "Tell me the spouse of the spouse of Ingrid Bergman?", "What is the spouse of the spouse of Ingrid Bergman?", "What was the spouse of the spouse of Ingrid Bergman?", "Which person is the spouse of the spouse of Ingrid Bergman?", "Which person was the spouse of the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Jennifer Aniston?", "Tell me the spouse of the spouse of Jennifer Aniston?", "What is the spouse of the spouse of Jennifer Aniston?", "What was the spouse of the spouse of Jennifer Aniston?", "Which person is the spouse of the spouse of Jennifer Aniston?", "Which person was the spouse of the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Leigh Brackett?", "Tell me the spouse of the spouse of Leigh Brackett?", "What is the spouse of the spouse of Leigh Brackett?", "What was the spouse of the spouse of Leigh Brackett?", "Which person is the spouse of the spouse of Leigh Brackett?", "Which person was the spouse of the spouse of Leigh Brackett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leigh_Brackett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Louis XVI of France?", "Tell me the spouse of the spouse of Louis XVI of France?", "What is the spouse of the spouse of Louis XVI of France?", "What was the spouse of the spouse of Louis XVI of France?", "Which person is the spouse of the spouse of Louis XVI of France?", "Which person was the spouse of the spouse of Louis XVI of France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_XVI_of_France> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Marie Antoinette?", "Tell me the spouse of the spouse of Marie Antoinette?", "What is the spouse of the spouse of Marie Antoinette?", "What was the spouse of the spouse of Marie Antoinette?", "Which person is the spouse of the spouse of Marie Antoinette?", "Which person was the spouse of the spouse of Marie Antoinette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Antoinette> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Peter the Great?", "Tell me the spouse of the spouse of Peter the Great?", "What is the spouse of the spouse of Peter the Great?", "What was the spouse of the spouse of Peter the Great?", "Which person is the spouse of the spouse of Peter the Great?", "Which person was the spouse of the spouse of Peter the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Richard Burton?", "Tell me the spouse of the spouse of Richard Burton?", "What is the spouse of the spouse of Richard Burton?", "What was the spouse of the spouse of Richard Burton?", "Which person is the spouse of the spouse of Richard Burton?", "Which person was the spouse of the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Roberto Rossellini?", "Tell me the spouse of the spouse of Roberto Rossellini?", "What is the spouse of the spouse of Roberto Rossellini?", "What was the spouse of the spouse of Roberto Rossellini?", "Which person is the spouse of the spouse of Roberto Rossellini?", "Which person was the spouse of the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Salman Rushdie?", "Tell me the spouse of the spouse of Salman Rushdie?", "What is the spouse of the spouse of Salman Rushdie?", "What was the spouse of the spouse of Salman Rushdie?", "Which person is the spouse of the spouse of Salman Rushdie?", "Which person was the spouse of the spouse of Salman Rushdie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salman_Rushdie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Sylvia Plath?", "Tell me the spouse of the spouse of Sylvia Plath?", "What is the spouse of the spouse of Sylvia Plath?", "What was the spouse of the spouse of Sylvia Plath?", "Which person is the spouse of the spouse of Sylvia Plath?", "Which person was the spouse of the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Ted Hughes?", "Tell me the spouse of the spouse of Ted Hughes?", "What is the spouse of the spouse of Ted Hughes?", "What was the spouse of the spouse of Ted Hughes?", "Which person is the spouse of the spouse of Ted Hughes?", "Which person was the spouse of the spouse of Ted Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ted_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Val Kilmer?", "Tell me the spouse of the spouse of Val Kilmer?", "What is the spouse of the spouse of Val Kilmer?", "What was the spouse of the spouse of Val Kilmer?", "Which person is the spouse of the spouse of Val Kilmer?", "Which person was the spouse of the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Chris Martin?", "Tell me the spouse of the spouse of Chris Martin?", "What is the spouse of the spouse of Chris Martin?", "What was the spouse of the spouse of Chris Martin?", "Which person is the spouse of the spouse of Chris Martin?", "Which person was the spouse of the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Céline Bara?", "Tell me the spouse of the spouse of Céline Bara?", "What is the spouse of the spouse of Céline Bara?", "What was the spouse of the spouse of Céline Bara?", "Which person is the spouse of the spouse of Céline Bara?", "Which person was the spouse of the spouse of Céline Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Céline_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Joanne Whalley?", "Tell me the spouse of the spouse of Joanne Whalley?", "What is the spouse of the spouse of Joanne Whalley?", "What was the spouse of the spouse of Joanne Whalley?", "Which person is the spouse of the spouse of Joanne Whalley?", "Which person was the spouse of the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of John Grey of Groby?", "Tell me the spouse of the spouse of John Grey of Groby?", "What is the spouse of the spouse of John Grey of Groby?", "What was the spouse of the spouse of John Grey of Groby?", "Which person is the spouse of the spouse of John Grey of Groby?", "Which person was the spouse of the spouse of John Grey of Groby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Grey_of_Groby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Minnie Maddern Fiske?", "Tell me the spouse of the spouse of Minnie Maddern Fiske?", "What is the spouse of the spouse of Minnie Maddern Fiske?", "What was the spouse of the spouse of Minnie Maddern Fiske?", "Which person is the spouse of the spouse of Minnie Maddern Fiske?", "Which person was the spouse of the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Padma Lakshmi?", "Tell me the spouse of the spouse of Padma Lakshmi?", "What is the spouse of the spouse of Padma Lakshmi?", "What was the spouse of the spouse of Padma Lakshmi?", "Which person is the spouse of the spouse of Padma Lakshmi?", "Which person was the spouse of the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Savitri (actress)?", "Tell me the spouse of the spouse of Savitri (actress)?", "What is the spouse of the spouse of Savitri (actress)?", "What was the spouse of the spouse of Savitri (actress)?", "Which person is the spouse of the spouse of Savitri (actress)?", "Which person was the spouse of the spouse of Savitri (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Savitri_(actress)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Talisa Soto?", "Tell me the spouse of the spouse of Talisa Soto?", "What is the spouse of the spouse of Talisa Soto?", "What was the spouse of the spouse of Talisa Soto?", "Which person is the spouse of the spouse of Talisa Soto?", "Which person was the spouse of the spouse of Talisa Soto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talisa_Soto> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Aaron Spelling?", "Tell me the spouse of the spouse of Aaron Spelling?", "What is the spouse of the spouse of Aaron Spelling?", "What was the spouse of the spouse of Aaron Spelling?", "Which person is the spouse of the spouse of Aaron Spelling?", "Which person was the spouse of the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Adam Hochschild?", "Tell me the spouse of the spouse of Adam Hochschild?", "What is the spouse of the spouse of Adam Hochschild?", "What was the spouse of the spouse of Adam Hochschild?", "Which person is the spouse of the spouse of Adam Hochschild?", "Which person was the spouse of the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Alastair Dunnett?", "Tell me the spouse of the spouse of Alastair Dunnett?", "What is the spouse of the spouse of Alastair Dunnett?", "What was the spouse of the spouse of Alastair Dunnett?", "Which person is the spouse of the spouse of Alastair Dunnett?", "Which person was the spouse of the spouse of Alastair Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alastair_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Arlie Russell Hochschild?", "Tell me the spouse of the spouse of Arlie Russell Hochschild?", "What is the spouse of the spouse of Arlie Russell Hochschild?", "What was the spouse of the spouse of Arlie Russell Hochschild?", "Which person is the spouse of the spouse of Arlie Russell Hochschild?", "Which person was the spouse of the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Barbara Simons?", "Tell me the spouse of the spouse of Barbara Simons?", "What is the spouse of the spouse of Barbara Simons?", "What was the spouse of the spouse of Barbara Simons?", "Which person is the spouse of the spouse of Barbara Simons?", "Which person was the spouse of the spouse of Barbara Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Beata Tyszkiewicz?", "Tell me the spouse of the spouse of Beata Tyszkiewicz?", "What is the spouse of the spouse of Beata Tyszkiewicz?", "What was the spouse of the spouse of Beata Tyszkiewicz?", "Which person is the spouse of the spouse of Beata Tyszkiewicz?", "Which person was the spouse of the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Benjamin Bratt?", "Tell me the spouse of the spouse of Benjamin Bratt?", "What is the spouse of the spouse of Benjamin Bratt?", "What was the spouse of the spouse of Benjamin Bratt?", "Which person is the spouse of the spouse of Benjamin Bratt?", "Which person was the spouse of the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Bermudo II of León?", "Tell me the spouse of the spouse of Bermudo II of León?", "What is the spouse of the spouse of Bermudo II of León?", "What was the spouse of the spouse of Bermudo II of León?", "Which person is the spouse of the spouse of Bermudo II of León?", "Which person was the spouse of the spouse of Bermudo II of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bermudo_II_of_León> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Candy Spelling?", "Tell me the spouse of the spouse of Candy Spelling?", "What is the spouse of the spouse of Candy Spelling?", "What was the spouse of the spouse of Candy Spelling?", "Which person is the spouse of the spouse of Candy Spelling?", "Which person was the spouse of the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Cyrille Bara?", "Tell me the spouse of the spouse of Cyrille Bara?", "What is the spouse of the spouse of Cyrille Bara?", "What was the spouse of the spouse of Cyrille Bara?", "Which person is the spouse of the spouse of Cyrille Bara?", "Which person was the spouse of the spouse of Cyrille Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cyrille_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Dorothy Dunnett?", "Tell me the spouse of the spouse of Dorothy Dunnett?", "What is the spouse of the spouse of Dorothy Dunnett?", "What was the spouse of the spouse of Dorothy Dunnett?", "Which person is the spouse of the spouse of Dorothy Dunnett?", "Which person was the spouse of the spouse of Dorothy Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dorothy_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Eleanor Silliman Belknap Humphrey?", "Tell me the spouse of the spouse of Eleanor Silliman Belknap Humphrey?", "What is the spouse of the spouse of Eleanor Silliman Belknap Humphrey?", "What was the spouse of the spouse of Eleanor Silliman Belknap Humphrey?", "Which person is the spouse of the spouse of Eleanor Silliman Belknap Humphrey?", "Which person was the spouse of the spouse of Eleanor Silliman Belknap Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elvira of Castile, Queen of León?", "Tell me the spouse of the spouse of Elvira of Castile, Queen of León?", "What is the spouse of the spouse of Elvira of Castile, Queen of León?", "What was the spouse of the spouse of Elvira of Castile, Queen of León?", "Which person is the spouse of the spouse of Elvira of Castile, Queen of León?", "Which person was the spouse of the spouse of Elvira of Castile, Queen of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Gemini Ganesan?", "Tell me the spouse of the spouse of Gemini Ganesan?", "What is the spouse of the spouse of Gemini Ganesan?", "What was the spouse of the spouse of Gemini Ganesan?", "Which person is the spouse of the spouse of Gemini Ganesan?", "Which person was the spouse of the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of James Harris Simons?", "Tell me the spouse of the spouse of James Harris Simons?", "What is the spouse of the spouse of James Harris Simons?", "What was the spouse of the spouse of James Harris Simons?", "Which person is the spouse of the spouse of James Harris Simons?", "Which person was the spouse of the spouse of James Harris Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Harris_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Lewis Craig Humphrey?", "Tell me the spouse of the spouse of Lewis Craig Humphrey?", "What is the spouse of the spouse of Lewis Craig Humphrey?", "What was the spouse of the spouse of Lewis Craig Humphrey?", "Which person is the spouse of the spouse of Lewis Craig Humphrey?", "Which person was the spouse of the spouse of Lewis Craig Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lewis_Craig_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Rolly Bester?", "Tell me the spouse of the spouse of Rolly Bester?", "What is the spouse of the spouse of Rolly Bester?", "What was the spouse of the spouse of Rolly Bester?", "Which person is the spouse of the spouse of Rolly Bester?", "Which person was the spouse of the spouse of Rolly Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rolly_Bester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Ruy Guerra?", "Tell me the spouse of the spouse of Ruy Guerra?", "What is the spouse of the spouse of Ruy Guerra?", "What was the spouse of the spouse of Ruy Guerra?", "Which person is the spouse of the spouse of Ruy Guerra?", "Which person was the spouse of the spouse of Ruy Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruy_Guerra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Deborah Walley?", "Tell me the spouse of the spouse of Deborah Walley?", "What is the spouse of the spouse of Deborah Walley?", "What was the spouse of the spouse of Deborah Walley?", "Which person is the spouse of the spouse of Deborah Walley?", "Which person was the spouse of the spouse of Deborah Walley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Deborah_Walley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Henry Morgenthau Jr.?", "Tell me the spouse of the spouse of Henry Morgenthau Jr.?", "What is the spouse of the spouse of Henry Morgenthau Jr.?", "What was the spouse of the spouse of Henry Morgenthau Jr.?", "Which person is the spouse of the spouse of Henry Morgenthau Jr.?", "Which person was the spouse of the spouse of Henry Morgenthau Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Morgenthau_Jr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Maxwell Reed?", "Tell me the spouse of the spouse of Maxwell Reed?", "What is the spouse of the spouse of Maxwell Reed?", "What was the spouse of the spouse of Maxwell Reed?", "Which person is the spouse of the spouse of Maxwell Reed?", "Which person was the spouse of the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Sigrid the Haughty?", "Tell me the spouse of the spouse of Sigrid the Haughty?", "What is the spouse of the spouse of Sigrid the Haughty?", "What was the spouse of the spouse of Sigrid the Haughty?", "Which person is the spouse of the spouse of Sigrid the Haughty?", "Which person was the spouse of the spouse of Sigrid the Haughty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sigrid_the_Haughty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elena Ceaușescu?", "Tell me the spouse of the spouse of Elena Ceaușescu?", "What is the spouse of the spouse of Elena Ceaușescu?", "What was the spouse of the spouse of Elena Ceaușescu?", "Which person is the spouse of the spouse of Elena Ceaușescu?", "Which person was the spouse of the spouse of Elena Ceaușescu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Ceaușescu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Lydia Clarke?", "Tell me the spouse of the spouse of Lydia Clarke?", "What is the spouse of the spouse of Lydia Clarke?", "What was the spouse of the spouse of Lydia Clarke?", "Which person is the spouse of the spouse of Lydia Clarke?", "Which person was the spouse of the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Eliza Jumel?", "Tell me the spouse of the spouse of Eliza Jumel?", "What is the spouse of the spouse of Eliza Jumel?", "What was the spouse of the spouse of Eliza Jumel?", "Which person is the spouse of the spouse of Eliza Jumel?", "Which person was the spouse of the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Raja Zarith Sofia?", "Tell me the spouse of the spouse of Raja Zarith Sofia?", "What is the spouse of the spouse of Raja Zarith Sofia?", "What was the spouse of the spouse of Raja Zarith Sofia?", "Which person is the spouse of the spouse of Raja Zarith Sofia?", "Which person was the spouse of the spouse of Raja Zarith Sofia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Raja_Zarith_Sofia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Lena Herzog?", "Tell me the spouse of the spouse of Lena Herzog?", "What is the spouse of the spouse of Lena Herzog?", "What was the spouse of the spouse of Lena Herzog?", "Which person is the spouse of the spouse of Lena Herzog?", "Which person was the spouse of the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Margaret of Soissons, Queen of Armenia?", "Tell me the spouse of the spouse of Margaret of Soissons, Queen of Armenia?", "What is the spouse of the spouse of Margaret of Soissons, Queen of Armenia?", "What was the spouse of the spouse of Margaret of Soissons, Queen of Armenia?", "Which person is the spouse of the spouse of Margaret of Soissons, Queen of Armenia?", "Which person was the spouse of the spouse of Margaret of Soissons, Queen of Armenia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_of_Soissons,_Queen_of_Armenia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Constance Towers?", "Tell me the spouse of the spouse of Constance Towers?", "What is the spouse of the spouse of Constance Towers?", "What was the spouse of the spouse of Constance Towers?", "Which person is the spouse of the spouse of Constance Towers?", "Which person was the spouse of the spouse of Constance Towers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Constance_Towers> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elsa Pataky?", "Tell me the spouse of the spouse of Elsa Pataky?", "What is the spouse of the spouse of Elsa Pataky?", "What was the spouse of the spouse of Elsa Pataky?", "Which person is the spouse of the spouse of Elsa Pataky?", "Which person was the spouse of the spouse of Elsa Pataky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elsa_Pataky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Maïwenn?", "Tell me the spouse of the spouse of Maïwenn?", "What is the spouse of the spouse of Maïwenn?", "What was the spouse of the spouse of Maïwenn?", "Which person is the spouse of the spouse of Maïwenn?", "Which person was the spouse of the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Christian I of Denmark?", "Tell me the spouse of the spouse of Christian I of Denmark?", "What is the spouse of the spouse of Christian I of Denmark?", "What was the spouse of the spouse of Christian I of Denmark?", "Which person is the spouse of the spouse of Christian I of Denmark?", "Which person was the spouse of the spouse of Christian I of Denmark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian_I_of_Denmark> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Edward of Westminster, Prince of Wales?", "Tell me the spouse of the spouse of Edward of Westminster, Prince of Wales?", "What is the spouse of the spouse of Edward of Westminster, Prince of Wales?", "What was the spouse of the spouse of Edward of Westminster, Prince of Wales?", "Which person is the spouse of the spouse of Edward of Westminster, Prince of Wales?", "Which person was the spouse of the spouse of Edward of Westminster, Prince of Wales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Elizabeth Fry?", "Tell me the spouse of the spouse of Elizabeth Fry?", "What is the spouse of the spouse of Elizabeth Fry?", "What was the spouse of the spouse of Elizabeth Fry?", "Which person is the spouse of the spouse of Elizabeth Fry?", "Which person was the spouse of the spouse of Elizabeth Fry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Fry> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Joanne Woodward?", "Tell me the spouse of the spouse of Joanne Woodward?", "What is the spouse of the spouse of Joanne Woodward?", "What was the spouse of the spouse of Joanne Woodward?", "Which person is the spouse of the spouse of Joanne Woodward?", "Which person was the spouse of the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Lady Caroline Lamb?", "Tell me the spouse of the spouse of Lady Caroline Lamb?", "What is the spouse of the spouse of Lady Caroline Lamb?", "What was the spouse of the spouse of Lady Caroline Lamb?", "Which person is the spouse of the spouse of Lady Caroline Lamb?", "Which person was the spouse of the spouse of Lady Caroline Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lady_Caroline_Lamb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Margaret Sullavan?", "Tell me the spouse of the spouse of Margaret Sullavan?", "What is the spouse of the spouse of Margaret Sullavan?", "What was the spouse of the spouse of Margaret Sullavan?", "Which person is the spouse of the spouse of Margaret Sullavan?", "Which person was the spouse of the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Maria Fitzherbert?", "Tell me the spouse of the spouse of Maria Fitzherbert?", "What is the spouse of the spouse of Maria Fitzherbert?", "What was the spouse of the spouse of Maria Fitzherbert?", "Which person is the spouse of the spouse of Maria Fitzherbert?", "Which person was the spouse of the spouse of Maria Fitzherbert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maria_Fitzherbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Mickey Deans?", "Tell me the spouse of the spouse of Mickey Deans?", "What is the spouse of the spouse of Mickey Deans?", "What was the spouse of the spouse of Mickey Deans?", "Which person is the spouse of the spouse of Mickey Deans?", "Which person was the spouse of the spouse of Mickey Deans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mickey_Deans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Gustaf Gründgens?", "Tell me the spouse of the spouse of Gustaf Gründgens?", "What is the spouse of the spouse of Gustaf Gründgens?", "What was the spouse of the spouse of Gustaf Gründgens?", "Which person is the spouse of the spouse of Gustaf Gründgens?", "Which person was the spouse of the spouse of Gustaf Gründgens?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gustaf_Gründgens> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Alice Hathaway Lee Roosevelt?", "Tell me the spouse of the spouse of Alice Hathaway Lee Roosevelt?", "What is the spouse of the spouse of Alice Hathaway Lee Roosevelt?", "What was the spouse of the spouse of Alice Hathaway Lee Roosevelt?", "Which person is the spouse of the spouse of Alice Hathaway Lee Roosevelt?", "Which person was the spouse of the spouse of Alice Hathaway Lee Roosevelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Frank Bunker Gilbreth Sr.?", "Tell me the spouse of the spouse of Frank Bunker Gilbreth Sr.?", "What is the spouse of the spouse of Frank Bunker Gilbreth Sr.?", "What was the spouse of the spouse of Frank Bunker Gilbreth Sr.?", "Which person is the spouse of the spouse of Frank Bunker Gilbreth Sr.?", "Which person was the spouse of the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Alfred Steele?", "Tell me the spouse of the spouse of Alfred Steele?", "What is the spouse of the spouse of Alfred Steele?", "What was the spouse of the spouse of Alfred Steele?", "Which person is the spouse of the spouse of Alfred Steele?", "Which person was the spouse of the spouse of Alfred Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Steele> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Ralph Forbes?", "Tell me the spouse of the spouse of Ralph Forbes?", "What is the spouse of the spouse of Ralph Forbes?", "What was the spouse of the spouse of Ralph Forbes?", "Which person is the spouse of the spouse of Ralph Forbes?", "Which person was the spouse of the spouse of Ralph Forbes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ralph_Forbes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Sidney Luft?", "Tell me the spouse of the spouse of Sidney Luft?", "What is the spouse of the spouse of Sidney Luft?", "What was the spouse of the spouse of Sidney Luft?", "Which person is the spouse of the spouse of Sidney Luft?", "Which person was the spouse of the spouse of Sidney Luft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Luft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Sylvia Ashley?", "Tell me the spouse of the spouse of Sylvia Ashley?", "What is the spouse of the spouse of Sylvia Ashley?", "What was the spouse of the spouse of Sylvia Ashley?", "Which person is the spouse of the spouse of Sylvia Ashley?", "Which person was the spouse of the spouse of Sylvia Ashley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Ashley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of David Evans Shaw?", "Tell me the spouse of the spouse of David Evans Shaw?", "What is the spouse of the spouse of David Evans Shaw?", "What was the spouse of the spouse of David Evans Shaw?", "Which person is the spouse of the spouse of David Evans Shaw?", "Which person was the spouse of the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of John Jay O'Connor?", "Tell me the spouse of the spouse of John Jay O'Connor?", "What is the spouse of the spouse of John Jay O'Connor?", "What was the spouse of the spouse of John Jay O'Connor?", "Which person is the spouse of the spouse of John Jay O'Connor?", "Which person was the spouse of the spouse of John Jay O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jay_O'Connor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Marta Fernandez Miranda de Batista?", "Tell me the spouse of the spouse of Marta Fernandez Miranda de Batista?", "What is the spouse of the spouse of Marta Fernandez Miranda de Batista?", "What was the spouse of the spouse of Marta Fernandez Miranda de Batista?", "Which person is the spouse of the spouse of Marta Fernandez Miranda de Batista?", "Which person was the spouse of the spouse of Marta Fernandez Miranda de Batista?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Josephine Dillon?", "Tell me the spouse of the spouse of Josephine Dillon?", "What is the spouse of the spouse of Josephine Dillon?", "What was the spouse of the spouse of Josephine Dillon?", "Which person is the spouse of the spouse of Josephine Dillon?", "Which person was the spouse of the spouse of Josephine Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josephine_Dillon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Lucy Barker?", "Tell me the spouse of the spouse of Lucy Barker?", "What is the spouse of the spouse of Lucy Barker?", "What was the spouse of the spouse of Lucy Barker?", "Which person is the spouse of the spouse of Lucy Barker?", "Which person was the spouse of the spouse of Lucy Barker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lucy_Barker> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Sunita Deshpande?", "Tell me the spouse of the spouse of Sunita Deshpande?", "What is the spouse of the spouse of Sunita Deshpande?", "What was the spouse of the spouse of Sunita Deshpande?", "Which person is the spouse of the spouse of Sunita Deshpande?", "Which person was the spouse of the spouse of Sunita Deshpande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunita_Deshpande> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Bettina Gorton?", "Tell me the spouse of the spouse of Bettina Gorton?", "What is the spouse of the spouse of Bettina Gorton?", "What was the spouse of the spouse of Bettina Gorton?", "Which person is the spouse of the spouse of Bettina Gorton?", "Which person was the spouse of the spouse of Bettina Gorton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bettina_Gorton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Luma de Oliveira?", "Tell me the spouse of the spouse of Luma de Oliveira?", "What is the spouse of the spouse of Luma de Oliveira?", "What was the spouse of the spouse of Luma de Oliveira?", "Which person is the spouse of the spouse of Luma de Oliveira?", "Which person was the spouse of the spouse of Luma de Oliveira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luma_de_Oliveira> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Tove of the Obotrites?", "Tell me the spouse of the spouse of Tove of the Obotrites?", "What is the spouse of the spouse of Tove of the Obotrites?", "What was the spouse of the spouse of Tove of the Obotrites?", "Which person is the spouse of the spouse of Tove of the Obotrites?", "Which person was the spouse of the spouse of Tove of the Obotrites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tove_of_the_Obotrites> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Alice of Korikos?", "Tell me the spouse of the spouse of Alice of Korikos?", "What is the spouse of the spouse of Alice of Korikos?", "What was the spouse of the spouse of Alice of Korikos?", "Which person is the spouse of the spouse of Alice of Korikos?", "Which person was the spouse of the spouse of Alice of Korikos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_of_Korikos> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Albia Dominica?", "Tell me the spouse of the spouse of Albia Dominica?", "What is the spouse of the spouse of Albia Dominica?", "What was the spouse of the spouse of Albia Dominica?", "Which person is the spouse of the spouse of Albia Dominica?", "Which person was the spouse of the spouse of Albia Dominica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albia_Dominica> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Amelia Warner?", "Tell me the spouse of the spouse of Amelia Warner?", "What is the spouse of the spouse of Amelia Warner?", "What was the spouse of the spouse of Amelia Warner?", "Which person is the spouse of the spouse of Amelia Warner?", "Which person was the spouse of the spouse of Amelia Warner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amelia_Warner> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Tell me the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "What is the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "What was the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Which person is the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?", "Which person was the spouse of the spouse of Antony Armstrong-Jones, 1st Earl of Snowdon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Antony_Armstrong-Jones,_1st_Earl_of_Snowdon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Bernadette Chirac?", "Tell me the spouse of the spouse of Bernadette Chirac?", "What is the spouse of the spouse of Bernadette Chirac?", "What was the spouse of the spouse of Bernadette Chirac?", "Which person is the spouse of the spouse of Bernadette Chirac?", "Which person was the spouse of the spouse of Bernadette Chirac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bernadette_Chirac> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Bianca Jagger?", "Tell me the spouse of the spouse of Bianca Jagger?", "What is the spouse of the spouse of Bianca Jagger?", "What was the spouse of the spouse of Bianca Jagger?", "Which person is the spouse of the spouse of Bianca Jagger?", "Which person was the spouse of the spouse of Bianca Jagger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bianca_Jagger> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Daniel Massey (actor)?", "Tell me the spouse of the spouse of Daniel Massey (actor)?", "What is the spouse of the spouse of Daniel Massey (actor)?", "What was the spouse of the spouse of Daniel Massey (actor)?", "Which person is the spouse of the spouse of Daniel Massey (actor)?", "Which person was the spouse of the spouse of Daniel Massey (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Daniel_Massey_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Ferdinand III, Holy Roman Emperor?", "Tell me the spouse of the spouse of Ferdinand III, Holy Roman Emperor?", "What is the spouse of the spouse of Ferdinand III, Holy Roman Emperor?", "What was the spouse of the spouse of Ferdinand III, Holy Roman Emperor?", "Which person is the spouse of the spouse of Ferdinand III, Holy Roman Emperor?", "Which person was the spouse of the spouse of Ferdinand III, Holy Roman Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Francis I, Holy Roman Emperor?", "Tell me the spouse of the spouse of Francis I, Holy Roman Emperor?", "What is the spouse of the spouse of Francis I, Holy Roman Emperor?", "What was the spouse of the spouse of Francis I, Holy Roman Emperor?", "Which person is the spouse of the spouse of Francis I, Holy Roman Emperor?", "Which person was the spouse of the spouse of Francis I, Holy Roman Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Francis_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Jack Ryan (politician)?", "Tell me the spouse of the spouse of Jack Ryan (politician)?", "What is the spouse of the spouse of Jack Ryan (politician)?", "What was the spouse of the spouse of Jack Ryan (politician)?", "Which person is the spouse of the spouse of Jack Ryan (politician)?", "Which person was the spouse of the spouse of Jack Ryan (politician)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Jacqueline, Countess of Hainaut?", "Tell me the spouse of the spouse of Jacqueline, Countess of Hainaut?", "What is the spouse of the spouse of Jacqueline, Countess of Hainaut?", "What was the spouse of the spouse of Jacqueline, Countess of Hainaut?", "Which person is the spouse of the spouse of Jacqueline, Countess of Hainaut?", "Which person was the spouse of the spouse of Jacqueline, Countess of Hainaut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jacqueline,_Countess_of_Hainaut> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of Leonard Woolf?", "Tell me the spouse of the spouse of Leonard Woolf?", "What is the spouse of the spouse of Leonard Woolf?", "What was the spouse of the spouse of Leonard Woolf?", "Which person is the spouse of the spouse of Leonard Woolf?", "Which person was the spouse of the spouse of Leonard Woolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leonard_Woolf> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1756-02-06?", "Tell me the spouse of persons born by 1756-02-06?", "What is the spouse of persons born by 1756-02-06?", "What was the spouse of persons born by 1756-02-06?", "Which person is the spouse of persons born by 1756-02-06?", "Which person was the spouse of persons born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1929-05-16?", "Tell me the spouse of persons born by 1929-05-16?", "What is the spouse of persons born by 1929-05-16?", "What was the spouse of persons born by 1929-05-16?", "Which person is the spouse of persons born by 1929-05-16?", "Which person was the spouse of persons born by 1929-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1929-05-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1946-02-21?", "Tell me the spouse of persons born by 1946-02-21?", "What is the spouse of persons born by 1946-02-21?", "What was the spouse of persons born by 1946-02-21?", "Which person is the spouse of persons born by 1946-02-21?", "Which person was the spouse of persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1936-05-09?", "Tell me the spouse of persons born by 1936-05-09?", "What is the spouse of persons born by 1936-05-09?", "What was the spouse of persons born by 1936-05-09?", "Which person is the spouse of persons born by 1936-05-09?", "Which person was the spouse of persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1414-11-09?", "Tell me the spouse of persons born by 1414-11-09?", "What is the spouse of persons born by 1414-11-09?", "What was the spouse of persons born by 1414-11-09?", "Which person is the spouse of persons born by 1414-11-09?", "Which person was the spouse of persons born by 1414-11-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1414-11-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1820-03-20?", "Tell me the spouse of persons born by 1820-03-20?", "What is the spouse of persons born by 1820-03-20?", "What was the spouse of persons born by 1820-03-20?", "Which person is the spouse of persons born by 1820-03-20?", "Which person was the spouse of persons born by 1820-03-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1820-03-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1913-12-18?", "Tell me the spouse of persons born by 1913-12-18?", "What is the spouse of persons born by 1913-12-18?", "What was the spouse of persons born by 1913-12-18?", "Which person is the spouse of persons born by 1913-12-18?", "Which person was the spouse of persons born by 1913-12-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1913-12-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1974-03-24?", "Tell me the spouse of persons born by 1974-03-24?", "What is the spouse of persons born by 1974-03-24?", "What was the spouse of persons born by 1974-03-24?", "Which person is the spouse of persons born by 1974-03-24?", "Which person was the spouse of persons born by 1974-03-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1974-03-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1948-03-22?", "Tell me the spouse of persons born by 1948-03-22?", "What is the spouse of persons born by 1948-03-22?", "What was the spouse of persons born by 1948-03-22?", "Which person is the spouse of persons born by 1948-03-22?", "Which person was the spouse of persons born by 1948-03-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1948-03-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1928-10-31?", "Tell me the spouse of persons born by 1928-10-31?", "What is the spouse of persons born by 1928-10-31?", "What was the spouse of persons born by 1928-10-31?", "Which person is the spouse of persons born by 1928-10-31?", "Which person was the spouse of persons born by 1928-10-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1928-10-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1926-03-06?", "Tell me the spouse of persons born by 1926-03-06?", "What is the spouse of persons born by 1926-03-06?", "What was the spouse of persons born by 1926-03-06?", "Which person is the spouse of persons born by 1926-03-06?", "Which person was the spouse of persons born by 1926-03-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1926-03-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1940-11-22?", "Tell me the spouse of persons born by 1940-11-22?", "What is the spouse of persons born by 1940-11-22?", "What was the spouse of persons born by 1940-11-22?", "Which person is the spouse of persons born by 1940-11-22?", "Which person was the spouse of persons born by 1940-11-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1896-02-19?", "Tell me the spouse of persons born by 1896-02-19?", "What is the spouse of persons born by 1896-02-19?", "What was the spouse of persons born by 1896-02-19?", "Which person is the spouse of persons born by 1896-02-19?", "Which person was the spouse of persons born by 1896-02-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1896-02-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1901-11-03?", "Tell me the spouse of persons born by 1901-11-03?", "What is the spouse of persons born by 1901-11-03?", "What was the spouse of persons born by 1901-11-03?", "Which person is the spouse of persons born by 1901-11-03?", "Which person was the spouse of persons born by 1901-11-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1901-11-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1693-02-07?", "Tell me the spouse of persons born by 1693-02-07?", "What is the spouse of persons born by 1693-02-07?", "What was the spouse of persons born by 1693-02-07?", "Which person is the spouse of persons born by 1693-02-07?", "Which person was the spouse of persons born by 1693-02-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1693-02-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1665-02-06?", "Tell me the spouse of persons born by 1665-02-06?", "What is the spouse of persons born by 1665-02-06?", "What was the spouse of persons born by 1665-02-06?", "Which person is the spouse of persons born by 1665-02-06?", "Which person was the spouse of persons born by 1665-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1665-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1456-06-11?", "Tell me the spouse of persons born by 1456-06-11?", "What is the spouse of persons born by 1456-06-11?", "What was the spouse of persons born by 1456-06-11?", "Which person is the spouse of persons born by 1456-06-11?", "Which person was the spouse of persons born by 1456-06-11?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1456-06-11\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1515-09-22?", "Tell me the spouse of persons born by 1515-09-22?", "What is the spouse of persons born by 1515-09-22?", "What was the spouse of persons born by 1515-09-22?", "Which person is the spouse of persons born by 1515-09-22?", "Which person was the spouse of persons born by 1515-09-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1515-09-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1574-12-12?", "Tell me the spouse of persons born by 1574-12-12?", "What is the spouse of persons born by 1574-12-12?", "What was the spouse of persons born by 1574-12-12?", "Which person is the spouse of persons born by 1574-12-12?", "Which person was the spouse of persons born by 1574-12-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1574-12-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1917-02-25?", "Tell me the spouse of persons born by 1917-02-25?", "What is the spouse of persons born by 1917-02-25?", "What was the spouse of persons born by 1917-02-25?", "Which person is the spouse of persons born by 1917-02-25?", "Which person was the spouse of persons born by 1917-02-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1917-02-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1960-08-10?", "Tell me the spouse of persons born by 1960-08-10?", "What is the spouse of persons born by 1960-08-10?", "What was the spouse of persons born by 1960-08-10?", "Which person is the spouse of persons born by 1960-08-10?", "Which person was the spouse of persons born by 1960-08-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1960-08-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1918-12-25?", "Tell me the spouse of persons born by 1918-12-25?", "What is the spouse of persons born by 1918-12-25?", "What was the spouse of persons born by 1918-12-25?", "Which person is the spouse of persons born by 1918-12-25?", "Which person was the spouse of persons born by 1918-12-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-12-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1968-04-19?", "Tell me the spouse of persons born by 1968-04-19?", "What is the spouse of persons born by 1968-04-19?", "What was the spouse of persons born by 1968-04-19?", "Which person is the spouse of persons born by 1968-04-19?", "Which person was the spouse of persons born by 1968-04-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1968-04-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1849-01-22?", "Tell me the spouse of persons born by 1849-01-22?", "What is the spouse of persons born by 1849-01-22?", "What was the spouse of persons born by 1849-01-22?", "Which person is the spouse of persons born by 1849-01-22?", "Which person was the spouse of persons born by 1849-01-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1849-01-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 0214-09-09?", "Tell me the spouse of persons born by 0214-09-09?", "What is the spouse of persons born by 0214-09-09?", "What was the spouse of persons born by 0214-09-09?", "Which person is the spouse of persons born by 0214-09-09?", "Which person was the spouse of persons born by 0214-09-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"0214-09-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1922-12-24?", "Tell me the spouse of persons born by 1922-12-24?", "What is the spouse of persons born by 1922-12-24?", "What was the spouse of persons born by 1922-12-24?", "Which person is the spouse of persons born by 1922-12-24?", "Which person was the spouse of persons born by 1922-12-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1922-12-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1885-09-22?", "Tell me the spouse of persons born by 1885-09-22?", "What is the spouse of persons born by 1885-09-22?", "What was the spouse of persons born by 1885-09-22?", "Which person is the spouse of persons born by 1885-09-22?", "Which person was the spouse of persons born by 1885-09-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1885-09-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1949-10-21?", "Tell me the spouse of persons born by 1949-10-21?", "What is the spouse of persons born by 1949-10-21?", "What was the spouse of persons born by 1949-10-21?", "Which person is the spouse of persons born by 1949-10-21?", "Which person was the spouse of persons born by 1949-10-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1949-10-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1922-07-26?", "Tell me the spouse of persons born by 1922-07-26?", "What is the spouse of persons born by 1922-07-26?", "What was the spouse of persons born by 1922-07-26?", "Which person is the spouse of persons born by 1922-07-26?", "Which person was the spouse of persons born by 1922-07-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1922-07-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1923-07-22?", "Tell me the spouse of persons born by 1923-07-22?", "What is the spouse of persons born by 1923-07-22?", "What was the spouse of persons born by 1923-07-22?", "Which person is the spouse of persons born by 1923-07-22?", "Which person was the spouse of persons born by 1923-07-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-07-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1856-04-05?", "Tell me the spouse of persons born by 1856-04-05?", "What is the spouse of persons born by 1856-04-05?", "What was the spouse of persons born by 1856-04-05?", "Which person is the spouse of persons born by 1856-04-05?", "Which person was the spouse of persons born by 1856-04-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1856-04-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1894-01-30?", "Tell me the spouse of persons born by 1894-01-30?", "What is the spouse of persons born by 1894-01-30?", "What was the spouse of persons born by 1894-01-30?", "Which person is the spouse of persons born by 1894-01-30?", "Which person was the spouse of persons born by 1894-01-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1894-01-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1963-12-18?", "Tell me the spouse of persons born by 1963-12-18?", "What is the spouse of persons born by 1963-12-18?", "What was the spouse of persons born by 1963-12-18?", "Which person is the spouse of persons born by 1963-12-18?", "Which person was the spouse of persons born by 1963-12-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1963-12-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1940-11-27?", "Tell me the spouse of persons born by 1940-11-27?", "What is the spouse of persons born by 1940-11-27?", "What was the spouse of persons born by 1940-11-27?", "Which person is the spouse of persons born by 1940-11-27?", "Which person was the spouse of persons born by 1940-11-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1895-10-04?", "Tell me the spouse of persons born by 1895-10-04?", "What is the spouse of persons born by 1895-10-04?", "What was the spouse of persons born by 1895-10-04?", "Which person is the spouse of persons born by 1895-10-04?", "Which person was the spouse of persons born by 1895-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1895-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1972-08-30?", "Tell me the spouse of persons born by 1972-08-30?", "What is the spouse of persons born by 1972-08-30?", "What was the spouse of persons born by 1972-08-30?", "Which person is the spouse of persons born by 1972-08-30?", "Which person was the spouse of persons born by 1972-08-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1972-08-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1949-07-15?", "Tell me the spouse of persons born by 1949-07-15?", "What is the spouse of persons born by 1949-07-15?", "What was the spouse of persons born by 1949-07-15?", "Which person is the spouse of persons born by 1949-07-15?", "Which person was the spouse of persons born by 1949-07-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1949-07-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1930-07-02?", "Tell me the spouse of persons born by 1930-07-02?", "What is the spouse of persons born by 1930-07-02?", "What was the spouse of persons born by 1930-07-02?", "Which person is the spouse of persons born by 1930-07-02?", "Which person was the spouse of persons born by 1930-07-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1930-07-02\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1893-10-15?", "Tell me the spouse of persons born by 1893-10-15?", "What is the spouse of persons born by 1893-10-15?", "What was the spouse of persons born by 1893-10-15?", "Which person is the spouse of persons born by 1893-10-15?", "Which person was the spouse of persons born by 1893-10-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1893-10-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1908-10-06?", "Tell me the spouse of persons born by 1908-10-06?", "What is the spouse of persons born by 1908-10-06?", "What was the spouse of persons born by 1908-10-06?", "Which person is the spouse of persons born by 1908-10-06?", "Which person was the spouse of persons born by 1908-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1908-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1683-03-01?", "Tell me the spouse of persons born by 1683-03-01?", "What is the spouse of persons born by 1683-03-01?", "What was the spouse of persons born by 1683-03-01?", "Which person is the spouse of persons born by 1683-03-01?", "Which person was the spouse of persons born by 1683-03-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1683-03-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1768-05-17?", "Tell me the spouse of persons born by 1768-05-17?", "What is the spouse of persons born by 1768-05-17?", "What was the spouse of persons born by 1768-05-17?", "Which person is the spouse of persons born by 1768-05-17?", "Which person was the spouse of persons born by 1768-05-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1768-05-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1860-04-23?", "Tell me the spouse of persons born by 1860-04-23?", "What is the spouse of persons born by 1860-04-23?", "What was the spouse of persons born by 1860-04-23?", "Which person is the spouse of persons born by 1860-04-23?", "Which person was the spouse of persons born by 1860-04-23?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1860-04-23\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1427-11-30?", "Tell me the spouse of persons born by 1427-11-30?", "What is the spouse of persons born by 1427-11-30?", "What was the spouse of persons born by 1427-11-30?", "Which person is the spouse of persons born by 1427-11-30?", "Which person was the spouse of persons born by 1427-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1427-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1943-10-22?", "Tell me the spouse of persons born by 1943-10-22?", "What is the spouse of persons born by 1943-10-22?", "What was the spouse of persons born by 1943-10-22?", "Which person is the spouse of persons born by 1943-10-22?", "Which person was the spouse of persons born by 1943-10-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-10-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1684-04-15?", "Tell me the spouse of persons born by 1684-04-15?", "What is the spouse of persons born by 1684-04-15?", "What was the spouse of persons born by 1684-04-15?", "Which person is the spouse of persons born by 1684-04-15?", "Which person was the spouse of persons born by 1684-04-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1684-04-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1519-04-13?", "Tell me the spouse of persons born by 1519-04-13?", "What is the spouse of persons born by 1519-04-13?", "What was the spouse of persons born by 1519-04-13?", "Which person is the spouse of persons born by 1519-04-13?", "Which person was the spouse of persons born by 1519-04-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1519-04-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1401-10-27?", "Tell me the spouse of persons born by 1401-10-27?", "What is the spouse of persons born by 1401-10-27?", "What was the spouse of persons born by 1401-10-27?", "Which person is the spouse of persons born by 1401-10-27?", "Which person was the spouse of persons born by 1401-10-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1401-10-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1754-02-02?", "Tell me the spouse of persons born by 1754-02-02?", "What is the spouse of persons born by 1754-02-02?", "What was the spouse of persons born by 1754-02-02?", "Which person is the spouse of persons born by 1754-02-02?", "Which person was the spouse of persons born by 1754-02-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1754-02-02\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1868-06-07?", "Tell me the spouse of persons born by 1868-06-07?", "What is the spouse of persons born by 1868-06-07?", "What was the spouse of persons born by 1868-06-07?", "Which person is the spouse of persons born by 1868-06-07?", "Which person was the spouse of persons born by 1868-06-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1868-06-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1697-08-06?", "Tell me the spouse of persons born by 1697-08-06?", "What is the spouse of persons born by 1697-08-06?", "What was the spouse of persons born by 1697-08-06?", "Which person is the spouse of persons born by 1697-08-06?", "Which person was the spouse of persons born by 1697-08-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1697-08-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1923-10-04?", "Tell me the spouse of persons born by 1923-10-04?", "What is the spouse of persons born by 1923-10-04?", "What was the spouse of persons born by 1923-10-04?", "Which person is the spouse of persons born by 1923-10-04?", "Which person was the spouse of persons born by 1923-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1923-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1950-10-12?", "Tell me the spouse of persons born by 1950-10-12?", "What is the spouse of persons born by 1950-10-12?", "What was the spouse of persons born by 1950-10-12?", "Which person is the spouse of persons born by 1950-10-12?", "Which person was the spouse of persons born by 1950-10-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-10-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of persons born by 1943-07-12?", "Tell me the spouse of persons born by 1943-07-12?", "What is the spouse of persons born by 1943-07-12?", "What was the spouse of persons born by 1943-07-12?", "Which person is the spouse of persons born by 1943-07-12?", "Which person was the spouse of persons born by 1943-07-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-07-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrzej_Wajda> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Carole Lombard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carole_Lombard> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Caroline of Brunswick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Caroline_of_Brunswick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Catherine I of Russia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Catherine_I_of_Russia> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Clark Gable?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clark_Gable> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Cnut the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cnut_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Edmond Hamilton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmond_Hamilton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Elizabeth Woodville?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Woodville> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Emma of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emma_of_Normandy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of George IV of the United Kingdom?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/George_IV_of_the_United_Kingdom> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Gwyneth Paltrow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gwyneth_Paltrow> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Jennifer Aniston?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jennifer_Aniston> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Leigh Brackett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Leigh_Brackett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Louis XVI of France?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_XVI_of_France> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Marie Antoinette?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marie_Antoinette> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Peter the Great?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Peter_the_Great> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Richard Burton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_Burton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Roberto Rossellini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Roberto_Rossellini> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Salman Rushdie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salman_Rushdie> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sylvia Plath?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Plath> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Ted Hughes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ted_Hughes> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Theophanu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Theophanu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Val Kilmer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Val_Kilmer> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Vivien Leigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Leigh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Camille Flammarion?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Camille_Flammarion> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Chris Martin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chris_Martin> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Céline Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Céline_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Joanne Whalley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Whalley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of John Grey of Groby?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Grey_of_Groby> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Minnie Maddern Fiske?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Minnie_Maddern_Fiske> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Padma Lakshmi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Padma_Lakshmi> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Talisa Soto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Talisa_Soto> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Aaron Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaron_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Adam Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adam_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Alastair Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alastair_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Arlie Russell Hochschild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arlie_Russell_Hochschild> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Benjamin Bratt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Benjamin_Bratt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Bunker Roy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bunker_Roy> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Candy Spelling?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Candy_Spelling> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Cyrille Bara?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cyrille_Bara> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Dorothy Dunnett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dorothy_Dunnett> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Ehud Olmert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ehud_Olmert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Elvira of Castile, Queen of León?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Harriet Smithson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Harriet_Smithson> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of James Harris Simons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_Harris_Simons> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Lewis Craig Humphrey?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lewis_Craig_Humphrey> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Paul Hasluck?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paul_Hasluck> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Paula Dockery?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Paula_Dockery> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Robert Sidney, 2nd Earl of Leicester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_Sidney,_2nd_Earl_of_Leicester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Rolly Bester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rolly_Bester> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Ruy Guerra?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruy_Guerra> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Clara McMillen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clara_McMillen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Diana Gould (dancer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Diana_Gould_(dancer)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sidney Miller (actor)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Miller_(actor)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sir Edward Burgh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sir_Edward_Burgh> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Henry Morgenthau Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_Morgenthau_Jr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Lydia Lopokova?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Lopokova> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Maxwell Reed?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maxwell_Reed> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sigrid the Haughty?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sigrid_the_Haughty> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Elena Ceaușescu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elena_Ceaușescu> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Ruqaiya Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ruqaiya_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Eliza Jumel?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eliza_Jumel> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Katie Lee (chef)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katie_Lee_(chef)> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Elsa Pataky?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elsa_Pataky> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Tom Courtenay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tom_Courtenay> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Christian I of Denmark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christian_I_of_Denmark> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Edward of Westminster, Prince of Wales?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Lady Caroline Lamb?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lady_Caroline_Lamb> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Margaret Sullavan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret_Sullavan> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Maria Fitzherbert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maria_Fitzherbert> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Mickey Deans?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mickey_Deans> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Alice Hathaway Lee Roosevelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Frank Bunker Gilbreth Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr.> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Alfred Steele?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alfred_Steele> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Barbara Hutton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Hutton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sidney Luft?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sidney_Luft> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sylvia Ashley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sylvia_Ashley> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Salima Sultan Begum?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Salima_Sultan_Begum> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Cecily Neville, Duchess of Warwick?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cecily_Neville,_Duchess_of_Warwick> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of David Evans Shaw?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/David_Evans_Shaw> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of John Jay O'Connor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_Jay_O'Connor> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Marta Fernandez Miranda de Batista?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Josephine Dillon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josephine_Dillon> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Sunita Deshpande?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunita_Deshpande> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Bettina Gorton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bettina_Gorton> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Luma de Oliveira?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Luma_de_Oliveira> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Tove of the Obotrites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tove_of_the_Obotrites> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Gelli de Belen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gelli_de_Belen> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born the spouse of Albia Dominica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Albia_Dominica> <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1969-12-17?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1969-12-17\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1936-11-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-11-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1990-10-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1990-10-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1976-11-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1976-11-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1989-11-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1989-11-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1943-12-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1943-12-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1918-12-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-12-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1975-10-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1975-10-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1896-09-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1896-09-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1756-02-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1756-02-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1900-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1918-10-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1918-10-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1667-05-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1667-05-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1779-11-14?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1779-11-14\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1937-01-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1937-01-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1952-07-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1900-02-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1900-02-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1870-12-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1870-12-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1752-09-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1752-09-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1929-05-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1929-05-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1955-02-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1955-02-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1970-08-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1970-08-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1863-12-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1863-12-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1414-11-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1414-11-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1931-05-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1931-05-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What born persons born by 1950-01-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> \"1950-01-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Andrzej Wajda?", "What directs movies directed by Andrzej Wajda?", "Which person directed movies directed by Andrzej Wajda?", "Which person directs movies directed by Andrzej Wajda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Andrzej_Wajda>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Billy Wilder?", "What directs movies directed by Billy Wilder?", "Which person directed movies directed by Billy Wilder?", "Which person directs movies directed by Billy Wilder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Billy_Wilder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Blake Edwards?", "What directs movies directed by Blake Edwards?", "Which person directed movies directed by Blake Edwards?", "Which person directs movies directed by Blake Edwards?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Blake_Edwards>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Elia Kazan?", "What directs movies directed by Elia Kazan?", "Which person directed movies directed by Elia Kazan?", "Which person directs movies directed by Elia Kazan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Elia_Kazan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Godfrey Reggio?", "What directs movies directed by Godfrey Reggio?", "Which person directed movies directed by Godfrey Reggio?", "Which person directs movies directed by Godfrey Reggio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Godfrey_Reggio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by John Carpenter?", "What directs movies directed by John Carpenter?", "Which person directed movies directed by John Carpenter?", "Which person directs movies directed by John Carpenter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Carpenter>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Luc Besson?", "What directs movies directed by Luc Besson?", "Which person directed movies directed by Luc Besson?", "Which person directs movies directed by Luc Besson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Luc_Besson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Luchino Visconti?", "What directs movies directed by Luchino Visconti?", "Which person directed movies directed by Luchino Visconti?", "Which person directs movies directed by Luchino Visconti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Luchino_Visconti>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Peter Weir?", "What directs movies directed by Peter Weir?", "Which person directed movies directed by Peter Weir?", "Which person directs movies directed by Peter Weir?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Peter_Weir>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Ted Demme?", "What directs movies directed by Ted Demme?", "Which person directed movies directed by Ted Demme?", "Which person directs movies directed by Ted Demme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ted_Demme>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Terry Gilliam?", "What directs movies directed by Terry Gilliam?", "Which person directed movies directed by Terry Gilliam?", "Which person directs movies directed by Terry Gilliam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Terry_Gilliam>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Tod Browning?", "What directs movies directed by Tod Browning?", "Which person directed movies directed by Tod Browning?", "Which person directs movies directed by Tod Browning?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tod_Browning>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Tony Richardson?", "What directs movies directed by Tony Richardson?", "Which person directed movies directed by Tony Richardson?", "Which person directs movies directed by Tony Richardson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tony_Richardson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Vittorio De Sica?", "What directs movies directed by Vittorio De Sica?", "Which person directed movies directed by Vittorio De Sica?", "Which person directs movies directed by Vittorio De Sica?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Vittorio_De_Sica>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Wim Wenders?", "What directs movies directed by Wim Wenders?", "Which person directed movies directed by Wim Wenders?", "Which person directs movies directed by Wim Wenders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Wim_Wenders>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Woody Allen?", "What directs movies directed by Woody Allen?", "Which person directed movies directed by Woody Allen?", "Which person directs movies directed by Woody Allen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Woody_Allen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Marcello Albani?", "What directs movies directed by Marcello Albani?", "Which person directed movies directed by Marcello Albani?", "Which person directs movies directed by Marcello Albani?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Marcello_Albani>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Charles McDougall?", "What directs movies directed by Charles McDougall?", "Which person directed movies directed by Charles McDougall?", "Which person directs movies directed by Charles McDougall?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Charles_McDougall>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Griffin Dunne?", "What directs movies directed by Griffin Dunne?", "Which person directed movies directed by Griffin Dunne?", "Which person directs movies directed by Griffin Dunne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Griffin_Dunne>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Hideo Nakata?", "What directs movies directed by Hideo Nakata?", "Which person directed movies directed by Hideo Nakata?", "Which person directs movies directed by Hideo Nakata?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Hideo_Nakata>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by James Kirkwood, Sr.?", "What directs movies directed by James Kirkwood, Sr.?", "Which person directed movies directed by James Kirkwood, Sr.?", "Which person directs movies directed by James Kirkwood, Sr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/James_Kirkwood,_Sr.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by John Landis?", "What directs movies directed by John Landis?", "Which person directed movies directed by John Landis?", "Which person directs movies directed by John Landis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Landis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Kimio Yabuki?", "What directs movies directed by Kimio Yabuki?", "Which person directed movies directed by Kimio Yabuki?", "Which person directs movies directed by Kimio Yabuki?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Kimio_Yabuki>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Koichi Ishii?", "What directs movies directed by Koichi Ishii?", "Which person directed movies directed by Koichi Ishii?", "Which person directs movies directed by Koichi Ishii?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Koichi_Ishii>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Krzysztof Zanussi?", "What directs movies directed by Krzysztof Zanussi?", "Which person directed movies directed by Krzysztof Zanussi?", "Which person directs movies directed by Krzysztof Zanussi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Krzysztof_Zanussi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Maher Sabry?", "What directs movies directed by Maher Sabry?", "Which person directed movies directed by Maher Sabry?", "Which person directs movies directed by Maher Sabry?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Maher_Sabry>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Nanni Moretti?", "What directs movies directed by Nanni Moretti?", "Which person directed movies directed by Nanni Moretti?", "Which person directs movies directed by Nanni Moretti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Nanni_Moretti>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Paul Lynch (director)?", "What directs movies directed by Paul Lynch (director)?", "Which person directed movies directed by Paul Lynch (director)?", "Which person directs movies directed by Paul Lynch (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Paul_Lynch_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Tony Giglio?", "What directs movies directed by Tony Giglio?", "Which person directed movies directed by Tony Giglio?", "Which person directs movies directed by Tony Giglio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tony_Giglio>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Walt Becker?", "What directs movies directed by Walt Becker?", "Which person directed movies directed by Walt Becker?", "Which person directs movies directed by Walt Becker?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Walt_Becker>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Walter Grauman?", "What directs movies directed by Walter Grauman?", "Which person directed movies directed by Walter Grauman?", "Which person directs movies directed by Walter Grauman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Walter_Grauman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Oliver Stone?", "What directs movies directed by Oliver Stone?", "Which person directed movies directed by Oliver Stone?", "Which person directs movies directed by Oliver Stone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Oliver_Stone>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by John Behring?", "What directs movies directed by John Behring?", "Which person directed movies directed by John Behring?", "Which person directs movies directed by John Behring?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Behring>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Bruno Corbucci?", "What directs movies directed by Bruno Corbucci?", "Which person directed movies directed by Bruno Corbucci?", "Which person directs movies directed by Bruno Corbucci?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Bruno_Corbucci>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Dan Riba?", "What directs movies directed by Dan Riba?", "Which person directed movies directed by Dan Riba?", "Which person directs movies directed by Dan Riba?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Dan_Riba>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by David Zucker (filmmaker)?", "What directs movies directed by David Zucker (filmmaker)?", "Which person directed movies directed by David Zucker (filmmaker)?", "Which person directs movies directed by David Zucker (filmmaker)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/David_Zucker_(filmmaker)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by George Sherman?", "What directs movies directed by George Sherman?", "Which person directed movies directed by George Sherman?", "Which person directs movies directed by George Sherman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/George_Sherman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Jan Hřebejk?", "What directs movies directed by Jan Hřebejk?", "Which person directed movies directed by Jan Hřebejk?", "Which person directs movies directed by Jan Hřebejk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Jan_Hřebejk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Karl Brown (cinematographer)?", "What directs movies directed by Karl Brown (cinematographer)?", "Which person directed movies directed by Karl Brown (cinematographer)?", "Which person directs movies directed by Karl Brown (cinematographer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Karl_Brown_(cinematographer)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Mike Figgis?", "What directs movies directed by Mike Figgis?", "Which person directed movies directed by Mike Figgis?", "Which person directs movies directed by Mike Figgis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Mike_Figgis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Zhao Liang (director)?", "What directs movies directed by Zhao Liang (director)?", "Which person directed movies directed by Zhao Liang (director)?", "Which person directs movies directed by Zhao Liang (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Zhao_Liang_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Stanley Donen?", "What directs movies directed by Stanley Donen?", "Which person directed movies directed by Stanley Donen?", "Which person directs movies directed by Stanley Donen?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Donen>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by George Archainbaud?", "What directs movies directed by George Archainbaud?", "Which person directed movies directed by George Archainbaud?", "Which person directs movies directed by George Archainbaud?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/George_Archainbaud>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by J. Searle Dawley?", "What directs movies directed by J. Searle Dawley?", "Which person directed movies directed by J. Searle Dawley?", "Which person directs movies directed by J. Searle Dawley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/J._Searle_Dawley>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Michael Grossman?", "What directs movies directed by Michael Grossman?", "Which person directed movies directed by Michael Grossman?", "Which person directs movies directed by Michael Grossman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Grossman>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Peter Graham Scott?", "What directs movies directed by Peter Graham Scott?", "Which person directed movies directed by Peter Graham Scott?", "Which person directs movies directed by Peter Graham Scott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Peter_Graham_Scott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Brenton Spencer?", "What directs movies directed by Brenton Spencer?", "Which person directed movies directed by Brenton Spencer?", "Which person directs movies directed by Brenton Spencer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Brenton_Spencer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Paul Alter?", "What directs movies directed by Paul Alter?", "Which person directed movies directed by Paul Alter?", "Which person directs movies directed by Paul Alter?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Paul_Alter>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Jason Winer?", "What directs movies directed by Jason Winer?", "Which person directed movies directed by Jason Winer?", "Which person directs movies directed by Jason Winer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Jason_Winer>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Kamalakara Kameswara Rao?", "What directs movies directed by Kamalakara Kameswara Rao?", "Which person directed movies directed by Kamalakara Kameswara Rao?", "Which person directs movies directed by Kamalakara Kameswara Rao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Kamalakara_Kameswara_Rao>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Lewis Teague?", "What directs movies directed by Lewis Teague?", "Which person directed movies directed by Lewis Teague?", "Which person directs movies directed by Lewis Teague?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Lewis_Teague>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Donna Deitch?", "What directs movies directed by Donna Deitch?", "Which person directed movies directed by Donna Deitch?", "Which person directs movies directed by Donna Deitch?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Donna_Deitch>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Leslie H. Martinson?", "What directs movies directed by Leslie H. Martinson?", "Which person directed movies directed by Leslie H. Martinson?", "Which person directs movies directed by Leslie H. Martinson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Leslie_H._Martinson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Sidney Olcott?", "What directs movies directed by Sidney Olcott?", "Which person directed movies directed by Sidney Olcott?", "Which person directs movies directed by Sidney Olcott?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Sidney_Olcott>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Dan Curtis?", "What directs movies directed by Dan Curtis?", "Which person directed movies directed by Dan Curtis?", "Which person directs movies directed by Dan Curtis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Dan_Curtis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Wayne Wang?", "What directs movies directed by Wayne Wang?", "Which person directed movies directed by Wayne Wang?", "Which person directs movies directed by Wayne Wang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Wayne_Wang>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Mehboob Khan?", "What directs movies directed by Mehboob Khan?", "Which person directed movies directed by Mehboob Khan?", "Which person directs movies directed by Mehboob Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Mehboob_Khan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Lloyd Bacon?", "What directs movies directed by Lloyd Bacon?", "Which person directed movies directed by Lloyd Bacon?", "Which person directs movies directed by Lloyd Bacon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Lloyd_Bacon>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by John Francis Dillon (director)?", "What directs movies directed by John Francis Dillon (director)?", "Which person directed movies directed by John Francis Dillon (director)?", "Which person directs movies directed by John Francis Dillon (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Francis_Dillon_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Mac Alejandre?", "What directs movies directed by Mac Alejandre?", "Which person directed movies directed by Mac Alejandre?", "Which person directs movies directed by Mac Alejandre?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Mac_Alejandre>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Alexander Gruszynski?", "What directs movies directed by Alexander Gruszynski?", "Which person directed movies directed by Alexander Gruszynski?", "Which person directs movies directed by Alexander Gruszynski?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Alexander_Gruszynski>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Georgi Djulgerov?", "What directs movies directed by Georgi Djulgerov?", "Which person directed movies directed by Georgi Djulgerov?", "Which person directs movies directed by Georgi Djulgerov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Georgi_Djulgerov>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Jeff Nichols?", "What directs movies directed by Jeff Nichols?", "Which person directed movies directed by Jeff Nichols?", "Which person directs movies directed by Jeff Nichols?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Jeff_Nichols>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Antonio Nuić?", "What directs movies directed by Antonio Nuić?", "Which person directed movies directed by Antonio Nuić?", "Which person directs movies directed by Antonio Nuić?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Antonio_Nuić>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Lev Atamanov?", "What directs movies directed by Lev Atamanov?", "Which person directed movies directed by Lev Atamanov?", "Which person directs movies directed by Lev Atamanov?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Lev_Atamanov>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Reginald Fogwell?", "What directs movies directed by Reginald Fogwell?", "Which person directed movies directed by Reginald Fogwell?", "Which person directs movies directed by Reginald Fogwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Reginald_Fogwell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Jeffrey Reiner?", "What directs movies directed by Jeffrey Reiner?", "Which person directed movies directed by Jeffrey Reiner?", "Which person directs movies directed by Jeffrey Reiner?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Jeffrey_Reiner>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Tom Terriss?", "What directs movies directed by Tom Terriss?", "Which person directed movies directed by Tom Terriss?", "Which person directs movies directed by Tom Terriss?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tom_Terriss>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Ralph Murphy?", "What directs movies directed by Ralph Murphy?", "Which person directed movies directed by Ralph Murphy?", "Which person directs movies directed by Ralph Murphy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ralph_Murphy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Barbet Schroeder?", "What directs movies directed by Barbet Schroeder?", "Which person directed movies directed by Barbet Schroeder?", "Which person directs movies directed by Barbet Schroeder?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Barbet_Schroeder>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Frank Thomas (animator)?", "What directs movies directed by Frank Thomas (animator)?", "Which person directed movies directed by Frank Thomas (animator)?", "Which person directs movies directed by Frank Thomas (animator)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Frank_Thomas_(animator)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Henry King (director)?", "What directs movies directed by Henry King (director)?", "Which person directed movies directed by Henry King (director)?", "Which person directs movies directed by Henry King (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Henry_King_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Matt Piedmont?", "What directs movies directed by Matt Piedmont?", "Which person directed movies directed by Matt Piedmont?", "Which person directs movies directed by Matt Piedmont?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Matt_Piedmont>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Merian C. Cooper?", "What directs movies directed by Merian C. Cooper?", "Which person directed movies directed by Merian C. Cooper?", "Which person directs movies directed by Merian C. Cooper?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Merian_C._Cooper>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Michael Moore?", "What directs movies directed by Michael Moore?", "Which person directed movies directed by Michael Moore?", "Which person directs movies directed by Michael Moore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Moore>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Michael Powell?", "What directs movies directed by Michael Powell?", "Which person directed movies directed by Michael Powell?", "Which person directs movies directed by Michael Powell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Powell>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Richard Kelly (director)?", "What directs movies directed by Richard Kelly (director)?", "Which person directed movies directed by Richard Kelly (director)?", "Which person directs movies directed by Richard Kelly (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Richard_Kelly_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Richard Lester?", "What directs movies directed by Richard Lester?", "Which person directed movies directed by Richard Lester?", "Which person directs movies directed by Richard Lester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Richard_Lester>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Ringo Lam?", "What directs movies directed by Ringo Lam?", "Which person directed movies directed by Ringo Lam?", "Which person directs movies directed by Ringo Lam?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ringo_Lam>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Robert Zemeckis?", "What directs movies directed by Robert Zemeckis?", "Which person directed movies directed by Robert Zemeckis?", "Which person directs movies directed by Robert Zemeckis?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Robert_Zemeckis>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Roger Donaldson?", "What directs movies directed by Roger Donaldson?", "Which person directed movies directed by Roger Donaldson?", "Which person directs movies directed by Roger Donaldson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Roger_Donaldson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Shigeru Miyamoto?", "What directs movies directed by Shigeru Miyamoto?", "Which person directed movies directed by Shigeru Miyamoto?", "Which person directs movies directed by Shigeru Miyamoto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Shigeru_Miyamoto>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Tetsuya Takahashi?", "What directs movies directed by Tetsuya Takahashi?", "Which person directed movies directed by Tetsuya Takahashi?", "Which person directs movies directed by Tetsuya Takahashi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tetsuya_Takahashi>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Douglas Sirk?", "What directs movies directed by Douglas Sirk?", "Which person directed movies directed by Douglas Sirk?", "Which person directs movies directed by Douglas Sirk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Douglas_Sirk>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Fred Zinnemann?", "What directs movies directed by Fred Zinnemann?", "Which person directed movies directed by Fred Zinnemann?", "Which person directs movies directed by Fred Zinnemann?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Fred_Zinnemann>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by John Hughes (filmmaker)?", "What directs movies directed by John Hughes (filmmaker)?", "Which person directed movies directed by John Hughes (filmmaker)?", "Which person directs movies directed by John Hughes (filmmaker)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/John_Hughes_(filmmaker)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Kenneth Branagh?", "What directs movies directed by Kenneth Branagh?", "Which person directed movies directed by Kenneth Branagh?", "Which person directs movies directed by Kenneth Branagh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Kenneth_Branagh>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Anurag Basu?", "What directs movies directed by Anurag Basu?", "Which person directed movies directed by Anurag Basu?", "Which person directs movies directed by Anurag Basu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Anurag_Basu>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Arthur Davis (animator)?", "What directs movies directed by Arthur Davis (animator)?", "Which person directed movies directed by Arthur Davis (animator)?", "Which person directs movies directed by Arthur Davis (animator)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Arthur_Davis_(animator)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Constantine Makris?", "What directs movies directed by Constantine Makris?", "Which person directed movies directed by Constantine Makris?", "Which person directs movies directed by Constantine Makris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Constantine_Makris>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by J. P. McGowan?", "What directs movies directed by J. P. McGowan?", "Which person directed movies directed by J. P. McGowan?", "Which person directs movies directed by J. P. McGowan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/J._P._McGowan>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Michael Kennedy (director)?", "What directs movies directed by Michael Kennedy (director)?", "Which person directed movies directed by Michael Kennedy (director)?", "Which person directs movies directed by Michael Kennedy (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Kennedy_(director)>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Prakash Raj?", "What directs movies directed by Prakash Raj?", "Which person directed movies directed by Prakash Raj?", "Which person directs movies directed by Prakash Raj?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Prakash_Raj>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Robert Z. Leonard?", "What directs movies directed by Robert Z. Leonard?", "Which person directed movies directed by Robert Z. Leonard?", "Which person directs movies directed by Robert Z. Leonard?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Robert_Z._Leonard>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Ross Bagdasarian, Jr.?", "What directs movies directed by Ross Bagdasarian, Jr.?", "Which person directed movies directed by Ross Bagdasarian, Jr.?", "Which person directs movies directed by Ross Bagdasarian, Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Ross_Bagdasarian,_Jr.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Zac Moncrief?", "What directs movies directed by Zac Moncrief?", "Which person directed movies directed by Zac Moncrief?", "Which person directs movies directed by Zac Moncrief?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Zac_Moncrief>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Frank Borzage?", "What directs movies directed by Frank Borzage?", "Which person directed movies directed by Frank Borzage?", "Which person directs movies directed by Frank Borzage?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Frank_Borzage>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Martin and Osa Johnson?", "What directs movies directed by Martin and Osa Johnson?", "Which person directed movies directed by Martin and Osa Johnson?", "Which person directs movies directed by Martin and Osa Johnson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Martin_and_Osa_Johnson>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by A. Kodandarami Reddy?", "What directs movies directed by A. Kodandarami Reddy?", "Which person directed movies directed by A. Kodandarami Reddy?", "Which person directs movies directed by A. Kodandarami Reddy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/A._Kodandarami_Reddy>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed movies directed by Adolfo Alix Jr.?", "What directs movies directed by Adolfo Alix Jr.?", "Which person directed movies directed by Adolfo Alix Jr.?", "Which person directs movies directed by Adolfo Alix Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Adolfo_Alix_Jr.>)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Brad Pitt?", "What was directed by the spouse of Brad Pitt?", "Which movie is directed by the spouse of Brad Pitt?", "Which movie was directed by the spouse of Brad Pitt?", "Which movies are directed by the spouse of Brad Pitt?", "Which movies were directed by the spouse of Brad Pitt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Brad_Pitt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Christopher Lambert?", "What was directed by the spouse of Christopher Lambert?", "Which movie is directed by the spouse of Christopher Lambert?", "Which movie was directed by the spouse of Christopher Lambert?", "Which movies are directed by the spouse of Christopher Lambert?", "Which movies were directed by the spouse of Christopher Lambert?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Christopher_Lambert> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Elizabeth Taylor?", "What was directed by the spouse of Elizabeth Taylor?", "Which movie is directed by the spouse of Elizabeth Taylor?", "Which movie was directed by the spouse of Elizabeth Taylor?", "Which movies are directed by the spouse of Elizabeth Taylor?", "Which movies were directed by the spouse of Elizabeth Taylor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Taylor> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Ingrid Bergman?", "What was directed by the spouse of Ingrid Bergman?", "Which movie is directed by the spouse of Ingrid Bergman?", "Which movie was directed by the spouse of Ingrid Bergman?", "Which movies are directed by the spouse of Ingrid Bergman?", "Which movies were directed by the spouse of Ingrid Bergman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ingrid_Bergman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Vivien Leigh?", "What was directed by the spouse of Vivien Leigh?", "Which movie is directed by the spouse of Vivien Leigh?", "Which movie was directed by the spouse of Vivien Leigh?", "Which movies are directed by the spouse of Vivien Leigh?", "Which movies were directed by the spouse of Vivien Leigh?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vivien_Leigh> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Dennis Quaid?", "What was directed by the spouse of Dennis Quaid?", "Which movie is directed by the spouse of Dennis Quaid?", "Which movie was directed by the spouse of Dennis Quaid?", "Which movies are directed by the spouse of Dennis Quaid?", "Which movies were directed by the spouse of Dennis Quaid?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dennis_Quaid> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Savitri (actress)?", "What was directed by the spouse of Savitri (actress)?", "Which movie is directed by the spouse of Savitri (actress)?", "Which movie was directed by the spouse of Savitri (actress)?", "Which movies are directed by the spouse of Savitri (actress)?", "Which movies were directed by the spouse of Savitri (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Savitri_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Beata Tyszkiewicz?", "What was directed by the spouse of Beata Tyszkiewicz?", "Which movie is directed by the spouse of Beata Tyszkiewicz?", "Which movie was directed by the spouse of Beata Tyszkiewicz?", "Which movies are directed by the spouse of Beata Tyszkiewicz?", "Which movies were directed by the spouse of Beata Tyszkiewicz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Beata_Tyszkiewicz> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Gemini Ganesan?", "What was directed by the spouse of Gemini Ganesan?", "Which movie is directed by the spouse of Gemini Ganesan?", "Which movie was directed by the spouse of Gemini Ganesan?", "Which movies are directed by the spouse of Gemini Ganesan?", "Which movies were directed by the spouse of Gemini Ganesan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gemini_Ganesan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lydia Clarke?", "What was directed by the spouse of Lydia Clarke?", "Which movie is directed by the spouse of Lydia Clarke?", "Which movie was directed by the spouse of Lydia Clarke?", "Which movies are directed by the spouse of Lydia Clarke?", "Which movies were directed by the spouse of Lydia Clarke?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lena Herzog?", "What was directed by the spouse of Lena Herzog?", "Which movie is directed by the spouse of Lena Herzog?", "Which movie was directed by the spouse of Lena Herzog?", "Which movies are directed by the spouse of Lena Herzog?", "Which movies were directed by the spouse of Lena Herzog?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lena_Herzog> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Maïwenn?", "What was directed by the spouse of Maïwenn?", "Which movie is directed by the spouse of Maïwenn?", "Which movie was directed by the spouse of Maïwenn?", "Which movies are directed by the spouse of Maïwenn?", "Which movies were directed by the spouse of Maïwenn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maïwenn> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Joanne Woodward?", "What was directed by the spouse of Joanne Woodward?", "Which movie is directed by the spouse of Joanne Woodward?", "Which movie was directed by the spouse of Joanne Woodward?", "Which movies are directed by the spouse of Joanne Woodward?", "Which movies were directed by the spouse of Joanne Woodward?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanne_Woodward> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Hank Azaria?", "What was directed by the spouse of Hank Azaria?", "Which movie is directed by the spouse of Hank Azaria?", "Which movie was directed by the spouse of Hank Azaria?", "Which movies are directed by the spouse of Hank Azaria?", "Which movies were directed by the spouse of Hank Azaria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hank_Azaria> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Dilys Hamlett?", "What was directed by the spouse of Dilys Hamlett?", "Which movie is directed by the spouse of Dilys Hamlett?", "Which movie was directed by the spouse of Dilys Hamlett?", "Which movies are directed by the spouse of Dilys Hamlett?", "Which movies were directed by the spouse of Dilys Hamlett?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dilys_Hamlett> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Helen Dallimore?", "What was directed by the spouse of Helen Dallimore?", "Which movie is directed by the spouse of Helen Dallimore?", "Which movie was directed by the spouse of Helen Dallimore?", "Which movies are directed by the spouse of Helen Dallimore?", "Which movies were directed by the spouse of Helen Dallimore?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helen_Dallimore> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Taryn Simon?", "What was directed by the spouse of Taryn Simon?", "Which movie is directed by the spouse of Taryn Simon?", "Which movie was directed by the spouse of Taryn Simon?", "Which movies are directed by the spouse of Taryn Simon?", "Which movies were directed by the spouse of Taryn Simon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Taryn_Simon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Chrissie White?", "What was directed by the spouse of Chrissie White?", "Which movie is directed by the spouse of Chrissie White?", "Which movie was directed by the spouse of Chrissie White?", "Which movies are directed by the spouse of Chrissie White?", "Which movies were directed by the spouse of Chrissie White?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Chrissie_White> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Aaliyah?", "What was directed by the spouse of Aaliyah?", "Which movie is directed by the spouse of Aaliyah?", "Which movie was directed by the spouse of Aaliyah?", "Which movies are directed by the spouse of Aaliyah?", "Which movies were directed by the spouse of Aaliyah?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aaliyah> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Evelyn Keyes?", "What was directed by the spouse of Evelyn Keyes?", "Which movie is directed by the spouse of Evelyn Keyes?", "Which movie was directed by the spouse of Evelyn Keyes?", "Which movies are directed by the spouse of Evelyn Keyes?", "Which movies were directed by the spouse of Evelyn Keyes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Evelyn_Keyes> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Bess Houdini?", "What was directed by the spouse of Bess Houdini?", "Which movie is directed by the spouse of Bess Houdini?", "Which movie was directed by the spouse of Bess Houdini?", "Which movies are directed by the spouse of Bess Houdini?", "Which movies were directed by the spouse of Bess Houdini?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Bess_Houdini> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Jill Esmond?", "What was directed by the spouse of Jill Esmond?", "Which movie is directed by the spouse of Jill Esmond?", "Which movie was directed by the spouse of Jill Esmond?", "Which movies are directed by the spouse of Jill Esmond?", "Which movies were directed by the spouse of Jill Esmond?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jill_Esmond> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Élisabeth Depardieu?", "What was directed by the spouse of Élisabeth Depardieu?", "Which movie is directed by the spouse of Élisabeth Depardieu?", "Which movie was directed by the spouse of Élisabeth Depardieu?", "Which movies are directed by the spouse of Élisabeth Depardieu?", "Which movies were directed by the spouse of Élisabeth Depardieu?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Élisabeth_Depardieu> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of María Mercader?", "What was directed by the spouse of María Mercader?", "Which movie is directed by the spouse of María Mercader?", "Which movie was directed by the spouse of María Mercader?", "Which movies are directed by the spouse of María Mercader?", "Which movies were directed by the spouse of María Mercader?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/María_Mercader> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Viveca Lindfors?", "What was directed by the spouse of Viveca Lindfors?", "Which movie is directed by the spouse of Viveca Lindfors?", "Which movie was directed by the spouse of Viveca Lindfors?", "Which movies are directed by the spouse of Viveca Lindfors?", "Which movies were directed by the spouse of Viveca Lindfors?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Viveca_Lindfors> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Robert F. Kennedy Jr.?", "What was directed by the spouse of Robert F. Kennedy Jr.?", "Which movie is directed by the spouse of Robert F. Kennedy Jr.?", "Which movie was directed by the spouse of Robert F. Kennedy Jr.?", "Which movies are directed by the spouse of Robert F. Kennedy Jr.?", "Which movies were directed by the spouse of Robert F. Kennedy Jr.?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Robert_F._Kennedy_Jr.> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Judith Holzmeister?", "What was directed by the spouse of Judith Holzmeister?", "Which movie is directed by the spouse of Judith Holzmeister?", "Which movie was directed by the spouse of Judith Holzmeister?", "Which movies are directed by the spouse of Judith Holzmeister?", "Which movies were directed by the spouse of Judith Holzmeister?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Judith_Holzmeister> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Doe Avedon?", "What was directed by the spouse of Doe Avedon?", "Which movie is directed by the spouse of Doe Avedon?", "Which movie was directed by the spouse of Doe Avedon?", "Which movies are directed by the spouse of Doe Avedon?", "Which movies were directed by the spouse of Doe Avedon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Doe_Avedon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Virginie Besson-Silla?", "What was directed by the spouse of Virginie Besson-Silla?", "Which movie is directed by the spouse of Virginie Besson-Silla?", "Which movie was directed by the spouse of Virginie Besson-Silla?", "Which movies are directed by the spouse of Virginie Besson-Silla?", "Which movies were directed by the spouse of Virginie Besson-Silla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Virginie_Besson-Silla> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Enrica Soma?", "What was directed by the spouse of Enrica Soma?", "Which movie is directed by the spouse of Enrica Soma?", "Which movie was directed by the spouse of Enrica Soma?", "Which movies are directed by the spouse of Enrica Soma?", "Which movies were directed by the spouse of Enrica Soma?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Enrica_Soma> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Susan Bay?", "What was directed by the spouse of Susan Bay?", "Which movie is directed by the spouse of Susan Bay?", "Which movie was directed by the spouse of Susan Bay?", "Which movies are directed by the spouse of Susan Bay?", "Which movies were directed by the spouse of Susan Bay?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susan_Bay> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Samantha Juste?", "What was directed by the spouse of Samantha Juste?", "Which movie is directed by the spouse of Samantha Juste?", "Which movie was directed by the spouse of Samantha Juste?", "Which movies are directed by the spouse of Samantha Juste?", "Which movies were directed by the spouse of Samantha Juste?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Samantha_Juste> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Molly Kazan?", "What was directed by the spouse of Molly Kazan?", "Which movie is directed by the spouse of Molly Kazan?", "Which movie was directed by the spouse of Molly Kazan?", "Which movies are directed by the spouse of Molly Kazan?", "Which movies were directed by the spouse of Molly Kazan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Molly_Kazan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Vaishali Kasaravalli?", "What was directed by the spouse of Vaishali Kasaravalli?", "Which movie is directed by the spouse of Vaishali Kasaravalli?", "Which movie was directed by the spouse of Vaishali Kasaravalli?", "Which movies are directed by the spouse of Vaishali Kasaravalli?", "Which movies were directed by the spouse of Vaishali Kasaravalli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vaishali_Kasaravalli> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Andrea Kelly (actress)?", "What was directed by the spouse of Andrea Kelly (actress)?", "Which movie is directed by the spouse of Andrea Kelly (actress)?", "Which movie was directed by the spouse of Andrea Kelly (actress)?", "Which movies are directed by the spouse of Andrea Kelly (actress)?", "Which movies were directed by the spouse of Andrea Kelly (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Andrea_Kelly_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Allan McKeown?", "What was directed by the spouse of Allan McKeown?", "Which movie is directed by the spouse of Allan McKeown?", "Which movie was directed by the spouse of Allan McKeown?", "Which movies are directed by the spouse of Allan McKeown?", "Which movies were directed by the spouse of Allan McKeown?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Allan_McKeown> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Melanie Griffith?", "What was directed by the spouse of Melanie Griffith?", "Which movie is directed by the spouse of Melanie Griffith?", "Which movie was directed by the spouse of Melanie Griffith?", "Which movies are directed by the spouse of Melanie Griffith?", "Which movies were directed by the spouse of Melanie Griffith?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Melanie_Griffith> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Polly Platt?", "What was directed by the spouse of Polly Platt?", "Which movie is directed by the spouse of Polly Platt?", "Which movie was directed by the spouse of Polly Platt?", "Which movies are directed by the spouse of Polly Platt?", "Which movies were directed by the spouse of Polly Platt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Polly_Platt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Sybil Christopher?", "What was directed by the spouse of Sybil Christopher?", "Which movie is directed by the spouse of Sybil Christopher?", "Which movie was directed by the spouse of Sybil Christopher?", "Which movies are directed by the spouse of Sybil Christopher?", "Which movies were directed by the spouse of Sybil Christopher?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sybil_Christopher> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Julie Andrews?", "What was directed by the spouse of Julie Andrews?", "Which movie is directed by the spouse of Julie Andrews?", "Which movie was directed by the spouse of Julie Andrews?", "Which movies are directed by the spouse of Julie Andrews?", "Which movies were directed by the spouse of Julie Andrews?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Julie_Andrews> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Liza Minnelli?", "What was directed by the spouse of Liza Minnelli?", "Which movie is directed by the spouse of Liza Minnelli?", "Which movie was directed by the spouse of Liza Minnelli?", "Which movies are directed by the spouse of Liza Minnelli?", "Which movies were directed by the spouse of Liza Minnelli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Liza_Minnelli> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Vanessa Redgrave?", "What was directed by the spouse of Vanessa Redgrave?", "Which movie is directed by the spouse of Vanessa Redgrave?", "Which movie was directed by the spouse of Vanessa Redgrave?", "Which movies are directed by the spouse of Vanessa Redgrave?", "Which movies were directed by the spouse of Vanessa Redgrave?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vanessa_Redgrave> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Eva Bartok?", "What was directed by the spouse of Eva Bartok?", "Which movie is directed by the spouse of Eva Bartok?", "Which movie was directed by the spouse of Eva Bartok?", "Which movies are directed by the spouse of Eva Bartok?", "Which movies were directed by the spouse of Eva Bartok?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eva_Bartok> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Jana Brejchová?", "What was directed by the spouse of Jana Brejchová?", "Which movie is directed by the spouse of Jana Brejchová?", "Which movie was directed by the spouse of Jana Brejchová?", "Which movies are directed by the spouse of Jana Brejchová?", "Which movies were directed by the spouse of Jana Brejchová?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jana_Brejchová> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Amy Leslie?", "What was directed by the spouse of Amy Leslie?", "Which movie is directed by the spouse of Amy Leslie?", "Which movie was directed by the spouse of Amy Leslie?", "Which movies are directed by the spouse of Amy Leslie?", "Which movies were directed by the spouse of Amy Leslie?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Leslie> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Pushpavalli?", "What was directed by the spouse of Pushpavalli?", "Which movie is directed by the spouse of Pushpavalli?", "Which movie was directed by the spouse of Pushpavalli?", "Which movies are directed by the spouse of Pushpavalli?", "Which movies were directed by the spouse of Pushpavalli?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pushpavalli> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Shelley Winters?", "What was directed by the spouse of Shelley Winters?", "Which movie is directed by the spouse of Shelley Winters?", "Which movie was directed by the spouse of Shelley Winters?", "Which movies are directed by the spouse of Shelley Winters?", "Which movies were directed by the spouse of Shelley Winters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Shelley_Winters> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Louise Lasser?", "What was directed by the spouse of Louise Lasser?", "Which movie is directed by the spouse of Louise Lasser?", "Which movie was directed by the spouse of Louise Lasser?", "Which movies are directed by the spouse of Louise Lasser?", "Which movies were directed by the spouse of Louise Lasser?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louise_Lasser> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Adrienne Barbeau?", "What was directed by the spouse of Adrienne Barbeau?", "Which movie is directed by the spouse of Adrienne Barbeau?", "Which movie was directed by the spouse of Adrienne Barbeau?", "Which movies are directed by the spouse of Adrienne Barbeau?", "Which movies were directed by the spouse of Adrienne Barbeau?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adrienne_Barbeau> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Jesse James (customizer)?", "What was directed by the spouse of Jesse James (customizer)?", "Which movie is directed by the spouse of Jesse James (customizer)?", "Which movie was directed by the spouse of Jesse James (customizer)?", "Which movies are directed by the spouse of Jesse James (customizer)?", "Which movies were directed by the spouse of Jesse James (customizer)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jesse_James_(customizer)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Milla Jovovich?", "What was directed by the spouse of Milla Jovovich?", "Which movie is directed by the spouse of Milla Jovovich?", "Which movie was directed by the spouse of Milla Jovovich?", "Which movies are directed by the spouse of Milla Jovovich?", "Which movies were directed by the spouse of Milla Jovovich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Milla_Jovovich> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Linda Lee Cadwell?", "What was directed by the spouse of Linda Lee Cadwell?", "Which movie is directed by the spouse of Linda Lee Cadwell?", "Which movie was directed by the spouse of Linda Lee Cadwell?", "Which movies are directed by the spouse of Linda Lee Cadwell?", "Which movies were directed by the spouse of Linda Lee Cadwell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Linda_Lee_Cadwell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Mayte Garcia?", "What was directed by the spouse of Mayte Garcia?", "Which movie is directed by the spouse of Mayte Garcia?", "Which movie was directed by the spouse of Mayte Garcia?", "Which movies are directed by the spouse of Mayte Garcia?", "Which movies were directed by the spouse of Mayte Garcia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mayte_Garcia> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Nicole Farhi?", "What was directed by the spouse of Nicole Farhi?", "Which movie is directed by the spouse of Nicole Farhi?", "Which movie was directed by the spouse of Nicole Farhi?", "Which movies are directed by the spouse of Nicole Farhi?", "Which movies were directed by the spouse of Nicole Farhi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nicole_Farhi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Anouk Aimée?", "What was directed by the spouse of Anouk Aimée?", "Which movie is directed by the spouse of Anouk Aimée?", "Which movie was directed by the spouse of Anouk Aimée?", "Which movies are directed by the spouse of Anouk Aimée?", "Which movies were directed by the spouse of Anouk Aimée?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anouk_Aimée> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Joan Plowright?", "What was directed by the spouse of Joan Plowright?", "Which movie is directed by the spouse of Joan Plowright?", "Which movie was directed by the spouse of Joan Plowright?", "Which movies are directed by the spouse of Joan Plowright?", "Which movies were directed by the spouse of Joan Plowright?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_Plowright> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Zoë Ball?", "What was directed by the spouse of Zoë Ball?", "Which movie is directed by the spouse of Zoë Ball?", "Which movie was directed by the spouse of Zoë Ball?", "Which movies are directed by the spouse of Zoë Ball?", "Which movies were directed by the spouse of Zoë Ball?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zoë_Ball> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Amanda Demme?", "What was directed by the spouse of Amanda Demme?", "Which movie is directed by the spouse of Amanda Demme?", "Which movie was directed by the spouse of Amanda Demme?", "Which movies are directed by the spouse of Amanda Demme?", "Which movies were directed by the spouse of Amanda Demme?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amanda_Demme> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Sandra Zober?", "What was directed by the spouse of Sandra Zober?", "Which movie is directed by the spouse of Sandra Zober?", "Which movie was directed by the spouse of Sandra Zober?", "Which movies are directed by the spouse of Sandra Zober?", "Which movies were directed by the spouse of Sandra Zober?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sandra_Zober> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Natalie Talmadge?", "What was directed by the spouse of Natalie Talmadge?", "Which movie is directed by the spouse of Natalie Talmadge?", "Which movie was directed by the spouse of Natalie Talmadge?", "Which movies are directed by the spouse of Natalie Talmadge?", "Which movies were directed by the spouse of Natalie Talmadge?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Natalie_Talmadge> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Jacqueline Beer?", "What was directed by the spouse of Jacqueline Beer?", "Which movie is directed by the spouse of Jacqueline Beer?", "Which movie was directed by the spouse of Jacqueline Beer?", "Which movies are directed by the spouse of Jacqueline Beer?", "Which movies were directed by the spouse of Jacqueline Beer?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jacqueline_Beer> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Barbara Loden?", "What was directed by the spouse of Barbara Loden?", "Which movie is directed by the spouse of Barbara Loden?", "Which movie was directed by the spouse of Barbara Loden?", "Which movies are directed by the spouse of Barbara Loden?", "Which movies were directed by the spouse of Barbara Loden?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Barbara_Loden> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Małgorzata Braunek?", "What was directed by the spouse of Małgorzata Braunek?", "Which movie is directed by the spouse of Małgorzata Braunek?", "Which movie was directed by the spouse of Małgorzata Braunek?", "Which movies are directed by the spouse of Małgorzata Braunek?", "Which movies were directed by the spouse of Małgorzata Braunek?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Małgorzata_Braunek> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Rima Horton?", "What was directed by the spouse of Rima Horton?", "Which movie is directed by the spouse of Rima Horton?", "Which movie was directed by the spouse of Rima Horton?", "Which movies are directed by the spouse of Rima Horton?", "Which movies were directed by the spouse of Rima Horton?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rima_Horton> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lisa Hoffman?", "What was directed by the spouse of Lisa Hoffman?", "Which movie is directed by the spouse of Lisa Hoffman?", "Which movie was directed by the spouse of Lisa Hoffman?", "Which movies are directed by the spouse of Lisa Hoffman?", "Which movies were directed by the spouse of Lisa Hoffman?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Hoffman> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Carey Lowell?", "What was directed by the spouse of Carey Lowell?", "Which movie is directed by the spouse of Carey Lowell?", "Which movie was directed by the spouse of Carey Lowell?", "Which movies are directed by the spouse of Carey Lowell?", "Which movies were directed by the spouse of Carey Lowell?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carey_Lowell> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Rita Wilson?", "What was directed by the spouse of Rita Wilson?", "Which movie is directed by the spouse of Rita Wilson?", "Which movie was directed by the spouse of Rita Wilson?", "Which movies are directed by the spouse of Rita Wilson?", "Which movies were directed by the spouse of Rita Wilson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rita_Wilson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Katherine DeMille?", "What was directed by the spouse of Katherine DeMille?", "Which movie is directed by the spouse of Katherine DeMille?", "Which movie was directed by the spouse of Katherine DeMille?", "Which movies are directed by the spouse of Katherine DeMille?", "Which movies were directed by the spouse of Katherine DeMille?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Katherine_DeMille> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Nicoletta Braschi?", "What was directed by the spouse of Nicoletta Braschi?", "Which movie is directed by the spouse of Nicoletta Braschi?", "Which movie was directed by the spouse of Nicoletta Braschi?", "Which movies are directed by the spouse of Nicoletta Braschi?", "Which movies were directed by the spouse of Nicoletta Braschi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nicoletta_Braschi> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Justin Theroux?", "What was directed by the spouse of Justin Theroux?", "Which movie is directed by the spouse of Justin Theroux?", "Which movie was directed by the spouse of Justin Theroux?", "Which movies are directed by the spouse of Justin Theroux?", "Which movies were directed by the spouse of Justin Theroux?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Justin_Theroux> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Helene Thimig?", "What was directed by the spouse of Helene Thimig?", "Which movie is directed by the spouse of Helene Thimig?", "Which movie was directed by the spouse of Helene Thimig?", "Which movies are directed by the spouse of Helene Thimig?", "Which movies were directed by the spouse of Helene Thimig?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Helene_Thimig> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Jane Wenham (actress)?", "What was directed by the spouse of Jane Wenham (actress)?", "Which movie is directed by the spouse of Jane Wenham (actress)?", "Which movie was directed by the spouse of Jane Wenham (actress)?", "Which movies are directed by the spouse of Jane Wenham (actress)?", "Which movies were directed by the spouse of Jane Wenham (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jane_Wenham_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Donna Dixon?", "What was directed by the spouse of Donna Dixon?", "Which movie is directed by the spouse of Donna Dixon?", "Which movie was directed by the spouse of Donna Dixon?", "Which movies are directed by the spouse of Donna Dixon?", "Which movies were directed by the spouse of Donna Dixon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Donna_Dixon> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Tutte Lemkow?", "What was directed by the spouse of Tutte Lemkow?", "Which movie is directed by the spouse of Tutte Lemkow?", "Which movie was directed by the spouse of Tutte Lemkow?", "Which movies are directed by the spouse of Tutte Lemkow?", "Which movies were directed by the spouse of Tutte Lemkow?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tutte_Lemkow> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Dina Eastwood?", "What was directed by the spouse of Dina Eastwood?", "Which movie is directed by the spouse of Dina Eastwood?", "Which movie was directed by the spouse of Dina Eastwood?", "Which movies are directed by the spouse of Dina Eastwood?", "Which movies were directed by the spouse of Dina Eastwood?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dina_Eastwood> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lila Lee?", "What was directed by the spouse of Lila Lee?", "Which movie is directed by the spouse of Lila Lee?", "Which movie was directed by the spouse of Lila Lee?", "Which movies are directed by the spouse of Lila Lee?", "Which movies were directed by the spouse of Lila Lee?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lila_Lee> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Clyde Klotz?", "What was directed by the spouse of Clyde Klotz?", "Which movie is directed by the spouse of Clyde Klotz?", "Which movie was directed by the spouse of Clyde Klotz?", "Which movies are directed by the spouse of Clyde Klotz?", "Which movies were directed by the spouse of Clyde Klotz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clyde_Klotz> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Ronee Blakley?", "What was directed by the spouse of Ronee Blakley?", "Which movie is directed by the spouse of Ronee Blakley?", "Which movie was directed by the spouse of Ronee Blakley?", "Which movies are directed by the spouse of Ronee Blakley?", "Which movies were directed by the spouse of Ronee Blakley?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ronee_Blakley> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Wendy Stites?", "What was directed by the spouse of Wendy Stites?", "Which movie is directed by the spouse of Wendy Stites?", "Which movie was directed by the spouse of Wendy Stites?", "Which movies are directed by the spouse of Wendy Stites?", "Which movies were directed by the spouse of Wendy Stites?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wendy_Stites> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Giuditta Rissone?", "What was directed by the spouse of Giuditta Rissone?", "Which movie is directed by the spouse of Giuditta Rissone?", "Which movie was directed by the spouse of Giuditta Rissone?", "Which movies are directed by the spouse of Giuditta Rissone?", "Which movies were directed by the spouse of Giuditta Rissone?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Giuditta_Rissone> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Martha Stewart (actress)?", "What was directed by the spouse of Martha Stewart (actress)?", "Which movie is directed by the spouse of Martha Stewart (actress)?", "Which movie was directed by the spouse of Martha Stewart (actress)?", "Which movies are directed by the spouse of Martha Stewart (actress)?", "Which movies were directed by the spouse of Martha Stewart (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Martha_Stewart_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Anne Byrne (actress)?", "What was directed by the spouse of Anne Byrne (actress)?", "Which movie is directed by the spouse of Anne Byrne (actress)?", "Which movie was directed by the spouse of Anne Byrne (actress)?", "Which movies are directed by the spouse of Anne Byrne (actress)?", "Which movies were directed by the spouse of Anne Byrne (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anne_Byrne_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Kiran Juneja?", "What was directed by the spouse of Kiran Juneja?", "Which movie is directed by the spouse of Kiran Juneja?", "Which movie was directed by the spouse of Kiran Juneja?", "Which movies are directed by the spouse of Kiran Juneja?", "Which movies were directed by the spouse of Kiran Juneja?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Kiran_Juneja> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Amy Holden Jones?", "What was directed by the spouse of Amy Holden Jones?", "Which movie is directed by the spouse of Amy Holden Jones?", "Which movie was directed by the spouse of Amy Holden Jones?", "Which movies are directed by the spouse of Amy Holden Jones?", "Which movies were directed by the spouse of Amy Holden Jones?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Amy_Holden_Jones> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Carl Koch (director)?", "What was directed by the spouse of Carl Koch (director)?", "Which movie is directed by the spouse of Carl Koch (director)?", "Which movie was directed by the spouse of Carl Koch (director)?", "Which movies are directed by the spouse of Carl Koch (director)?", "Which movies were directed by the spouse of Carl Koch (director)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Carl_Koch_(director)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Gauri Shinde?", "What was directed by the spouse of Gauri Shinde?", "Which movie is directed by the spouse of Gauri Shinde?", "Which movie was directed by the spouse of Gauri Shinde?", "Which movies are directed by the spouse of Gauri Shinde?", "Which movies were directed by the spouse of Gauri Shinde?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gauri_Shinde> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Sonam (actress)?", "What was directed by the spouse of Sonam (actress)?", "Which movie is directed by the spouse of Sonam (actress)?", "Which movie was directed by the spouse of Sonam (actress)?", "Which movies are directed by the spouse of Sonam (actress)?", "Which movies were directed by the spouse of Sonam (actress)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sonam_(actress)> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Zhao Tao?", "What was directed by the spouse of Zhao Tao?", "Which movie is directed by the spouse of Zhao Tao?", "Which movie was directed by the spouse of Zhao Tao?", "Which movies are directed by the spouse of Zhao Tao?", "Which movies were directed by the spouse of Zhao Tao?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zhao_Tao> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Pawan Kalyan?", "What was directed by the spouse of Pawan Kalyan?", "Which movie is directed by the spouse of Pawan Kalyan?", "Which movie was directed by the spouse of Pawan Kalyan?", "Which movies are directed by the spouse of Pawan Kalyan?", "Which movies were directed by the spouse of Pawan Kalyan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pawan_Kalyan> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Senta Berger?", "What was directed by the spouse of Senta Berger?", "Which movie is directed by the spouse of Senta Berger?", "Which movie was directed by the spouse of Senta Berger?", "Which movies are directed by the spouse of Senta Berger?", "Which movies were directed by the spouse of Senta Berger?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Senta_Berger> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Susan Harris?", "What was directed by the spouse of Susan Harris?", "Which movie is directed by the spouse of Susan Harris?", "Which movie was directed by the spouse of Susan Harris?", "Which movies are directed by the spouse of Susan Harris?", "Which movies were directed by the spouse of Susan Harris?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Susan_Harris> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Miklós Jancsó?", "What was directed by the spouse of Miklós Jancsó?", "Which movie is directed by the spouse of Miklós Jancsó?", "Which movie was directed by the spouse of Miklós Jancsó?", "Which movies are directed by the spouse of Miklós Jancsó?", "Which movies were directed by the spouse of Miklós Jancsó?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Miklós_Jancsó> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Clara Kimball Young?", "What was directed by the spouse of Clara Kimball Young?", "Which movie is directed by the spouse of Clara Kimball Young?", "Which movie was directed by the spouse of Clara Kimball Young?", "Which movies are directed by the spouse of Clara Kimball Young?", "Which movies were directed by the spouse of Clara Kimball Young?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Clara_Kimball_Young> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Dorothy Hyson?", "What was directed by the spouse of Dorothy Hyson?", "Which movie is directed by the spouse of Dorothy Hyson?", "Which movie was directed by the spouse of Dorothy Hyson?", "Which movies are directed by the spouse of Dorothy Hyson?", "Which movies were directed by the spouse of Dorothy Hyson?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Dorothy_Hyson> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Joseph Bologna?", "What was directed by the spouse of Joseph Bologna?", "Which movie is directed by the spouse of Joseph Bologna?", "Which movie was directed by the spouse of Joseph Bologna?", "Which movies are directed by the spouse of Joseph Bologna?", "Which movies were directed by the spouse of Joseph Bologna?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joseph_Bologna> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lisa Joy?", "What was directed by the spouse of Lisa Joy?", "Which movie is directed by the spouse of Lisa Joy?", "Which movie was directed by the spouse of Lisa Joy?", "Which movies are directed by the spouse of Lisa Joy?", "Which movies were directed by the spouse of Lisa Joy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lisa_Joy> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Cláudia Ohana?", "What was directed by the spouse of Cláudia Ohana?", "Which movie is directed by the spouse of Cláudia Ohana?", "Which movie was directed by the spouse of Cláudia Ohana?", "Which movies are directed by the spouse of Cláudia Ohana?", "Which movies were directed by the spouse of Cláudia Ohana?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Cláudia_Ohana> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Judy Goffman Cutler?", "What was directed by the spouse of Judy Goffman Cutler?", "Which movie is directed by the spouse of Judy Goffman Cutler?", "Which movie was directed by the spouse of Judy Goffman Cutler?", "Which movies are directed by the spouse of Judy Goffman Cutler?", "Which movies were directed by the spouse of Judy Goffman Cutler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Judy_Goffman_Cutler> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Laurence S. Cutler?", "What was directed by the spouse of Laurence S. Cutler?", "Which movie is directed by the spouse of Laurence S. Cutler?", "Which movie was directed by the spouse of Laurence S. Cutler?", "Which movies are directed by the spouse of Laurence S. Cutler?", "Which movies were directed by the spouse of Laurence S. Cutler?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Laurence_S._Cutler> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by the spouse of Lorenda Starfelt?", "What was directed by the spouse of Lorenda Starfelt?", "Which movie is directed by the spouse of Lorenda Starfelt?", "Which movie was directed by the spouse of Lorenda Starfelt?", "Which movies are directed by the spouse of Lorenda Starfelt?", "Which movies were directed by the spouse of Lorenda Starfelt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lorenda_Starfelt> <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1940-04-25?", "What was directed by persons born by 1940-04-25?", "Which movie is directed by persons born by 1940-04-25?", "Which movie was directed by persons born by 1940-04-25?", "Which movies are directed by persons born by 1940-04-25?", "Which movies were directed by persons born by 1940-04-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1940-04-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1946-02-21?", "What was directed by persons born by 1946-02-21?", "Which movie is directed by persons born by 1946-02-21?", "Which movie was directed by persons born by 1946-02-21?", "Which movies are directed by persons born by 1946-02-21?", "Which movies were directed by persons born by 1946-02-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1946-02-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1936-05-09?", "What was directed by persons born by 1936-05-09?", "Which movie is directed by persons born by 1936-05-09?", "Which movie was directed by persons born by 1936-05-09?", "Which movies are directed by persons born by 1936-05-09?", "Which movies were directed by persons born by 1936-05-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1936-05-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1954-12-15?", "What was directed by persons born by 1954-12-15?", "Which movie is directed by persons born by 1954-12-15?", "Which movie was directed by persons born by 1954-12-15?", "Which movies are directed by persons born by 1954-12-15?", "Which movies were directed by persons born by 1954-12-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1954-12-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1926-03-06?", "What was directed by persons born by 1926-03-06?", "Which movie is directed by persons born by 1926-03-06?", "Which movie was directed by persons born by 1926-03-06?", "Which movies are directed by persons born by 1926-03-06?", "Which movies were directed by persons born by 1926-03-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1926-03-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1940-11-22?", "What was directed by persons born by 1940-11-22?", "Which movie is directed by persons born by 1940-11-22?", "Which movie was directed by persons born by 1940-11-22?", "Which movies are directed by persons born by 1940-11-22?", "Which movies were directed by persons born by 1940-11-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1901-11-03?", "What was directed by persons born by 1901-11-03?", "Which movie is directed by persons born by 1901-11-03?", "Which movie was directed by persons born by 1901-11-03?", "Which movies are directed by persons born by 1901-11-03?", "Which movies were directed by persons born by 1901-11-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1901-11-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1915-04-21?", "What was directed by persons born by 1915-04-21?", "Which movie is directed by persons born by 1915-04-21?", "Which movie was directed by persons born by 1915-04-21?", "Which movies are directed by persons born by 1915-04-21?", "Which movies were directed by persons born by 1915-04-21?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1915-04-21\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1960-08-10?", "What was directed by persons born by 1960-08-10?", "Which movie is directed by persons born by 1960-08-10?", "Which movie was directed by persons born by 1960-08-10?", "Which movies are directed by persons born by 1960-08-10?", "Which movies were directed by persons born by 1960-08-10?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1960-08-10\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1968-04-19?", "What was directed by persons born by 1968-04-19?", "Which movie is directed by persons born by 1968-04-19?", "Which movie was directed by persons born by 1968-04-19?", "Which movies are directed by persons born by 1968-04-19?", "Which movies were directed by persons born by 1968-04-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1968-04-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1959-05-03?", "What was directed by persons born by 1959-05-03?", "Which movie is directed by persons born by 1959-05-03?", "Which movie was directed by persons born by 1959-05-03?", "Which movies are directed by persons born by 1959-05-03?", "Which movies were directed by persons born by 1959-05-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1959-05-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1940-03-16?", "What was directed by persons born by 1940-03-16?", "Which movie is directed by persons born by 1940-03-16?", "Which movie was directed by persons born by 1940-03-16?", "Which movies are directed by persons born by 1940-03-16?", "Which movies were directed by persons born by 1940-03-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1940-03-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1961-12-16?", "What was directed by persons born by 1961-12-16?", "Which movie is directed by persons born by 1961-12-16?", "Which movie was directed by persons born by 1961-12-16?", "Which movies are directed by persons born by 1961-12-16?", "Which movies were directed by persons born by 1961-12-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1961-12-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1906-06-22?", "What was directed by persons born by 1906-06-22?", "Which movie is directed by persons born by 1906-06-22?", "Which movie was directed by persons born by 1906-06-22?", "Which movies are directed by persons born by 1906-06-22?", "Which movies were directed by persons born by 1906-06-22?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1906-06-22\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1922-07-26?", "What was directed by persons born by 1922-07-26?", "Which movie is directed by persons born by 1922-07-26?", "Which movie was directed by persons born by 1922-07-26?", "Which movies are directed by persons born by 1922-07-26?", "Which movies were directed by persons born by 1922-07-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1922-07-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1940-11-27?", "What was directed by persons born by 1940-11-27?", "Which movie is directed by persons born by 1940-11-27?", "Which movie was directed by persons born by 1940-11-27?", "Which movies are directed by persons born by 1940-11-27?", "Which movies were directed by persons born by 1940-11-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1940-11-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1895-10-04?", "What was directed by persons born by 1895-10-04?", "Which movie is directed by persons born by 1895-10-04?", "Which movie was directed by persons born by 1895-10-04?", "Which movies are directed by persons born by 1895-10-04?", "Which movies were directed by persons born by 1895-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1895-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1902-09-20?", "What was directed by persons born by 1902-09-20?", "Which movie is directed by persons born by 1902-09-20?", "Which movie was directed by persons born by 1902-09-20?", "Which movies are directed by persons born by 1902-09-20?", "Which movies were directed by persons born by 1902-09-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1902-09-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1923-10-04?", "What was directed by persons born by 1923-10-04?", "Which movie is directed by persons born by 1923-10-04?", "Which movie was directed by persons born by 1923-10-04?", "Which movies are directed by persons born by 1923-10-04?", "Which movies were directed by persons born by 1923-10-04?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1923-10-04\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1930-05-31?", "What was directed by persons born by 1930-05-31?", "Which movie is directed by persons born by 1930-05-31?", "Which movie was directed by persons born by 1930-05-31?", "Which movies are directed by persons born by 1930-05-31?", "Which movies were directed by persons born by 1930-05-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1930-05-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1952-07-01?", "What was directed by persons born by 1952-07-01?", "Which movie is directed by persons born by 1952-07-01?", "Which movie was directed by persons born by 1952-07-01?", "Which movies are directed by persons born by 1952-07-01?", "Which movies were directed by persons born by 1952-07-01?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1952-07-01\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1912-10-26?", "What was directed by persons born by 1912-10-26?", "Which movie is directed by persons born by 1912-10-26?", "Which movie was directed by persons born by 1912-10-26?", "Which movies are directed by persons born by 1912-10-26?", "Which movies were directed by persons born by 1912-10-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1912-10-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1937-08-08?", "What was directed by persons born by 1937-08-08?", "Which movie is directed by persons born by 1937-08-08?", "Which movie was directed by persons born by 1937-08-08?", "Which movies are directed by persons born by 1937-08-08?", "Which movies were directed by persons born by 1937-08-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1937-08-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1909-09-07?", "What was directed by persons born by 1909-09-07?", "Which movie is directed by persons born by 1909-09-07?", "Which movie was directed by persons born by 1909-09-07?", "Which movies are directed by persons born by 1909-09-07?", "Which movies were directed by persons born by 1909-09-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1909-09-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1943-03-29?", "What was directed by persons born by 1943-03-29?", "Which movie is directed by persons born by 1943-03-29?", "Which movie was directed by persons born by 1943-03-29?", "Which movies are directed by persons born by 1943-03-29?", "Which movies were directed by persons born by 1943-03-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1943-03-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1923-02-12?", "What was directed by persons born by 1923-02-12?", "Which movie is directed by persons born by 1923-02-12?", "Which movie was directed by persons born by 1923-02-12?", "Which movies are directed by persons born by 1923-02-12?", "Which movies were directed by persons born by 1923-02-12?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1923-02-12\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1880-12-31?", "What was directed by persons born by 1880-12-31?", "Which movie is directed by persons born by 1880-12-31?", "Which movie was directed by persons born by 1880-12-31?", "Which movies are directed by persons born by 1880-12-31?", "Which movies were directed by persons born by 1880-12-31?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1880-12-31\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1936-03-07?", "What was directed by persons born by 1936-03-07?", "Which movie is directed by persons born by 1936-03-07?", "Which movie was directed by persons born by 1936-03-07?", "Which movies are directed by persons born by 1936-03-07?", "Which movies were directed by persons born by 1936-03-07?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1936-03-07\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1968-08-09?", "What was directed by persons born by 1968-08-09?", "Which movie is directed by persons born by 1968-08-09?", "Which movie was directed by persons born by 1968-08-09?", "Which movies are directed by persons born by 1968-08-09?", "Which movies were directed by persons born by 1968-08-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1968-08-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1940-03-29?", "What was directed by persons born by 1940-03-29?", "Which movie is directed by persons born by 1940-03-29?", "Which movie was directed by persons born by 1940-03-29?", "Which movies are directed by persons born by 1940-03-29?", "Which movies were directed by persons born by 1940-03-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1940-03-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1948-12-27?", "What was directed by persons born by 1948-12-27?", "Which movie is directed by persons born by 1948-12-27?", "Which movie was directed by persons born by 1948-12-27?", "Which movies are directed by persons born by 1948-12-27?", "Which movies were directed by persons born by 1948-12-27?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1948-12-27\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1888-04-06?", "What was directed by persons born by 1888-04-06?", "Which movie is directed by persons born by 1888-04-06?", "Which movie was directed by persons born by 1888-04-06?", "Which movies are directed by persons born by 1888-04-06?", "Which movies were directed by persons born by 1888-04-06?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1888-04-06\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1961-05-30?", "What was directed by persons born by 1961-05-30?", "Which movie is directed by persons born by 1961-05-30?", "Which movie was directed by persons born by 1961-05-30?", "Which movies are directed by persons born by 1961-05-30?", "Which movies were directed by persons born by 1961-05-30?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1961-05-30\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1874-03-24?", "What was directed by persons born by 1874-03-24?", "Which movie is directed by persons born by 1874-03-24?", "Which movie was directed by persons born by 1874-03-24?", "Which movies are directed by persons born by 1874-03-24?", "Which movies were directed by persons born by 1874-03-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1874-03-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1963-06-15?", "What was directed by persons born by 1963-06-15?", "Which movie is directed by persons born by 1963-06-15?", "Which movie was directed by persons born by 1963-06-15?", "Which movies are directed by persons born by 1963-06-15?", "Which movies were directed by persons born by 1963-06-15?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1963-06-15\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1969-02-11?", "What was directed by persons born by 1969-02-11?", "Which movie is directed by persons born by 1969-02-11?", "Which movie was directed by persons born by 1969-02-11?", "Which movies are directed by persons born by 1969-02-11?", "Which movies were directed by persons born by 1969-02-11?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1969-02-11\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1970-08-20?", "What was directed by persons born by 1970-08-20?", "Which movie is directed by persons born by 1970-08-20?", "Which movie was directed by persons born by 1970-08-20?", "Which movies are directed by persons born by 1970-08-20?", "Which movies were directed by persons born by 1970-08-20?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1970-08-20\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1948-01-16?", "What was directed by persons born by 1948-01-16?", "Which movie is directed by persons born by 1948-01-16?", "Which movie was directed by persons born by 1948-01-16?", "Which movies are directed by persons born by 1948-01-16?", "Which movies were directed by persons born by 1948-01-16?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1948-01-16\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1906-08-05?", "What was directed by persons born by 1906-08-05?", "Which movie is directed by persons born by 1906-08-05?", "Which movie was directed by persons born by 1906-08-05?", "Which movies are directed by persons born by 1906-08-05?", "Which movies were directed by persons born by 1906-08-05?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1906-08-05\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1978-05-11?", "What was directed by persons born by 1978-05-11?", "Which movie is directed by persons born by 1978-05-11?", "Which movie was directed by persons born by 1978-05-11?", "Which movies are directed by persons born by 1978-05-11?", "Which movies were directed by persons born by 1978-05-11?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1978-05-11\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1928-02-25?", "What was directed by persons born by 1928-02-25?", "Which movie is directed by persons born by 1928-02-25?", "Which movie was directed by persons born by 1928-02-25?", "Which movies are directed by persons born by 1928-02-25?", "Which movies were directed by persons born by 1928-02-25?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1928-02-25\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1931-03-26?", "What was directed by persons born by 1931-03-26?", "Which movie is directed by persons born by 1931-03-26?", "Which movie was directed by persons born by 1931-03-26?", "Which movies are directed by persons born by 1931-03-26?", "Which movies were directed by persons born by 1931-03-26?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1931-03-26\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1963-09-29?", "What was directed by persons born by 1963-09-29?", "Which movie is directed by persons born by 1963-09-29?", "Which movie was directed by persons born by 1963-09-29?", "Which movies are directed by persons born by 1963-09-29?", "Which movies were directed by persons born by 1963-09-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1963-09-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1959-03-18?", "What was directed by persons born by 1959-03-18?", "Which movie is directed by persons born by 1959-03-18?", "Which movie was directed by persons born by 1959-03-18?", "Which movies are directed by persons born by 1959-03-18?", "Which movies were directed by persons born by 1959-03-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1959-03-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1906-11-02?", "What was directed by persons born by 1906-11-02?", "Which movie is directed by persons born by 1906-11-02?", "Which movie was directed by persons born by 1906-11-02?", "Which movies are directed by persons born by 1906-11-02?", "Which movies were directed by persons born by 1906-11-02?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1906-11-02\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1925-05-24?", "What was directed by persons born by 1925-05-24?", "Which movie is directed by persons born by 1925-05-24?", "Which movie was directed by persons born by 1925-05-24?", "Which movies are directed by persons born by 1925-05-24?", "Which movies were directed by persons born by 1925-05-24?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1925-05-24\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1890-12-13?", "What was directed by persons born by 1890-12-13?", "Which movie is directed by persons born by 1890-12-13?", "Which movie was directed by persons born by 1890-12-13?", "Which movies are directed by persons born by 1890-12-13?", "Which movies were directed by persons born by 1890-12-13?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1890-12-13\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1934-07-08?", "What was directed by persons born by 1934-07-08?", "Which movie is directed by persons born by 1934-07-08?", "Which movie was directed by persons born by 1934-07-08?", "Which movies are directed by persons born by 1934-07-08?", "Which movies were directed by persons born by 1934-07-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1934-07-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1873-09-09?", "What was directed by persons born by 1873-09-09?", "Which movie is directed by persons born by 1873-09-09?", "Which movie was directed by persons born by 1873-09-09?", "Which movies are directed by persons born by 1873-09-09?", "Which movies were directed by persons born by 1873-09-09?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1873-09-09\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1961-11-19?", "What was directed by persons born by 1961-11-19?", "Which movie is directed by persons born by 1961-11-19?", "Which movie was directed by persons born by 1961-11-19?", "Which movies are directed by persons born by 1961-11-19?", "Which movies were directed by persons born by 1961-11-19?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1961-11-19\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1956-01-03?", "What was directed by persons born by 1956-01-03?", "Which movie is directed by persons born by 1956-01-03?", "Which movie was directed by persons born by 1956-01-03?", "Which movies are directed by persons born by 1956-01-03?", "Which movies were directed by persons born by 1956-01-03?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1956-01-03\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1912-09-29?", "What was directed by persons born by 1912-09-29?", "Which movie is directed by persons born by 1912-09-29?", "Which movie was directed by persons born by 1912-09-29?", "Which movies are directed by persons born by 1912-09-29?", "Which movies were directed by persons born by 1912-09-29?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1912-09-29\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1945-03-08?", "What was directed by persons born by 1945-03-08?", "Which movie is directed by persons born by 1945-03-08?", "Which movie was directed by persons born by 1945-03-08?", "Which movies are directed by persons born by 1945-03-08?", "Which movies were directed by persons born by 1945-03-08?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1945-03-08\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "FILM",
    "frameType" : "APP",
    "sentences" : [ "What is directed by persons born by 1932-02-18?", "What was directed by persons born by 1932-02-18?", "Which movie is directed by persons born by 1932-02-18?", "Which movie was directed by persons born by 1932-02-18?", "Which movies are directed by persons born by 1932-02-18?", "Which movies were directed by persons born by 1932-02-18?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/birthDate> \"1932-02-18\")\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Aurelian?", "What was born by the birth date of Aurelian?", "Which person is born by the birth date of Aurelian?", "Which person was born by the birth date of Aurelian?", "Which persons are born by the birth date of Aurelian?", "Which persons were born by the birth date of Aurelian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Aurelian> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Averroes?", "What was born by the birth date of Averroes?", "Which person is born by the birth date of Averroes?", "Which person was born by the birth date of Averroes?", "Which persons are born by the birth date of Averroes?", "Which persons were born by the birth date of Averroes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Averroes> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Commodus?", "What was born by the birth date of Commodus?", "Which person is born by the birth date of Commodus?", "Which person was born by the birth date of Commodus?", "Which persons are born by the birth date of Commodus?", "Which persons were born by the birth date of Commodus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Commodus> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Edmund Rich?", "What was born by the birth date of Edmund Rich?", "Which person is born by the birth date of Edmund Rich?", "Which person was born by the birth date of Edmund Rich?", "Which persons are born by the birth date of Edmund Rich?", "Which persons were born by the birth date of Edmund Rich?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Edmund_Rich> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Go-Daigo?", "What was born by the birth date of Emperor Go-Daigo?", "Which person is born by the birth date of Emperor Go-Daigo?", "Which person was born by the birth date of Emperor Go-Daigo?", "Which persons are born by the birth date of Emperor Go-Daigo?", "Which persons were born by the birth date of Emperor Go-Daigo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Go-Daigo> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Go-Ichijō?", "What was born by the birth date of Emperor Go-Ichijō?", "Which person is born by the birth date of Emperor Go-Ichijō?", "Which person was born by the birth date of Emperor Go-Ichijō?", "Which persons are born by the birth date of Emperor Go-Ichijō?", "Which persons were born by the birth date of Emperor Go-Ichijō?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Go-Ichijō> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Go-Uda?", "What was born by the birth date of Emperor Go-Uda?", "Which person is born by the birth date of Emperor Go-Uda?", "Which person was born by the birth date of Emperor Go-Uda?", "Which persons are born by the birth date of Emperor Go-Uda?", "Which persons were born by the birth date of Emperor Go-Uda?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Go-Uda> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Juntoku?", "What was born by the birth date of Emperor Juntoku?", "Which person is born by the birth date of Emperor Juntoku?", "Which person was born by the birth date of Emperor Juntoku?", "Which persons are born by the birth date of Emperor Juntoku?", "Which persons were born by the birth date of Emperor Juntoku?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Juntoku> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Gian Galeazzo Visconti?", "What was born by the birth date of Gian Galeazzo Visconti?", "Which person is born by the birth date of Gian Galeazzo Visconti?", "Which person was born by the birth date of Gian Galeazzo Visconti?", "Which persons are born by the birth date of Gian Galeazzo Visconti?", "Which persons were born by the birth date of Gian Galeazzo Visconti?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gian_Galeazzo_Visconti> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Gregory of Tours?", "What was born by the birth date of Gregory of Tours?", "Which person is born by the birth date of Gregory of Tours?", "Which person was born by the birth date of Gregory of Tours?", "Which persons are born by the birth date of Gregory of Tours?", "Which persons were born by the birth date of Gregory of Tours?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Gregory_of_Tours> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of History of Portugal?", "What was born by the birth date of History of Portugal?", "Which person is born by the birth date of History of Portugal?", "Which person was born by the birth date of History of Portugal?", "Which persons are born by the birth date of History of Portugal?", "Which persons were born by the birth date of History of Portugal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/History_of_Portugal> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of James I of Scotland?", "What was born by the birth date of James I of Scotland?", "Which person is born by the birth date of James I of Scotland?", "Which person was born by the birth date of James I of Scotland?", "Which persons are born by the birth date of James I of Scotland?", "Which persons were born by the birth date of James I of Scotland?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/James_I_of_Scotland> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John of Bohemia?", "What was born by the birth date of John of Bohemia?", "Which person is born by the birth date of John of Bohemia?", "Which person was born by the birth date of John of Bohemia?", "Which persons are born by the birth date of John of Bohemia?", "Which persons were born by the birth date of John of Bohemia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_of_Bohemia> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John of Gaunt?", "What was born by the birth date of John of Gaunt?", "Which person is born by the birth date of John of Gaunt?", "Which person was born by the birth date of John of Gaunt?", "Which persons are born by the birth date of John of Gaunt?", "Which persons were born by the birth date of John of Gaunt?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_of_Gaunt> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Lothair II, Holy Roman Emperor?", "What was born by the birth date of Lothair II, Holy Roman Emperor?", "Which person is born by the birth date of Lothair II, Holy Roman Emperor?", "Which person was born by the birth date of Lothair II, Holy Roman Emperor?", "Which persons are born by the birth date of Lothair II, Holy Roman Emperor?", "Which persons were born by the birth date of Lothair II, Holy Roman Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lothair_II,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Louis I of Hungary?", "What was born by the birth date of Louis I of Hungary?", "Which person is born by the birth date of Louis I of Hungary?", "Which person was born by the birth date of Louis I of Hungary?", "Which persons are born by the birth date of Louis I of Hungary?", "Which persons were born by the birth date of Louis I of Hungary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_I_of_Hungary> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Manuel I Komnenos?", "What was born by the birth date of Manuel I Komnenos?", "Which person is born by the birth date of Manuel I Komnenos?", "Which person was born by the birth date of Manuel I Komnenos?", "Which persons are born by the birth date of Manuel I Komnenos?", "Which persons were born by the birth date of Manuel I Komnenos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Manuel_I_Komnenos> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Margaret, Maid of Norway?", "What was born by the birth date of Margaret, Maid of Norway?", "Which person is born by the birth date of Margaret, Maid of Norway?", "Which person was born by the birth date of Margaret, Maid of Norway?", "Which persons are born by the birth date of Margaret, Maid of Norway?", "Which persons were born by the birth date of Margaret, Maid of Norway?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Margaret,_Maid_of_Norway> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Philippa of Hainault?", "What was born by the birth date of Philippa of Hainault?", "Which person is born by the birth date of Philippa of Hainault?", "Which person was born by the birth date of Philippa of Hainault?", "Which persons are born by the birth date of Philippa of Hainault?", "Which persons were born by the birth date of Philippa of Hainault?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philippa_of_Hainault> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Pope Gregory I?", "What was born by the birth date of Pope Gregory I?", "Which person is born by the birth date of Pope Gregory I?", "Which person was born by the birth date of Pope Gregory I?", "Which persons are born by the birth date of Pope Gregory I?", "Which persons were born by the birth date of Pope Gregory I?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Pope Nicholas IV?", "What was born by the birth date of Pope Nicholas IV?", "Which person is born by the birth date of Pope Nicholas IV?", "Which person was born by the birth date of Pope Nicholas IV?", "Which persons are born by the birth date of Pope Nicholas IV?", "Which persons were born by the birth date of Pope Nicholas IV?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Pope_Nicholas_IV> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Richard II of England?", "What was born by the birth date of Richard II of England?", "Which person is born by the birth date of Richard II of England?", "Which person was born by the birth date of Richard II of England?", "Which persons are born by the birth date of Richard II of England?", "Which persons were born by the birth date of Richard II of England?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_II_of_England> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Rudolf I of Germany?", "What was born by the birth date of Rudolf I of Germany?", "Which person is born by the birth date of Rudolf I of Germany?", "Which person was born by the birth date of Rudolf I of Germany?", "Which persons are born by the birth date of Rudolf I of Germany?", "Which persons were born by the birth date of Rudolf I of Germany?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rudolf_I_of_Germany> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Rupert, King of Germany?", "What was born by the birth date of Rupert, King of Germany?", "Which person is born by the birth date of Rupert, King of Germany?", "Which person was born by the birth date of Rupert, King of Germany?", "Which persons are born by the birth date of Rupert, King of Germany?", "Which persons were born by the birth date of Rupert, King of Germany?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rupert,_King_of_Germany> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Saint Nicholas?", "What was born by the birth date of Saint Nicholas?", "Which person is born by the birth date of Saint Nicholas?", "Which person was born by the birth date of Saint Nicholas?", "Which persons are born by the birth date of Saint Nicholas?", "Which persons were born by the birth date of Saint Nicholas?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saint_Nicholas> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Sima Guang?", "What was born by the birth date of Sima Guang?", "Which person is born by the birth date of Sima Guang?", "Which person was born by the birth date of Sima Guang?", "Which persons are born by the birth date of Sima Guang?", "Which persons were born by the birth date of Sima Guang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sima_Guang> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Titus?", "What was born by the birth date of Titus?", "Which person is born by the birth date of Titus?", "Which person was born by the birth date of Titus?", "Which persons are born by the birth date of Titus?", "Which persons were born by the birth date of Titus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Titus> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Ulugh Beg?", "What was born by the birth date of Ulugh Beg?", "Which person is born by the birth date of Ulugh Beg?", "Which person was born by the birth date of Ulugh Beg?", "Which persons are born by the birth date of Ulugh Beg?", "Which persons were born by the birth date of Ulugh Beg?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ulugh_Beg> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Vespasian?", "What was born by the birth date of Vespasian?", "Which person is born by the birth date of Vespasian?", "Which person was born by the birth date of Vespasian?", "Which persons are born by the birth date of Vespasian?", "Which persons were born by the birth date of Vespasian?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vespasian> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Vitellius?", "What was born by the birth date of Vitellius?", "Which person is born by the birth date of Vitellius?", "Which person was born by the birth date of Vitellius?", "Which persons are born by the birth date of Vitellius?", "Which persons were born by the birth date of Vitellius?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Vitellius> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Wenceslaus IV of Bohemia?", "What was born by the birth date of Wenceslaus IV of Bohemia?", "Which person is born by the birth date of Wenceslaus IV of Bohemia?", "Which person was born by the birth date of Wenceslaus IV of Bohemia?", "Which persons are born by the birth date of Wenceslaus IV of Bohemia?", "Which persons were born by the birth date of Wenceslaus IV of Bohemia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Wenceslaus_IV_of_Bohemia> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Humphrey, Duke of Gloucester?", "What was born by the birth date of Humphrey, Duke of Gloucester?", "Which person is born by the birth date of Humphrey, Duke of Gloucester?", "Which person was born by the birth date of Humphrey, Duke of Gloucester?", "Which persons are born by the birth date of Humphrey, Duke of Gloucester?", "Which persons were born by the birth date of Humphrey, Duke of Gloucester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Humphrey,_Duke_of_Gloucester> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Josef Wagner (cyclist)?", "What was born by the birth date of Josef Wagner (cyclist)?", "Which person is born by the birth date of Josef Wagner (cyclist)?", "Which person was born by the birth date of Josef Wagner (cyclist)?", "Which persons are born by the birth date of Josef Wagner (cyclist)?", "Which persons were born by the birth date of Josef Wagner (cyclist)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Josef_Wagner_(cyclist)> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Malo (saint)?", "What was born by the birth date of Malo (saint)?", "Which person is born by the birth date of Malo (saint)?", "Which person was born by the birth date of Malo (saint)?", "Which persons are born by the birth date of Malo (saint)?", "Which persons were born by the birth date of Malo (saint)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Malo_(saint)> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Muhammad al-Mahdi?", "What was born by the birth date of Muhammad al-Mahdi?", "Which person is born by the birth date of Muhammad al-Mahdi?", "Which person was born by the birth date of Muhammad al-Mahdi?", "Which persons are born by the birth date of Muhammad al-Mahdi?", "Which persons were born by the birth date of Muhammad al-Mahdi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Muhammad_al-Mahdi> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Nerva?", "What was born by the birth date of Nerva?", "Which person is born by the birth date of Nerva?", "Which person was born by the birth date of Nerva?", "Which persons are born by the birth date of Nerva?", "Which persons were born by the birth date of Nerva?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Nerva> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Philippa of Lancaster?", "What was born by the birth date of Philippa of Lancaster?", "Which person is born by the birth date of Philippa of Lancaster?", "Which person was born by the birth date of Philippa of Lancaster?", "Which persons are born by the birth date of Philippa of Lancaster?", "Which persons were born by the birth date of Philippa of Lancaster?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philippa_of_Lancaster> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Saint Maurus?", "What was born by the birth date of Saint Maurus?", "Which person is born by the birth date of Saint Maurus?", "Which person was born by the birth date of Saint Maurus?", "Which persons are born by the birth date of Saint Maurus?", "Which persons were born by the birth date of Saint Maurus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saint_Maurus> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Tiberius Gemellus?", "What was born by the birth date of Tiberius Gemellus?", "Which person is born by the birth date of Tiberius Gemellus?", "Which person was born by the birth date of Tiberius Gemellus?", "Which persons are born by the birth date of Tiberius Gemellus?", "Which persons were born by the birth date of Tiberius Gemellus?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Tiberius_Gemellus> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Zbigniew Oleśnicki (cardinal)?", "What was born by the birth date of Zbigniew Oleśnicki (cardinal)?", "Which person is born by the birth date of Zbigniew Oleśnicki (cardinal)?", "Which person was born by the birth date of Zbigniew Oleśnicki (cardinal)?", "Which persons are born by the birth date of Zbigniew Oleśnicki (cardinal)?", "Which persons were born by the birth date of Zbigniew Oleśnicki (cardinal)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zbigniew_Oleśnicki_(cardinal)> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Asmita Marwa?", "What was born by the birth date of Asmita Marwa?", "Which person is born by the birth date of Asmita Marwa?", "Which person was born by the birth date of Asmita Marwa?", "Which persons are born by the birth date of Asmita Marwa?", "Which persons were born by the birth date of Asmita Marwa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Asmita_Marwa> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Adolph I, Duke of Cleves?", "What was born by the birth date of Adolph I, Duke of Cleves?", "Which person is born by the birth date of Adolph I, Duke of Cleves?", "Which person was born by the birth date of Adolph I, Duke of Cleves?", "Which persons are born by the birth date of Adolph I, Duke of Cleves?", "Which persons were born by the birth date of Adolph I, Duke of Cleves?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Adolph_I,_Duke_of_Cleves> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Elizabeth Darcy, Countess of Ormond?", "What was born by the birth date of Elizabeth Darcy, Countess of Ormond?", "Which person is born by the birth date of Elizabeth Darcy, Countess of Ormond?", "Which person was born by the birth date of Elizabeth Darcy, Countess of Ormond?", "Which persons are born by the birth date of Elizabeth Darcy, Countess of Ormond?", "Which persons were born by the birth date of Elizabeth Darcy, Countess of Ormond?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_Darcy,_Countess_of_Ormond> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Xizong of Jin?", "What was born by the birth date of Emperor Xizong of Jin?", "Which person is born by the birth date of Emperor Xizong of Jin?", "Which person was born by the birth date of Emperor Xizong of Jin?", "Which persons are born by the birth date of Emperor Xizong of Jin?", "Which persons were born by the birth date of Emperor Xizong of Jin?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Xizong_of_Jin> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Xizong of Tang?", "What was born by the birth date of Emperor Xizong of Tang?", "Which person is born by the birth date of Emperor Xizong of Tang?", "Which person was born by the birth date of Emperor Xizong of Tang?", "Which persons are born by the birth date of Emperor Xizong of Tang?", "Which persons were born by the birth date of Emperor Xizong of Tang?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Xizong_of_Tang> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Fadrique Alfonso, Lord of Haro?", "What was born by the birth date of Fadrique Alfonso, Lord of Haro?", "Which person is born by the birth date of Fadrique Alfonso, Lord of Haro?", "Which person was born by the birth date of Fadrique Alfonso, Lord of Haro?", "Which persons are born by the birth date of Fadrique Alfonso, Lord of Haro?", "Which persons were born by the birth date of Fadrique Alfonso, Lord of Haro?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Fadrique_Alfonso,_Lord_of_Haro> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John of Matha?", "What was born by the birth date of John of Matha?", "Which person is born by the birth date of John of Matha?", "Which person was born by the birth date of John of Matha?", "Which persons are born by the birth date of John of Matha?", "Which persons were born by the birth date of John of Matha?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_of_Matha> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of K'inich Yo'nal Ahk II?", "What was born by the birth date of K'inich Yo'nal Ahk II?", "Which person is born by the birth date of K'inich Yo'nal Ahk II?", "Which person was born by the birth date of K'inich Yo'nal Ahk II?", "Which persons are born by the birth date of K'inich Yo'nal Ahk II?", "Which persons were born by the birth date of K'inich Yo'nal Ahk II?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/K'inich_Yo'nal_Ahk_II> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Saw Zein?", "What was born by the birth date of Saw Zein?", "Which person is born by the birth date of Saw Zein?", "Which person was born by the birth date of Saw Zein?", "Which persons are born by the birth date of Saw Zein?", "Which persons were born by the birth date of Saw Zein?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Saw_Zein> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Sviatopolk II of Kiev?", "What was born by the birth date of Sviatopolk II of Kiev?", "Which person is born by the birth date of Sviatopolk II of Kiev?", "Which person was born by the birth date of Sviatopolk II of Kiev?", "Which persons are born by the birth date of Sviatopolk II of Kiev?", "Which persons were born by the birth date of Sviatopolk II of Kiev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sviatopolk_II_of_Kiev> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Violant of Aragon?", "What was born by the birth date of Violant of Aragon?", "Which person is born by the birth date of Violant of Aragon?", "Which person was born by the birth date of Violant of Aragon?", "Which persons are born by the birth date of Violant of Aragon?", "Which persons were born by the birth date of Violant of Aragon?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Violant_of_Aragon> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of William Bardolf, 4th Baron Bardolf?", "What was born by the birth date of William Bardolf, 4th Baron Bardolf?", "Which person is born by the birth date of William Bardolf, 4th Baron Bardolf?", "Which person was born by the birth date of William Bardolf, 4th Baron Bardolf?", "Which persons are born by the birth date of William Bardolf, 4th Baron Bardolf?", "Which persons were born by the birth date of William Bardolf, 4th Baron Bardolf?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/William_Bardolf,_4th_Baron_Bardolf> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Zein Pun?", "What was born by the birth date of Zein Pun?", "Which person is born by the birth date of Zein Pun?", "Which person was born by the birth date of Zein Pun?", "Which persons are born by the birth date of Zein Pun?", "Which persons were born by the birth date of Zein Pun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Zein_Pun> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Jianwen Emperor?", "What was born by the birth date of Jianwen Emperor?", "Which person is born by the birth date of Jianwen Emperor?", "Which person was born by the birth date of Jianwen Emperor?", "Which persons are born by the birth date of Jianwen Emperor?", "Which persons were born by the birth date of Jianwen Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Jianwen_Emperor> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John the Fearless?", "What was born by the birth date of John the Fearless?", "Which person is born by the birth date of John the Fearless?", "Which person was born by the birth date of John the Fearless?", "Which persons are born by the birth date of John the Fearless?", "Which persons were born by the birth date of John the Fearless?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_the_Fearless> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Louis I, Duke of Anjou?", "What was born by the birth date of Louis I, Duke of Anjou?", "Which person is born by the birth date of Louis I, Duke of Anjou?", "Which person was born by the birth date of Louis I, Duke of Anjou?", "Which persons are born by the birth date of Louis I, Duke of Anjou?", "Which persons were born by the birth date of Louis I, Duke of Anjou?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Louis_I,_Duke_of_Anjou> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Philip I, Count of Auvergne?", "What was born by the birth date of Philip I, Count of Auvergne?", "Which person is born by the birth date of Philip I, Count of Auvergne?", "Which person was born by the birth date of Philip I, Count of Auvergne?", "Which persons are born by the birth date of Philip I, Count of Auvergne?", "Which persons were born by the birth date of Philip I, Count of Auvergne?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philip_I,_Count_of_Auvergne> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Ibn abd al-Malik al-Marrakushi?", "What was born by the birth date of Ibn abd al-Malik al-Marrakushi?", "Which person is born by the birth date of Ibn abd al-Malik al-Marrakushi?", "Which person was born by the birth date of Ibn abd al-Malik al-Marrakushi?", "Which persons are born by the birth date of Ibn abd al-Malik al-Marrakushi?", "Which persons were born by the birth date of Ibn abd al-Malik al-Marrakushi?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ibn_abd_al-Malik_al-Marrakushi> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Yolanda of Lusignan?", "What was born by the birth date of Yolanda of Lusignan?", "Which person is born by the birth date of Yolanda of Lusignan?", "Which person was born by the birth date of Yolanda of Lusignan?", "Which persons are born by the birth date of Yolanda of Lusignan?", "Which persons were born by the birth date of Yolanda of Lusignan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yolanda_of_Lusignan> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Alix of Brittany, Dame de Pontarcy?", "What was born by the birth date of Alix of Brittany, Dame de Pontarcy?", "Which person is born by the birth date of Alix of Brittany, Dame de Pontarcy?", "Which person was born by the birth date of Alix of Brittany, Dame de Pontarcy?", "Which persons are born by the birth date of Alix of Brittany, Dame de Pontarcy?", "Which persons were born by the birth date of Alix of Brittany, Dame de Pontarcy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alix_of_Brittany,_Dame_de_Pontarcy> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Elizabeth de Comyn?", "What was born by the birth date of Elizabeth de Comyn?", "Which person is born by the birth date of Elizabeth de Comyn?", "Which person was born by the birth date of Elizabeth de Comyn?", "Which persons are born by the birth date of Elizabeth de Comyn?", "Which persons were born by the birth date of Elizabeth de Comyn?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_de_Comyn> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Crypt the Warchild?", "What was born by the birth date of Crypt the Warchild?", "Which person is born by the birth date of Crypt the Warchild?", "Which person was born by the birth date of Crypt the Warchild?", "Which persons are born by the birth date of Crypt the Warchild?", "Which persons were born by the birth date of Crypt the Warchild?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Crypt_the_Warchild> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Conrad IV of Germany?", "What was born by the birth date of Conrad IV of Germany?", "Which person is born by the birth date of Conrad IV of Germany?", "Which person was born by the birth date of Conrad IV of Germany?", "Which persons are born by the birth date of Conrad IV of Germany?", "Which persons were born by the birth date of Conrad IV of Germany?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Conrad_IV_of_Germany> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Elizabeth de Clare?", "What was born by the birth date of Elizabeth de Clare?", "Which person is born by the birth date of Elizabeth de Clare?", "Which person was born by the birth date of Elizabeth de Clare?", "Which persons are born by the birth date of Elizabeth de Clare?", "Which persons were born by the birth date of Elizabeth de Clare?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Elizabeth_de_Clare> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Hongwu Emperor?", "What was born by the birth date of Hongwu Emperor?", "Which person is born by the birth date of Hongwu Emperor?", "Which person was born by the birth date of Hongwu Emperor?", "Which persons are born by the birth date of Hongwu Emperor?", "Which persons were born by the birth date of Hongwu Emperor?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Hongwu_Emperor> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Ladislaus IV of Hungary?", "What was born by the birth date of Ladislaus IV of Hungary?", "Which person is born by the birth date of Ladislaus IV of Hungary?", "Which person was born by the birth date of Ladislaus IV of Hungary?", "Which persons are born by the birth date of Ladislaus IV of Hungary?", "Which persons were born by the birth date of Ladislaus IV of Hungary?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ladislaus_IV_of_Hungary> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Philomena?", "What was born by the birth date of Philomena?", "Which person is born by the birth date of Philomena?", "Which person was born by the birth date of Philomena?", "Which persons are born by the birth date of Philomena?", "Which persons were born by the birth date of Philomena?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Philomena> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Valdemar II of Denmark?", "What was born by the birth date of Valdemar II of Denmark?", "Which person is born by the birth date of Valdemar II of Denmark?", "Which person was born by the birth date of Valdemar II of Denmark?", "Which persons are born by the birth date of Valdemar II of Denmark?", "Which persons were born by the birth date of Valdemar II of Denmark?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valdemar_II_of_Denmark> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Arthur I, Duke of Brittany?", "What was born by the birth date of Arthur I, Duke of Brittany?", "Which person is born by the birth date of Arthur I, Duke of Brittany?", "Which person was born by the birth date of Arthur I, Duke of Brittany?", "Which persons are born by the birth date of Arthur I, Duke of Brittany?", "Which persons were born by the birth date of Arthur I, Duke of Brittany?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Arthur_I,_Duke_of_Brittany> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Constance of Burgundy?", "What was born by the birth date of Constance of Burgundy?", "Which person is born by the birth date of Constance of Burgundy?", "Which person was born by the birth date of Constance of Burgundy?", "Which persons are born by the birth date of Constance of Burgundy?", "Which persons were born by the birth date of Constance of Burgundy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Constance_of_Burgundy> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Eanflæd?", "What was born by the birth date of Eanflæd?", "Which person is born by the birth date of Eanflæd?", "Which person was born by the birth date of Eanflæd?", "Which persons are born by the birth date of Eanflæd?", "Which persons were born by the birth date of Eanflæd?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Eanflæd> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Antoku?", "What was born by the birth date of Emperor Antoku?", "Which person is born by the birth date of Emperor Antoku?", "Which person was born by the birth date of Emperor Antoku?", "Which persons are born by the birth date of Emperor Antoku?", "Which persons were born by the birth date of Emperor Antoku?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Chūkyō?", "What was born by the birth date of Emperor Chūkyō?", "Which person is born by the birth date of Emperor Chūkyō?", "Which person was born by the birth date of Emperor Chūkyō?", "Which persons are born by the birth date of Emperor Chūkyō?", "Which persons were born by the birth date of Emperor Chūkyō?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Chūkyō> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Emperor Go-Shirakawa?", "What was born by the birth date of Emperor Go-Shirakawa?", "Which person is born by the birth date of Emperor Go-Shirakawa?", "Which person was born by the birth date of Emperor Go-Shirakawa?", "Which persons are born by the birth date of Emperor Go-Shirakawa?", "Which persons were born by the birth date of Emperor Go-Shirakawa?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Emperor_Go-Shirakawa> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?", "What was born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?", "Which person is born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?", "Which person was born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?", "Which persons are born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?", "Which persons were born by the birth date of Thomas de Mowbray, 1st Duke of Norfolk?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Thomas_de_Mowbray,_1st_Duke_of_Norfolk> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Güyük Khan?", "What was born by the birth date of Güyük Khan?", "Which person is born by the birth date of Güyük Khan?", "Which person was born by the birth date of Güyük Khan?", "Which persons are born by the birth date of Güyük Khan?", "Which persons were born by the birth date of Güyük Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Güyük_Khan> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Rudolf IV, Duke of Austria?", "What was born by the birth date of Rudolf IV, Duke of Austria?", "Which person is born by the birth date of Rudolf IV, Duke of Austria?", "Which person was born by the birth date of Rudolf IV, Duke of Austria?", "Which persons are born by the birth date of Rudolf IV, Duke of Austria?", "Which persons were born by the birth date of Rudolf IV, Duke of Austria?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Rudolf_IV,_Duke_of_Austria> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Yared?", "What was born by the birth date of Yared?", "Which person is born by the birth date of Yared?", "Which person was born by the birth date of Yared?", "Which persons are born by the birth date of Yared?", "Which persons were born by the birth date of Yared?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Yared> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Ögedei Khan?", "What was born by the birth date of Ögedei Khan?", "Which person is born by the birth date of Ögedei Khan?", "Which person was born by the birth date of Ögedei Khan?", "Which persons are born by the birth date of Ögedei Khan?", "Which persons were born by the birth date of Ögedei Khan?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ögedei_Khan> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Joanna II of Naples?", "What was born by the birth date of Joanna II of Naples?", "Which person is born by the birth date of Joanna II of Naples?", "Which person was born by the birth date of Joanna II of Naples?", "Which persons are born by the birth date of Joanna II of Naples?", "Which persons were born by the birth date of Joanna II of Naples?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joanna_II_of_Naples> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Lu You?", "What was born by the birth date of Lu You?", "Which person is born by the birth date of Lu You?", "Which person was born by the birth date of Lu You?", "Which persons are born by the birth date of Lu You?", "Which persons were born by the birth date of Lu You?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Lu_You> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Mstislav I of Kiev?", "What was born by the birth date of Mstislav I of Kiev?", "Which person is born by the birth date of Mstislav I of Kiev?", "Which person was born by the birth date of Mstislav I of Kiev?", "Which persons are born by the birth date of Mstislav I of Kiev?", "Which persons were born by the birth date of Mstislav I of Kiev?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Mstislav_I_of_Kiev> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Richard I of Normandy?", "What was born by the birth date of Richard I of Normandy?", "Which person is born by the birth date of Richard I of Normandy?", "Which person was born by the birth date of Richard I of Normandy?", "Which persons are born by the birth date of Richard I of Normandy?", "Which persons were born by the birth date of Richard I of Normandy?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Richard_I_of_Normandy> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John of Castile, Lord of Valencia de Campos?", "What was born by the birth date of John of Castile, Lord of Valencia de Campos?", "Which person is born by the birth date of John of Castile, Lord of Valencia de Campos?", "Which person was born by the birth date of John of Castile, Lord of Valencia de Campos?", "Which persons are born by the birth date of John of Castile, Lord of Valencia de Campos?", "Which persons were born by the birth date of John of Castile, Lord of Valencia de Campos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John_of_Castile,_Lord_of_Valencia_de_Campos> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Sunjong of Goryeo?", "What was born by the birth date of Sunjong of Goryeo?", "Which person is born by the birth date of Sunjong of Goryeo?", "Which person was born by the birth date of Sunjong of Goryeo?", "Which persons are born by the birth date of Sunjong of Goryeo?", "Which persons were born by the birth date of Sunjong of Goryeo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Sunjong_of_Goryeo> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Alice de Lacy, 4th Countess of Lincoln?", "What was born by the birth date of Alice de Lacy, 4th Countess of Lincoln?", "Which person is born by the birth date of Alice de Lacy, 4th Countess of Lincoln?", "Which person was born by the birth date of Alice de Lacy, 4th Countess of Lincoln?", "Which persons are born by the birth date of Alice de Lacy, 4th Countess of Lincoln?", "Which persons were born by the birth date of Alice de Lacy, 4th Countess of Lincoln?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Alice_de_Lacy,_4th_Countess_of_Lincoln> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Matilda of Hainaut?", "What was born by the birth date of Matilda of Hainaut?", "Which person is born by the birth date of Matilda of Hainaut?", "Which person was born by the birth date of Matilda of Hainaut?", "Which persons are born by the birth date of Matilda of Hainaut?", "Which persons were born by the birth date of Matilda of Hainaut?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Matilda_of_Hainaut> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Henry of Opole?", "What was born by the birth date of Henry of Opole?", "Which person is born by the birth date of Henry of Opole?", "Which person was born by the birth date of Henry of Opole?", "Which persons are born by the birth date of Henry of Opole?", "Which persons were born by the birth date of Henry of Opole?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Henry_of_Opole> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Joan of Armagnac?", "What was born by the birth date of Joan of Armagnac?", "Which person is born by the birth date of Joan of Armagnac?", "Which person was born by the birth date of Joan of Armagnac?", "Which persons are born by the birth date of Joan of Armagnac?", "Which persons were born by the birth date of Joan of Armagnac?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Joan_of_Armagnac> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of John, 3rd Earl of Kent?", "What was born by the birth date of John, 3rd Earl of Kent?", "Which person is born by the birth date of John, 3rd Earl of Kent?", "Which person was born by the birth date of John, 3rd Earl of Kent?", "Which persons are born by the birth date of John, 3rd Earl of Kent?", "Which persons were born by the birth date of John, 3rd Earl of Kent?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/John,_3rd_Earl_of_Kent> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?", "What was born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?", "Which person is born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?", "Which person was born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?", "Which persons are born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?", "Which persons were born by the birth date of Maud de Lacy, Countess of Hertford and Gloucester?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Maud_de_Lacy,_Countess_of_Hertford_and_Gloucester> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Przemysław of Racibórz?", "What was born by the birth date of Przemysław of Racibórz?", "Which person is born by the birth date of Przemysław of Racibórz?", "Which person was born by the birth date of Przemysław of Racibórz?", "Which persons are born by the birth date of Przemysław of Racibórz?", "Which persons were born by the birth date of Przemysław of Racibórz?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Przemysław_of_Racibórz> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Ha Ryun?", "What was born by the birth date of Ha Ryun?", "Which person is born by the birth date of Ha Ryun?", "Which person was born by the birth date of Ha Ryun?", "Which persons are born by the birth date of Ha Ryun?", "Which persons were born by the birth date of Ha Ryun?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Ha_Ryun> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Valter hugo mãe?", "What was born by the birth date of Valter hugo mãe?", "Which person is born by the birth date of Valter hugo mãe?", "Which person was born by the birth date of Valter hugo mãe?", "Which persons are born by the birth date of Valter hugo mãe?", "Which persons were born by the birth date of Valter hugo mãe?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Valter_hugo_mãe> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Anna of Trebizond, Queen of Georgia?", "What was born by the birth date of Anna of Trebizond, Queen of Georgia?", "Which person is born by the birth date of Anna of Trebizond, Queen of Georgia?", "Which person was born by the birth date of Anna of Trebizond, Queen of Georgia?", "Which persons are born by the birth date of Anna of Trebizond, Queen of Georgia?", "Which persons were born by the birth date of Anna of Trebizond, Queen of Georgia?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anna_of_Trebizond,_Queen_of_Georgia> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?", "What was born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?", "Which person is born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?", "Which person was born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?", "Which persons are born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?", "Which persons were born by the birth date of Juan Alonso de Guzmán, 1st Count of Niebla?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Juan_Alonso_de_Guzmán,_1st_Count_of_Niebla> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Annia Aurelia Galeria Faustina?", "What was born by the birth date of Annia Aurelia Galeria Faustina?", "Which person is born by the birth date of Annia Aurelia Galeria Faustina?", "Which person was born by the birth date of Annia Aurelia Galeria Faustina?", "Which persons are born by the birth date of Annia Aurelia Galeria Faustina?", "Which persons were born by the birth date of Annia Aurelia Galeria Faustina?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Annia_Aurelia_Galeria_Faustina> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Anthony of Padua?", "What was born by the birth date of Anthony of Padua?", "Which person is born by the birth date of Anthony of Padua?", "Which person was born by the birth date of Anthony of Padua?", "Which persons are born by the birth date of Anthony of Padua?", "Which persons were born by the birth date of Anthony of Padua?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Anthony_of_Padua> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Antipope Benedict XIII?", "What was born by the birth date of Antipope Benedict XIII?", "Which person is born by the birth date of Antipope Benedict XIII?", "Which person was born by the birth date of Antipope Benedict XIII?", "Which persons are born by the birth date of Antipope Benedict XIII?", "Which persons were born by the birth date of Antipope Benedict XIII?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Antipope_Benedict_XIII> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "APP",
    "sentences" : [ "What is born by the birth date of Berengaria of Portugal?", "What was born by the birth date of Berengaria of Portugal?", "Which person is born by the birth date of Berengaria of Portugal?", "Which person was born by the birth date of Berengaria of Portugal?", "Which persons are born by the birth date of Berengaria of Portugal?", "Which persons were born by the birth date of Berengaria of Portugal?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple <http://dbpedia.org/resource/Berengaria_of_Portugal> <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : null
    },
    "combination" : true
  } ]
}