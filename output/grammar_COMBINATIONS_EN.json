{
  "grammarEntries" : [ {
    "id" : "116",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of $x?", "Tell me the Alma Mater of the spouse of $x?", "What is the Alma Mater of the spouse of $x?", "What was the Alma Mater of the spouse of $x?", "Which educational institution is the Alma Mater of the spouse of $x?", "Which educational institution was the Alma Mater of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Lucy Turnbull",
        "uri" : "http://dbpedia.org/resource/Lucy_Turnbull"
      }, {
        "label" : "Luis Fortuño",
        "uri" : "http://dbpedia.org/resource/Luis_Fortuño"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Malcolm Turnbull",
        "uri" : "http://dbpedia.org/resource/Malcolm_Turnbull"
      }, {
        "label" : "Marieme Faye Sall",
        "uri" : "http://dbpedia.org/resource/Marieme_Faye_Sall"
      }, {
        "label" : "Desmond FitzGerald (politician)",
        "uri" : "http://dbpedia.org/resource/Desmond_FitzGerald_(politician)"
      }, {
        "label" : "Diana Wellesley, Duchess of Wellington",
        "uri" : "http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Nnamdi Azikiwe",
        "uri" : "http://dbpedia.org/resource/Nnamdi_Azikiwe"
      }, {
        "label" : "Sulochana Gadgil",
        "uri" : "http://dbpedia.org/resource/Sulochana_Gadgil"
      }, {
        "label" : "Avinash",
        "uri" : "http://dbpedia.org/resource/Avinash"
      }, {
        "label" : "Azam Farahi",
        "uri" : "http://dbpedia.org/resource/Azam_Farahi"
      }, {
        "label" : "Barbara Stühlmeyer",
        "uri" : "http://dbpedia.org/resource/Barbara_Stühlmeyer"
      }, {
        "label" : "Carl Sagan",
        "uri" : "http://dbpedia.org/resource/Carl_Sagan"
      }, {
        "label" : "Chien-Shiung Wu",
        "uri" : "http://dbpedia.org/resource/Chien-Shiung_Wu"
      }, {
        "label" : "Chris Hardwick",
        "uri" : "http://dbpedia.org/resource/Chris_Hardwick"
      }, {
        "label" : "Christine Chow Ma",
        "uri" : "http://dbpedia.org/resource/Christine_Chow_Ma"
      }, {
        "label" : "Chuck Robb",
        "uri" : "http://dbpedia.org/resource/Chuck_Robb"
      }, {
        "label" : "Alex Burns (journalist)",
        "uri" : "http://dbpedia.org/resource/Alex_Burns_(journalist)"
      }, {
        "label" : "Jean Martin (sociologist)",
        "uri" : "http://dbpedia.org/resource/Jean_Martin_(sociologist)"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John J. Shea Jr.",
        "uri" : "http://dbpedia.org/resource/John_J._Shea_Jr."
      }, {
        "label" : "Sharat Raju",
        "uri" : "http://dbpedia.org/resource/Sharat_Raju"
      }, {
        "label" : "Bernard Herrmann",
        "uri" : "http://dbpedia.org/resource/Bernard_Herrmann"
      }, {
        "label" : "Bijon Bhattacharya",
        "uri" : "http://dbpedia.org/resource/Bijon_Bhattacharya"
      }, {
        "label" : "Bill Hader",
        "uri" : "http://dbpedia.org/resource/Bill_Hader"
      }, {
        "label" : "Kasturba Gandhi",
        "uri" : "http://dbpedia.org/resource/Kasturba_Gandhi"
      }, {
        "label" : "Katharine Cook Briggs",
        "uri" : "http://dbpedia.org/resource/Katharine_Cook_Briggs"
      }, {
        "label" : "Keith Chegwin",
        "uri" : "http://dbpedia.org/resource/Keith_Chegwin"
      }, {
        "label" : "Lena Adelsohn Liljeroth",
        "uri" : "http://dbpedia.org/resource/Lena_Adelsohn_Liljeroth"
      }, {
        "label" : "Zulema Jattin Corrales",
        "uri" : "http://dbpedia.org/resource/Zulema_Jattin_Corrales"
      }, {
        "label" : "Michael Jayston",
        "uri" : "http://dbpedia.org/resource/Michael_Jayston"
      }, {
        "label" : "Mira Nair",
        "uri" : "http://dbpedia.org/resource/Mira_Nair"
      }, {
        "label" : "Russell Ober",
        "uri" : "http://dbpedia.org/resource/Russell_Ober"
      }, {
        "label" : "Saeed Jaffrey",
        "uri" : "http://dbpedia.org/resource/Saeed_Jaffrey"
      }, {
        "label" : "Sam Underwood",
        "uri" : "http://dbpedia.org/resource/Sam_Underwood"
      }, {
        "label" : "Samira Bawumia",
        "uri" : "http://dbpedia.org/resource/Samira_Bawumia"
      }, {
        "label" : "Géraldine Le Meur",
        "uri" : "http://dbpedia.org/resource/Géraldine_Le_Meur"
      }, {
        "label" : "Veronika Tsepkalo",
        "uri" : "http://dbpedia.org/resource/Veronika_Tsepkalo"
      }, {
        "label" : "Siti Hasmah Mohamad Ali",
        "uri" : "http://dbpedia.org/resource/Siti_Hasmah_Mohamad_Ali"
      }, {
        "label" : "Douglass Wallop",
        "uri" : "http://dbpedia.org/resource/Douglass_Wallop"
      }, {
        "label" : "Early life and career of Gene Roddenberry",
        "uri" : "http://dbpedia.org/resource/Early_life_and_career_of_Gene_Roddenberry"
      }, {
        "label" : "Günther Quandt",
        "uri" : "http://dbpedia.org/resource/Günther_Quandt"
      }, {
        "label" : "Harley McAdams",
        "uri" : "http://dbpedia.org/resource/Harley_McAdams"
      }, {
        "label" : "Hugh Franklin (actor)",
        "uri" : "http://dbpedia.org/resource/Hugh_Franklin_(actor)"
      }, {
        "label" : "Huw Lewis",
        "uri" : "http://dbpedia.org/resource/Huw_Lewis"
      }, {
        "label" : "Jana Hlaváčová",
        "uri" : "http://dbpedia.org/resource/Jana_Hlaváčová"
      }, {
        "label" : "Janet Dhillon",
        "uri" : "http://dbpedia.org/resource/Janet_Dhillon"
      }, {
        "label" : "Ana María Cetto",
        "uri" : "http://dbpedia.org/resource/Ana_María_Cetto"
      }, {
        "label" : "Anne-Aymone Giscard d'Estaing",
        "uri" : "http://dbpedia.org/resource/Anne-Aymone_Giscard_d'Estaing"
      }, {
        "label" : "Anthony L. Komaroff",
        "uri" : "http://dbpedia.org/resource/Anthony_L._Komaroff"
      }, {
        "label" : "Anubhav Mohanty",
        "uri" : "http://dbpedia.org/resource/Anubhav_Mohanty"
      }, {
        "label" : "Oliver Haarmann",
        "uri" : "http://dbpedia.org/resource/Oliver_Haarmann"
      }, {
        "label" : "Olivier Assayas",
        "uri" : "http://dbpedia.org/resource/Olivier_Assayas"
      }, {
        "label" : "Oscar Wyatt",
        "uri" : "http://dbpedia.org/resource/Oscar_Wyatt"
      }, {
        "label" : "Ramabai Ranade",
        "uri" : "http://dbpedia.org/resource/Ramabai_Ranade"
      }, {
        "label" : "Ranil Wickremesinghe",
        "uri" : "http://dbpedia.org/resource/Ranil_Wickremesinghe"
      }, {
        "label" : "Renate Lepsius",
        "uri" : "http://dbpedia.org/resource/Renate_Lepsius"
      }, {
        "label" : "Rashmi Thackeray",
        "uri" : "http://dbpedia.org/resource/Rashmi_Thackeray"
      }, {
        "label" : "Aaron Frenkel",
        "uri" : "http://dbpedia.org/resource/Aaron_Frenkel"
      }, {
        "label" : "Adrian Bird",
        "uri" : "http://dbpedia.org/resource/Adrian_Bird"
      }, {
        "label" : "Turai Yar'Adua",
        "uri" : "http://dbpedia.org/resource/Turai_Yar'Adua"
      }, {
        "label" : "Tzachi Halevy",
        "uri" : "http://dbpedia.org/resource/Tzachi_Halevy"
      }, {
        "label" : "Brian Benben",
        "uri" : "http://dbpedia.org/resource/Brian_Benben"
      }, {
        "label" : "Bucek Depp",
        "uri" : "http://dbpedia.org/resource/Bucek_Depp"
      }, {
        "label" : "Patrick Hillery",
        "uri" : "http://dbpedia.org/resource/Patrick_Hillery"
      }, {
        "label" : "Paul Auster",
        "uri" : "http://dbpedia.org/resource/Paul_Auster"
      }, {
        "label" : "Paul Bradford",
        "uri" : "http://dbpedia.org/resource/Paul_Bradford"
      }, {
        "label" : "Paweł Adamowicz",
        "uri" : "http://dbpedia.org/resource/Paweł_Adamowicz"
      }, {
        "label" : "Peggy Cowley",
        "uri" : "http://dbpedia.org/resource/Peggy_Cowley"
      }, {
        "label" : "Pei Gang",
        "uri" : "http://dbpedia.org/resource/Pei_Gang"
      }, {
        "label" : "Sheikh Hasina",
        "uri" : "http://dbpedia.org/resource/Sheikh_Hasina"
      }, {
        "label" : "Shiranthi Rajapaksa",
        "uri" : "http://dbpedia.org/resource/Shiranthi_Rajapaksa"
      }, {
        "label" : "Sébastien Huyghe",
        "uri" : "http://dbpedia.org/resource/Sébastien_Huyghe"
      }, {
        "label" : "Tamie Fraser",
        "uri" : "http://dbpedia.org/resource/Tamie_Fraser"
      }, {
        "label" : "Taylor Hackford",
        "uri" : "http://dbpedia.org/resource/Taylor_Hackford"
      }, {
        "label" : "Viktor Yanukovych",
        "uri" : "http://dbpedia.org/resource/Viktor_Yanukovych"
      }, {
        "label" : "Vladimir Putin",
        "uri" : "http://dbpedia.org/resource/Vladimir_Putin"
      }, {
        "label" : "Ferial Ashraff",
        "uri" : "http://dbpedia.org/resource/Ferial_Ashraff"
      }, {
        "label" : "Naoki Tanaka (politician)",
        "uri" : "http://dbpedia.org/resource/Naoki_Tanaka_(politician)"
      }, {
        "label" : "Nicky Wu",
        "uri" : "http://dbpedia.org/resource/Nicky_Wu"
      }, {
        "label" : "Stewart Butterfield",
        "uri" : "http://dbpedia.org/resource/Stewart_Butterfield"
      }, {
        "label" : "Sun Haiying",
        "uri" : "http://dbpedia.org/resource/Sun_Haiying"
      }, {
        "label" : "Wen Zhang",
        "uri" : "http://dbpedia.org/resource/Wen_Zhang"
      }, {
        "label" : "William Sutcliffe",
        "uri" : "http://dbpedia.org/resource/William_Sutcliffe"
      }, {
        "label" : "Wilson Braga",
        "uri" : "http://dbpedia.org/resource/Wilson_Braga"
      }, {
        "label" : "Douglas Wick",
        "uri" : "http://dbpedia.org/resource/Douglas_Wick"
      }, {
        "label" : "Eoin Ó Broin",
        "uri" : "http://dbpedia.org/resource/Eoin_Ó_Broin"
      }, {
        "label" : "Henry Browne Blackwell",
        "uri" : "http://dbpedia.org/resource/Henry_Browne_Blackwell"
      }, {
        "label" : "Hernán Larraín",
        "uri" : "http://dbpedia.org/resource/Hernán_Larraín"
      }, {
        "label" : "Nabakrushna Choudhuri",
        "uri" : "http://dbpedia.org/resource/Nabakrushna_Choudhuri"
      }, {
        "label" : "Gordon Snell",
        "uri" : "http://dbpedia.org/resource/Gordon_Snell"
      }, {
        "label" : "John Stapleton (English journalist)",
        "uri" : "http://dbpedia.org/resource/John_Stapleton_(English_journalist)"
      }, {
        "label" : "John Woodvine",
        "uri" : "http://dbpedia.org/resource/John_Woodvine"
      }, {
        "label" : "Jorge Carlos Fonseca",
        "uri" : "http://dbpedia.org/resource/Jorge_Carlos_Fonseca"
      }, {
        "label" : "Joseph Goebbels",
        "uri" : "http://dbpedia.org/resource/Joseph_Goebbels"
      }, {
        "label" : "Julia Pou",
        "uri" : "http://dbpedia.org/resource/Julia_Pou"
      }, {
        "label" : "Matt Parker",
        "uri" : "http://dbpedia.org/resource/Matt_Parker"
      }, {
        "label" : "Michael David Thomas",
        "uri" : "http://dbpedia.org/resource/Michael_David_Thomas"
      } ]
    },
    "combination" : true
  }, {
    "id" : "117",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian prime minister?", "Give me the Alma Mater of Australian prime ministers?", "Tell me the Alma Mater of a Australian prime minister?", "Tell me the Alma Mater of Australian prime ministers?", "What is the Alma Mater of a Australian prime minister?", "What is the Alma Mater of Australian prime ministers?", "What was the Alma Mater of a Australian prime minister?", "What was the Alma Mater of Australian prime ministers?", "Which educational institution is the Alma Mater of a Australian prime minister?", "Which educational institution is the Alma Mater of Australian prime ministers?", "Which educational institution was the Alma Mater of a Australian prime minister?", "Which educational institution was the Alma Mater of Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "118",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian agent?", "Give me the Alma Mater of Australian agents?", "Tell me the Alma Mater of a Australian agent?", "Tell me the Alma Mater of Australian agents?", "What is the Alma Mater of a Australian agent?", "What is the Alma Mater of Australian agents?", "What was the Alma Mater of a Australian agent?", "What was the Alma Mater of Australian agents?", "Which educational institution is the Alma Mater of a Australian agent?", "Which educational institution is the Alma Mater of Australian agents?", "Which educational institution was the Alma Mater of a Australian agent?", "Which educational institution was the Alma Mater of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "119",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian artist?", "Give me the Alma Mater of Australian artists?", "Tell me the Alma Mater of a Australian artist?", "Tell me the Alma Mater of Australian artists?", "What is the Alma Mater of a Australian artist?", "What is the Alma Mater of Australian artists?", "What was the Alma Mater of a Australian artist?", "What was the Alma Mater of Australian artists?", "Which educational institution is the Alma Mater of a Australian artist?", "Which educational institution is the Alma Mater of Australian artists?", "Which educational institution was the Alma Mater of a Australian artist?", "Which educational institution was the Alma Mater of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "120",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian motorcycle rider?", "Give me the Alma Mater of Australian motorcycle riders?", "Tell me the Alma Mater of a Australian motorcycle rider?", "Tell me the Alma Mater of Australian motorcycle riders?", "What is the Alma Mater of a Australian motorcycle rider?", "What is the Alma Mater of Australian motorcycle riders?", "What was the Alma Mater of a Australian motorcycle rider?", "What was the Alma Mater of Australian motorcycle riders?", "Which educational institution is the Alma Mater of a Australian motorcycle rider?", "Which educational institution is the Alma Mater of Australian motorcycle riders?", "Which educational institution was the Alma Mater of a Australian motorcycle rider?", "Which educational institution was the Alma Mater of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "121",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian scientist?", "Give me the Alma Mater of Australian scientists?", "Tell me the Alma Mater of a Australian scientist?", "Tell me the Alma Mater of Australian scientists?", "What is the Alma Mater of a Australian scientist?", "What is the Alma Mater of Australian scientists?", "What was the Alma Mater of a Australian scientist?", "What was the Alma Mater of Australian scientists?", "Which educational institution is the Alma Mater of a Australian scientist?", "Which educational institution is the Alma Mater of Australian scientists?", "Which educational institution was the Alma Mater of a Australian scientist?", "Which educational institution was the Alma Mater of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "122",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian military person?", "Give me the Alma Mater of Australian military persons?", "Tell me the Alma Mater of a Australian military person?", "Tell me the Alma Mater of Australian military persons?", "What is the Alma Mater of a Australian military person?", "What is the Alma Mater of Australian military persons?", "What was the Alma Mater of a Australian military person?", "What was the Alma Mater of Australian military persons?", "Which educational institution is the Alma Mater of a Australian military person?", "Which educational institution is the Alma Mater of Australian military persons?", "Which educational institution was the Alma Mater of a Australian military person?", "Which educational institution was the Alma Mater of Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "123",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian volleyball player?", "Give me the Alma Mater of Australian volleyball players?", "Tell me the Alma Mater of a Australian volleyball player?", "Tell me the Alma Mater of Australian volleyball players?", "What is the Alma Mater of a Australian volleyball player?", "What is the Alma Mater of Australian volleyball players?", "What was the Alma Mater of a Australian volleyball player?", "What was the Alma Mater of Australian volleyball players?", "Which educational institution is the Alma Mater of a Australian volleyball player?", "Which educational institution is the Alma Mater of Australian volleyball players?", "Which educational institution was the Alma Mater of a Australian volleyball player?", "Which educational institution was the Alma Mater of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "124",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian basketball player?", "Give me the Alma Mater of Australian basketball players?", "Tell me the Alma Mater of a Australian basketball player?", "Tell me the Alma Mater of Australian basketball players?", "What is the Alma Mater of a Australian basketball player?", "What is the Alma Mater of Australian basketball players?", "What was the Alma Mater of a Australian basketball player?", "What was the Alma Mater of Australian basketball players?", "Which educational institution is the Alma Mater of a Australian basketball player?", "Which educational institution is the Alma Mater of Australian basketball players?", "Which educational institution was the Alma Mater of a Australian basketball player?", "Which educational institution was the Alma Mater of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "125",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian speedway rider?", "Give me the Alma Mater of Australian speedway riders?", "Tell me the Alma Mater of a Australian speedway rider?", "Tell me the Alma Mater of Australian speedway riders?", "What is the Alma Mater of a Australian speedway rider?", "What is the Alma Mater of Australian speedway riders?", "What was the Alma Mater of a Australian speedway rider?", "What was the Alma Mater of Australian speedway riders?", "Which educational institution is the Alma Mater of a Australian speedway rider?", "Which educational institution is the Alma Mater of Australian speedway riders?", "Which educational institution was the Alma Mater of a Australian speedway rider?", "Which educational institution was the Alma Mater of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "126",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian model?", "Give me the Alma Mater of Australian models?", "Tell me the Alma Mater of a Australian model?", "Tell me the Alma Mater of Australian models?", "What is the Alma Mater of a Australian model?", "What is the Alma Mater of Australian models?", "What was the Alma Mater of a Australian model?", "What was the Alma Mater of Australian models?", "Which educational institution is the Alma Mater of a Australian model?", "Which educational institution is the Alma Mater of Australian models?", "Which educational institution was the Alma Mater of a Australian model?", "Which educational institution was the Alma Mater of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "127",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian motorsport racer?", "Give me the Alma Mater of Australian motorsport racers?", "Tell me the Alma Mater of a Australian motorsport racer?", "Tell me the Alma Mater of Australian motorsport racers?", "What is the Alma Mater of a Australian motorsport racer?", "What is the Alma Mater of Australian motorsport racers?", "What was the Alma Mater of a Australian motorsport racer?", "What was the Alma Mater of Australian motorsport racers?", "Which educational institution is the Alma Mater of a Australian motorsport racer?", "Which educational institution is the Alma Mater of Australian motorsport racers?", "Which educational institution was the Alma Mater of a Australian motorsport racer?", "Which educational institution was the Alma Mater of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "128",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian cleric?", "Give me the Alma Mater of Australian clerics?", "Tell me the Alma Mater of a Australian cleric?", "Tell me the Alma Mater of Australian clerics?", "What is the Alma Mater of a Australian cleric?", "What is the Alma Mater of Australian clerics?", "What was the Alma Mater of a Australian cleric?", "What was the Alma Mater of Australian clerics?", "Which educational institution is the Alma Mater of a Australian cleric?", "Which educational institution is the Alma Mater of Australian clerics?", "Which educational institution was the Alma Mater of a Australian cleric?", "Which educational institution was the Alma Mater of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "129",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian boxer?", "Give me the Alma Mater of Australian boxers?", "Tell me the Alma Mater of a Australian boxer?", "Tell me the Alma Mater of Australian boxers?", "What is the Alma Mater of a Australian boxer?", "What is the Alma Mater of Australian boxers?", "What was the Alma Mater of a Australian boxer?", "What was the Alma Mater of Australian boxers?", "Which educational institution is the Alma Mater of a Australian boxer?", "Which educational institution is the Alma Mater of Australian boxers?", "Which educational institution was the Alma Mater of a Australian boxer?", "Which educational institution was the Alma Mater of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "130",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian office holder?", "Give me the Alma Mater of Australian office holders?", "Tell me the Alma Mater of a Australian office holder?", "Tell me the Alma Mater of Australian office holders?", "What is the Alma Mater of a Australian office holder?", "What is the Alma Mater of Australian office holders?", "What was the Alma Mater of a Australian office holder?", "What was the Alma Mater of Australian office holders?", "Which educational institution is the Alma Mater of a Australian office holder?", "Which educational institution is the Alma Mater of Australian office holders?", "Which educational institution was the Alma Mater of a Australian office holder?", "Which educational institution was the Alma Mater of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "131",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian economist?", "Give me the Alma Mater of Australian economists?", "Tell me the Alma Mater of a Australian economist?", "Tell me the Alma Mater of Australian economists?", "What is the Alma Mater of a Australian economist?", "What is the Alma Mater of Australian economists?", "What was the Alma Mater of a Australian economist?", "What was the Alma Mater of Australian economists?", "Which educational institution is the Alma Mater of a Australian economist?", "Which educational institution is the Alma Mater of Australian economists?", "Which educational institution was the Alma Mater of a Australian economist?", "Which educational institution was the Alma Mater of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "132",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian fictional character?", "Give me the Alma Mater of Australian fictional characters?", "Tell me the Alma Mater of a Australian fictional character?", "Tell me the Alma Mater of Australian fictional characters?", "What is the Alma Mater of a Australian fictional character?", "What is the Alma Mater of Australian fictional characters?", "What was the Alma Mater of a Australian fictional character?", "What was the Alma Mater of Australian fictional characters?", "Which educational institution is the Alma Mater of a Australian fictional character?", "Which educational institution is the Alma Mater of Australian fictional characters?", "Which educational institution was the Alma Mater of a Australian fictional character?", "Which educational institution was the Alma Mater of Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "133",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian athlete?", "Give me the Alma Mater of Australian athletes?", "Tell me the Alma Mater of a Australian athlete?", "Tell me the Alma Mater of Australian athletes?", "What is the Alma Mater of a Australian athlete?", "What is the Alma Mater of Australian athletes?", "What was the Alma Mater of a Australian athlete?", "What was the Alma Mater of Australian athletes?", "Which educational institution is the Alma Mater of a Australian athlete?", "Which educational institution is the Alma Mater of Australian athletes?", "Which educational institution was the Alma Mater of a Australian athlete?", "Which educational institution was the Alma Mater of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "134",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian racing driver?", "Give me the Alma Mater of Australian racing drivers?", "Tell me the Alma Mater of a Australian racing driver?", "Tell me the Alma Mater of Australian racing drivers?", "What is the Alma Mater of a Australian racing driver?", "What is the Alma Mater of Australian racing drivers?", "What was the Alma Mater of a Australian racing driver?", "What was the Alma Mater of Australian racing drivers?", "Which educational institution is the Alma Mater of a Australian racing driver?", "Which educational institution is the Alma Mater of Australian racing drivers?", "Which educational institution was the Alma Mater of a Australian racing driver?", "Which educational institution was the Alma Mater of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "135",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian golf player?", "Give me the Alma Mater of Australian golf players?", "Tell me the Alma Mater of a Australian golf player?", "Tell me the Alma Mater of Australian golf players?", "What is the Alma Mater of a Australian golf player?", "What is the Alma Mater of Australian golf players?", "What was the Alma Mater of a Australian golf player?", "What was the Alma Mater of Australian golf players?", "Which educational institution is the Alma Mater of a Australian golf player?", "Which educational institution is the Alma Mater of Australian golf players?", "Which educational institution was the Alma Mater of a Australian golf player?", "Which educational institution was the Alma Mater of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "136",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian politician?", "Give me the Alma Mater of Australian politicians?", "Tell me the Alma Mater of a Australian politician?", "Tell me the Alma Mater of Australian politicians?", "What is the Alma Mater of a Australian politician?", "What is the Alma Mater of Australian politicians?", "What was the Alma Mater of a Australian politician?", "What was the Alma Mater of Australian politicians?", "Which educational institution is the Alma Mater of a Australian politician?", "Which educational institution is the Alma Mater of Australian politicians?", "Which educational institution was the Alma Mater of a Australian politician?", "Which educational institution was the Alma Mater of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian swimmer?", "Give me the Alma Mater of Australian swimmers?", "Tell me the Alma Mater of a Australian swimmer?", "Tell me the Alma Mater of Australian swimmers?", "What is the Alma Mater of a Australian swimmer?", "What is the Alma Mater of Australian swimmers?", "What was the Alma Mater of a Australian swimmer?", "What was the Alma Mater of Australian swimmers?", "Which educational institution is the Alma Mater of a Australian swimmer?", "Which educational institution is the Alma Mater of Australian swimmers?", "Which educational institution was the Alma Mater of a Australian swimmer?", "Which educational institution was the Alma Mater of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian handball player?", "Give me the Alma Mater of Australian handball players?", "Tell me the Alma Mater of a Australian handball player?", "Tell me the Alma Mater of Australian handball players?", "What is the Alma Mater of a Australian handball player?", "What is the Alma Mater of Australian handball players?", "What was the Alma Mater of a Australian handball player?", "What was the Alma Mater of Australian handball players?", "Which educational institution is the Alma Mater of a Australian handball player?", "Which educational institution is the Alma Mater of Australian handball players?", "Which educational institution was the Alma Mater of a Australian handball player?", "Which educational institution was the Alma Mater of Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian person?", "Give me the Alma Mater of Australian persons?", "Tell me the Alma Mater of a Australian person?", "Tell me the Alma Mater of Australian persons?", "What is the Alma Mater of a Australian person?", "What is the Alma Mater of Australian persons?", "What was the Alma Mater of a Australian person?", "What was the Alma Mater of Australian persons?", "Which educational institution is the Alma Mater of a Australian person?", "Which educational institution is the Alma Mater of Australian persons?", "Which educational institution was the Alma Mater of a Australian person?", "Which educational institution was the Alma Mater of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian Christian Bishop?", "Give me the Alma Mater of Australian Christian Bishops?", "Tell me the Alma Mater of a Australian Christian Bishop?", "Tell me the Alma Mater of Australian Christian Bishops?", "What is the Alma Mater of a Australian Christian Bishop?", "What is the Alma Mater of Australian Christian Bishops?", "What was the Alma Mater of a Australian Christian Bishop?", "What was the Alma Mater of Australian Christian Bishops?", "Which educational institution is the Alma Mater of a Australian Christian Bishop?", "Which educational institution is the Alma Mater of Australian Christian Bishops?", "Which educational institution was the Alma Mater of a Australian Christian Bishop?", "Which educational institution was the Alma Mater of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian writer?", "Give me the Alma Mater of Australian writers?", "Tell me the Alma Mater of a Australian writer?", "Tell me the Alma Mater of Australian writers?", "What is the Alma Mater of a Australian writer?", "What is the Alma Mater of Australian writers?", "What was the Alma Mater of a Australian writer?", "What was the Alma Mater of Australian writers?", "Which educational institution is the Alma Mater of a Australian writer?", "Which educational institution is the Alma Mater of Australian writers?", "Which educational institution was the Alma Mater of a Australian writer?", "Which educational institution was the Alma Mater of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian cleric?", "Give me the Alma Mater of Belgian clerics?", "Tell me the Alma Mater of a Belgian cleric?", "Tell me the Alma Mater of Belgian clerics?", "What is the Alma Mater of a Belgian cleric?", "What is the Alma Mater of Belgian clerics?", "What was the Alma Mater of a Belgian cleric?", "What was the Alma Mater of Belgian clerics?", "Which educational institution is the Alma Mater of a Belgian cleric?", "Which educational institution is the Alma Mater of Belgian clerics?", "Which educational institution was the Alma Mater of a Belgian cleric?", "Which educational institution was the Alma Mater of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian office holder?", "Give me the Alma Mater of Belgian office holders?", "Tell me the Alma Mater of a Belgian office holder?", "Tell me the Alma Mater of Belgian office holders?", "What is the Alma Mater of a Belgian office holder?", "What is the Alma Mater of Belgian office holders?", "What was the Alma Mater of a Belgian office holder?", "What was the Alma Mater of Belgian office holders?", "Which educational institution is the Alma Mater of a Belgian office holder?", "Which educational institution is the Alma Mater of Belgian office holders?", "Which educational institution was the Alma Mater of a Belgian office holder?", "Which educational institution was the Alma Mater of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian agent?", "Give me the Alma Mater of Belgian agents?", "Tell me the Alma Mater of a Belgian agent?", "Tell me the Alma Mater of Belgian agents?", "What is the Alma Mater of a Belgian agent?", "What is the Alma Mater of Belgian agents?", "What was the Alma Mater of a Belgian agent?", "What was the Alma Mater of Belgian agents?", "Which educational institution is the Alma Mater of a Belgian agent?", "Which educational institution is the Alma Mater of Belgian agents?", "Which educational institution was the Alma Mater of a Belgian agent?", "Which educational institution was the Alma Mater of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian economist?", "Give me the Alma Mater of Belgian economists?", "Tell me the Alma Mater of a Belgian economist?", "Tell me the Alma Mater of Belgian economists?", "What is the Alma Mater of a Belgian economist?", "What is the Alma Mater of Belgian economists?", "What was the Alma Mater of a Belgian economist?", "What was the Alma Mater of Belgian economists?", "Which educational institution is the Alma Mater of a Belgian economist?", "Which educational institution is the Alma Mater of Belgian economists?", "Which educational institution was the Alma Mater of a Belgian economist?", "Which educational institution was the Alma Mater of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorcycle rider?", "Give me the Alma Mater of Belgian motorcycle riders?", "Tell me the Alma Mater of a Belgian motorcycle rider?", "Tell me the Alma Mater of Belgian motorcycle riders?", "What is the Alma Mater of a Belgian motorcycle rider?", "What is the Alma Mater of Belgian motorcycle riders?", "What was the Alma Mater of a Belgian motorcycle rider?", "What was the Alma Mater of Belgian motorcycle riders?", "Which educational institution is the Alma Mater of a Belgian motorcycle rider?", "Which educational institution is the Alma Mater of Belgian motorcycle riders?", "Which educational institution was the Alma Mater of a Belgian motorcycle rider?", "Which educational institution was the Alma Mater of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian artist?", "Give me the Alma Mater of Belgian artists?", "Tell me the Alma Mater of a Belgian artist?", "Tell me the Alma Mater of Belgian artists?", "What is the Alma Mater of a Belgian artist?", "What is the Alma Mater of Belgian artists?", "What was the Alma Mater of a Belgian artist?", "What was the Alma Mater of Belgian artists?", "Which educational institution is the Alma Mater of a Belgian artist?", "Which educational institution is the Alma Mater of Belgian artists?", "Which educational institution was the Alma Mater of a Belgian artist?", "Which educational institution was the Alma Mater of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian athlete?", "Give me the Alma Mater of Belgian athletes?", "Tell me the Alma Mater of a Belgian athlete?", "Tell me the Alma Mater of Belgian athletes?", "What is the Alma Mater of a Belgian athlete?", "What is the Alma Mater of Belgian athletes?", "What was the Alma Mater of a Belgian athlete?", "What was the Alma Mater of Belgian athletes?", "Which educational institution is the Alma Mater of a Belgian athlete?", "Which educational institution is the Alma Mater of Belgian athletes?", "Which educational institution was the Alma Mater of a Belgian athlete?", "Which educational institution was the Alma Mater of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian scientist?", "Give me the Alma Mater of Belgian scientists?", "Tell me the Alma Mater of a Belgian scientist?", "Tell me the Alma Mater of Belgian scientists?", "What is the Alma Mater of a Belgian scientist?", "What is the Alma Mater of Belgian scientists?", "What was the Alma Mater of a Belgian scientist?", "What was the Alma Mater of Belgian scientists?", "Which educational institution is the Alma Mater of a Belgian scientist?", "Which educational institution is the Alma Mater of Belgian scientists?", "Which educational institution was the Alma Mater of a Belgian scientist?", "Which educational institution was the Alma Mater of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian architect?", "Give me the Alma Mater of Belgian architects?", "Tell me the Alma Mater of a Belgian architect?", "Tell me the Alma Mater of Belgian architects?", "What is the Alma Mater of a Belgian architect?", "What is the Alma Mater of Belgian architects?", "What was the Alma Mater of a Belgian architect?", "What was the Alma Mater of Belgian architects?", "Which educational institution is the Alma Mater of a Belgian architect?", "Which educational institution is the Alma Mater of Belgian architects?", "Which educational institution was the Alma Mater of a Belgian architect?", "Which educational institution was the Alma Mater of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian golf player?", "Give me the Alma Mater of Belgian golf players?", "Tell me the Alma Mater of a Belgian golf player?", "Tell me the Alma Mater of Belgian golf players?", "What is the Alma Mater of a Belgian golf player?", "What is the Alma Mater of Belgian golf players?", "What was the Alma Mater of a Belgian golf player?", "What was the Alma Mater of Belgian golf players?", "Which educational institution is the Alma Mater of a Belgian golf player?", "Which educational institution is the Alma Mater of Belgian golf players?", "Which educational institution was the Alma Mater of a Belgian golf player?", "Which educational institution was the Alma Mater of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian racing driver?", "Give me the Alma Mater of Belgian racing drivers?", "Tell me the Alma Mater of a Belgian racing driver?", "Tell me the Alma Mater of Belgian racing drivers?", "What is the Alma Mater of a Belgian racing driver?", "What is the Alma Mater of Belgian racing drivers?", "What was the Alma Mater of a Belgian racing driver?", "What was the Alma Mater of Belgian racing drivers?", "Which educational institution is the Alma Mater of a Belgian racing driver?", "Which educational institution is the Alma Mater of Belgian racing drivers?", "Which educational institution was the Alma Mater of a Belgian racing driver?", "Which educational institution was the Alma Mater of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian politician?", "Give me the Alma Mater of Belgian politicians?", "Tell me the Alma Mater of a Belgian politician?", "Tell me the Alma Mater of Belgian politicians?", "What is the Alma Mater of a Belgian politician?", "What is the Alma Mater of Belgian politicians?", "What was the Alma Mater of a Belgian politician?", "What was the Alma Mater of Belgian politicians?", "Which educational institution is the Alma Mater of a Belgian politician?", "Which educational institution is the Alma Mater of Belgian politicians?", "Which educational institution was the Alma Mater of a Belgian politician?", "Which educational institution was the Alma Mater of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian swimmer?", "Give me the Alma Mater of Belgian swimmers?", "Tell me the Alma Mater of a Belgian swimmer?", "Tell me the Alma Mater of Belgian swimmers?", "What is the Alma Mater of a Belgian swimmer?", "What is the Alma Mater of Belgian swimmers?", "What was the Alma Mater of a Belgian swimmer?", "What was the Alma Mater of Belgian swimmers?", "Which educational institution is the Alma Mater of a Belgian swimmer?", "Which educational institution is the Alma Mater of Belgian swimmers?", "Which educational institution was the Alma Mater of a Belgian swimmer?", "Which educational institution was the Alma Mater of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian volleyball player?", "Give me the Alma Mater of Belgian volleyball players?", "Tell me the Alma Mater of a Belgian volleyball player?", "Tell me the Alma Mater of Belgian volleyball players?", "What is the Alma Mater of a Belgian volleyball player?", "What is the Alma Mater of Belgian volleyball players?", "What was the Alma Mater of a Belgian volleyball player?", "What was the Alma Mater of Belgian volleyball players?", "Which educational institution is the Alma Mater of a Belgian volleyball player?", "Which educational institution is the Alma Mater of Belgian volleyball players?", "Which educational institution was the Alma Mater of a Belgian volleyball player?", "Which educational institution was the Alma Mater of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian person?", "Give me the Alma Mater of Belgian persons?", "Tell me the Alma Mater of a Belgian person?", "Tell me the Alma Mater of Belgian persons?", "What is the Alma Mater of a Belgian person?", "What is the Alma Mater of Belgian persons?", "What was the Alma Mater of a Belgian person?", "What was the Alma Mater of Belgian persons?", "Which educational institution is the Alma Mater of a Belgian person?", "Which educational institution is the Alma Mater of Belgian persons?", "Which educational institution was the Alma Mater of a Belgian person?", "Which educational institution was the Alma Mater of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian comics creator?", "Give me the Alma Mater of Belgian comics creators?", "Tell me the Alma Mater of a Belgian comics creator?", "Tell me the Alma Mater of Belgian comics creators?", "What is the Alma Mater of a Belgian comics creator?", "What is the Alma Mater of Belgian comics creators?", "What was the Alma Mater of a Belgian comics creator?", "What was the Alma Mater of Belgian comics creators?", "Which educational institution is the Alma Mater of a Belgian comics creator?", "Which educational institution is the Alma Mater of Belgian comics creators?", "Which educational institution was the Alma Mater of a Belgian comics creator?", "Which educational institution was the Alma Mater of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian writer?", "Give me the Alma Mater of Belgian writers?", "Tell me the Alma Mater of a Belgian writer?", "Tell me the Alma Mater of Belgian writers?", "What is the Alma Mater of a Belgian writer?", "What is the Alma Mater of Belgian writers?", "What was the Alma Mater of a Belgian writer?", "What was the Alma Mater of Belgian writers?", "Which educational institution is the Alma Mater of a Belgian writer?", "Which educational institution is the Alma Mater of Belgian writers?", "Which educational institution was the Alma Mater of a Belgian writer?", "Which educational institution was the Alma Mater of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorsport racer?", "Give me the Alma Mater of Belgian motorsport racers?", "Tell me the Alma Mater of a Belgian motorsport racer?", "Tell me the Alma Mater of Belgian motorsport racers?", "What is the Alma Mater of a Belgian motorsport racer?", "What is the Alma Mater of Belgian motorsport racers?", "What was the Alma Mater of a Belgian motorsport racer?", "What was the Alma Mater of Belgian motorsport racers?", "Which educational institution is the Alma Mater of a Belgian motorsport racer?", "Which educational institution is the Alma Mater of Belgian motorsport racers?", "Which educational institution was the Alma Mater of a Belgian motorsport racer?", "Which educational institution was the Alma Mater of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of $x?", "Tell me the birth date of the spouse of $x?", "What is the birth date of the spouse of $x?", "What was the birth date of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Luca Zingaretti",
        "uri" : "http://dbpedia.org/resource/Luca_Zingaretti"
      }, {
        "label" : "Lucia Bosè",
        "uri" : "http://dbpedia.org/resource/Lucia_Bosè"
      }, {
        "label" : "Lucia Moholy",
        "uri" : "http://dbpedia.org/resource/Lucia_Moholy"
      }, {
        "label" : "Lucy Turnbull",
        "uri" : "http://dbpedia.org/resource/Lucy_Turnbull"
      }, {
        "label" : "Lucé Vela",
        "uri" : "http://dbpedia.org/resource/Lucé_Vela"
      }, {
        "label" : "Ludu Daw Amar",
        "uri" : "http://dbpedia.org/resource/Ludu_Daw_Amar"
      }, {
        "label" : "Ludu U Hla",
        "uri" : "http://dbpedia.org/resource/Ludu_U_Hla"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Lysette Anthony",
        "uri" : "http://dbpedia.org/resource/Lysette_Anthony"
      }, {
        "label" : "László Moholy-Nagy",
        "uri" : "http://dbpedia.org/resource/László_Moholy-Nagy"
      }, {
        "label" : "M. G. Ramachandran",
        "uri" : "http://dbpedia.org/resource/M._G._Ramachandran"
      }, {
        "label" : "Magdalena Graaf",
        "uri" : "http://dbpedia.org/resource/Magdalena_Graaf"
      }, {
        "label" : "Malcolm Turnbull",
        "uri" : "http://dbpedia.org/resource/Malcolm_Turnbull"
      }, {
        "label" : "V. N. Janaki",
        "uri" : "http://dbpedia.org/resource/V._N._Janaki"
      }, {
        "label" : "Val Butnaru",
        "uri" : "http://dbpedia.org/resource/Val_Butnaru"
      }, {
        "label" : "Valentina Butnaru",
        "uri" : "http://dbpedia.org/resource/Valentina_Butnaru"
      }, {
        "label" : "Valeriy Borzov",
        "uri" : "http://dbpedia.org/resource/Valeriy_Borzov"
      }, {
        "label" : "Vantile Whitfield",
        "uri" : "http://dbpedia.org/resource/Vantile_Whitfield"
      }, {
        "label" : "Vera Tschechowa",
        "uri" : "http://dbpedia.org/resource/Vera_Tschechowa"
      }, {
        "label" : "Veronika Franz and Severin Fiala",
        "uri" : "http://dbpedia.org/resource/Veronika_Franz_and_Severin_Fiala"
      }, {
        "label" : "Marieme Faye Sall",
        "uri" : "http://dbpedia.org/resource/Marieme_Faye_Sall"
      }, {
        "label" : "Sandhya Shantaram",
        "uri" : "http://dbpedia.org/resource/Sandhya_Shantaram"
      }, {
        "label" : "Thomas Hassan",
        "uri" : "http://dbpedia.org/resource/Thomas_Hassan"
      }, {
        "label" : "Hyman B. Samuels",
        "uri" : "http://dbpedia.org/resource/Hyman_B._Samuels"
      }, {
        "label" : "Manuel Sadosky",
        "uri" : "http://dbpedia.org/resource/Manuel_Sadosky"
      }, {
        "label" : "Bjørn Sand",
        "uri" : "http://dbpedia.org/resource/Bjørn_Sand"
      }, {
        "label" : "Deirdre O'Connell",
        "uri" : "http://dbpedia.org/resource/Deirdre_O'Connell"
      }, {
        "label" : "Derya Alabora",
        "uri" : "http://dbpedia.org/resource/Derya_Alabora"
      }, {
        "label" : "Desha Breckinridge",
        "uri" : "http://dbpedia.org/resource/Desha_Breckinridge"
      }, {
        "label" : "Desmond FitzGerald (politician)",
        "uri" : "http://dbpedia.org/resource/Desmond_FitzGerald_(politician)"
      }, {
        "label" : "Diana Wellesley, Duchess of Wellington",
        "uri" : "http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington"
      }, {
        "label" : "Dick Cheney",
        "uri" : "http://dbpedia.org/resource/Dick_Cheney"
      }, {
        "label" : "Gladys Vanderbilt Széchenyi",
        "uri" : "http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Kevin Seal",
        "uri" : "http://dbpedia.org/resource/Kevin_Seal"
      }, {
        "label" : "Khalida Safarova",
        "uri" : "http://dbpedia.org/resource/Khalida_Safarova"
      }, {
        "label" : "Khan Ataur Rahman",
        "uri" : "http://dbpedia.org/resource/Khan_Ataur_Rahman"
      }, {
        "label" : "Kishore Kumar",
        "uri" : "http://dbpedia.org/resource/Kishore_Kumar"
      }, {
        "label" : "Koji Yamamoto (actor)",
        "uri" : "http://dbpedia.org/resource/Koji_Yamamoto_(actor)"
      }, {
        "label" : "Kothamangalam Subbu",
        "uri" : "http://dbpedia.org/resource/Kothamangalam_Subbu"
      }, {
        "label" : "Krishnachandran",
        "uri" : "http://dbpedia.org/resource/Krishnachandran"
      }, {
        "label" : "Priya Bapat",
        "uri" : "http://dbpedia.org/resource/Priya_Bapat"
      }, {
        "label" : "Quinn Martin",
        "uri" : "http://dbpedia.org/resource/Quinn_Martin"
      }, {
        "label" : "Rachel Miner",
        "uri" : "http://dbpedia.org/resource/Rachel_Miner"
      }, {
        "label" : "Rachel Portman",
        "uri" : "http://dbpedia.org/resource/Rachel_Portman"
      }, {
        "label" : "Ragnheiður Melsteð",
        "uri" : "http://dbpedia.org/resource/Ragnheiður_Melsteð"
      }, {
        "label" : "Rajeshwari Sachdev",
        "uri" : "http://dbpedia.org/resource/Rajeshwari_Sachdev"
      }, {
        "label" : "Howard F. Ahmanson Sr.",
        "uri" : "http://dbpedia.org/resource/Howard_F._Ahmanson_Sr."
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Albert S. Ruddy",
        "uri" : "http://dbpedia.org/resource/Albert_S._Ruddy"
      }, {
        "label" : "Alex O'Loughlin",
        "uri" : "http://dbpedia.org/resource/Alex_O'Loughlin"
      }, {
        "label" : "Alexander Godunov",
        "uri" : "http://dbpedia.org/resource/Alexander_Godunov"
      }, {
        "label" : "Alexandre de Lesseps",
        "uri" : "http://dbpedia.org/resource/Alexandre_de_Lesseps"
      }, {
        "label" : "Alfred Lunt",
        "uri" : "http://dbpedia.org/resource/Alfred_Lunt"
      }, {
        "label" : "Alistair Petrie",
        "uri" : "http://dbpedia.org/resource/Alistair_Petrie"
      }, {
        "label" : "Allan Turpin",
        "uri" : "http://dbpedia.org/resource/Allan_Turpin"
      }, {
        "label" : "Allen Paulson",
        "uri" : "http://dbpedia.org/resource/Allen_Paulson"
      }, {
        "label" : "Alma Adamkienė",
        "uri" : "http://dbpedia.org/resource/Alma_Adamkienė"
      }, {
        "label" : "Altiero Spinelli",
        "uri" : "http://dbpedia.org/resource/Altiero_Spinelli"
      }, {
        "label" : "Charlton Heston",
        "uri" : "http://dbpedia.org/resource/Charlton_Heston"
      }, {
        "label" : "Florence Reed",
        "uri" : "http://dbpedia.org/resource/Florence_Reed"
      }, {
        "label" : "Anand Mohan Singh",
        "uri" : "http://dbpedia.org/resource/Anand_Mohan_Singh"
      }, {
        "label" : "Nieves Navarro",
        "uri" : "http://dbpedia.org/resource/Nieves_Navarro"
      }, {
        "label" : "Nijō Motohiro",
        "uri" : "http://dbpedia.org/resource/Nijō_Motohiro"
      }, {
        "label" : "Nikolai Karachentsov",
        "uri" : "http://dbpedia.org/resource/Nikolai_Karachentsov"
      }, {
        "label" : "Nilmini Tennakoon",
        "uri" : "http://dbpedia.org/resource/Nilmini_Tennakoon"
      }, {
        "label" : "Nirmal Kumar",
        "uri" : "http://dbpedia.org/resource/Nirmal_Kumar"
      }, {
        "label" : "Nitin Sahrawat",
        "uri" : "http://dbpedia.org/resource/Nitin_Sahrawat"
      }, {
        "label" : "Nnamdi Azikiwe",
        "uri" : "http://dbpedia.org/resource/Nnamdi_Azikiwe"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Olafr Havrevold",
        "uri" : "http://dbpedia.org/resource/Olafr_Havrevold"
      }, {
        "label" : "Diana Laura Riojas",
        "uri" : "http://dbpedia.org/resource/Diana_Laura_Riojas"
      }, {
        "label" : "George I, Landgrave of Hesse-Darmstadt",
        "uri" : "http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt"
      }, {
        "label" : "Louis John Gardella",
        "uri" : "http://dbpedia.org/resource/Louis_John_Gardella"
      }, {
        "label" : "Sawsan Gabra Ayoub Khalil",
        "uri" : "http://dbpedia.org/resource/Sawsan_Gabra_Ayoub_Khalil"
      }, {
        "label" : "Sulochana Gadgil",
        "uri" : "http://dbpedia.org/resource/Sulochana_Gadgil"
      }, {
        "label" : "Ramabai Peshwa",
        "uri" : "http://dbpedia.org/resource/Ramabai_Peshwa"
      }, {
        "label" : "Azam Farahi",
        "uri" : "http://dbpedia.org/resource/Azam_Farahi"
      }, {
        "label" : "Aïssata Issoufou Mahamadou",
        "uri" : "http://dbpedia.org/resource/Aïssata_Issoufou_Mahamadou"
      }, {
        "label" : "Baburaj (actor)",
        "uri" : "http://dbpedia.org/resource/Baburaj_(actor)"
      }, {
        "label" : "Barbara Stühlmeyer",
        "uri" : "http://dbpedia.org/resource/Barbara_Stühlmeyer"
      }, {
        "label" : "Barbara of Brandenburg, Marquise of Mantua",
        "uri" : "http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua"
      }, {
        "label" : "Barry Levinson",
        "uri" : "http://dbpedia.org/resource/Barry_Levinson"
      }, {
        "label" : "Liya Akhedzhakova",
        "uri" : "http://dbpedia.org/resource/Liya_Akhedzhakova"
      }, {
        "label" : "Lord Frederick Cavendish",
        "uri" : "http://dbpedia.org/resource/Lord_Frederick_Cavendish"
      }, {
        "label" : "Louis-Ferdinand Céline",
        "uri" : "http://dbpedia.org/resource/Louis-Ferdinand_Céline"
      }, {
        "label" : "Caitlin Stasey",
        "uri" : "http://dbpedia.org/resource/Caitlin_Stasey"
      }, {
        "label" : "Cal Rampton",
        "uri" : "http://dbpedia.org/resource/Cal_Rampton"
      }, {
        "label" : "Candace Cameron Bure",
        "uri" : "http://dbpedia.org/resource/Candace_Cameron_Bure"
      }, {
        "label" : "Carl Sagan",
        "uri" : "http://dbpedia.org/resource/Carl_Sagan"
      }, {
        "label" : "Carla Arocha",
        "uri" : "http://dbpedia.org/resource/Carla_Arocha"
      }, {
        "label" : "Carmine Giovinazzo",
        "uri" : "http://dbpedia.org/resource/Carmine_Giovinazzo"
      }, {
        "label" : "Carolina Rivas",
        "uri" : "http://dbpedia.org/resource/Carolina_Rivas"
      }, {
        "label" : "Caroline St-Hilaire",
        "uri" : "http://dbpedia.org/resource/Caroline_St-Hilaire"
      }, {
        "label" : "Catarina de Lencastre, Viscountess of Balsemão",
        "uri" : "http://dbpedia.org/resource/Catarina_de_Lencastre,_Viscountess_of_Balsemão"
      }, {
        "label" : "Chien-Shiung Wu",
        "uri" : "http://dbpedia.org/resource/Chien-Shiung_Wu"
      }, {
        "label" : "Chitrasena",
        "uri" : "http://dbpedia.org/resource/Chitrasena"
      } ]
    },
    "combination" : true
  }, {
    "id" : "161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian prime minister?", "Give me the birth date of Australian prime ministers?", "Tell me the birth date of a Australian prime minister?", "Tell me the birth date of Australian prime ministers?", "What is the birth date of a Australian prime minister?", "What is the birth date of Australian prime ministers?", "What was the birth date of a Australian prime minister?", "What was the birth date of Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian agent?", "Give me the birth date of Australian agents?", "Tell me the birth date of a Australian agent?", "Tell me the birth date of Australian agents?", "What is the birth date of a Australian agent?", "What is the birth date of Australian agents?", "What was the birth date of a Australian agent?", "What was the birth date of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian artist?", "Give me the birth date of Australian artists?", "Tell me the birth date of a Australian artist?", "Tell me the birth date of Australian artists?", "What is the birth date of a Australian artist?", "What is the birth date of Australian artists?", "What was the birth date of a Australian artist?", "What was the birth date of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian motorcycle rider?", "Give me the birth date of Australian motorcycle riders?", "Tell me the birth date of a Australian motorcycle rider?", "Tell me the birth date of Australian motorcycle riders?", "What is the birth date of a Australian motorcycle rider?", "What is the birth date of Australian motorcycle riders?", "What was the birth date of a Australian motorcycle rider?", "What was the birth date of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian scientist?", "Give me the birth date of Australian scientists?", "Tell me the birth date of a Australian scientist?", "Tell me the birth date of Australian scientists?", "What is the birth date of a Australian scientist?", "What is the birth date of Australian scientists?", "What was the birth date of a Australian scientist?", "What was the birth date of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian military person?", "Give me the birth date of Australian military persons?", "Tell me the birth date of a Australian military person?", "Tell me the birth date of Australian military persons?", "What is the birth date of a Australian military person?", "What is the birth date of Australian military persons?", "What was the birth date of a Australian military person?", "What was the birth date of Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian volleyball player?", "Give me the birth date of Australian volleyball players?", "Tell me the birth date of a Australian volleyball player?", "Tell me the birth date of Australian volleyball players?", "What is the birth date of a Australian volleyball player?", "What is the birth date of Australian volleyball players?", "What was the birth date of a Australian volleyball player?", "What was the birth date of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian basketball player?", "Give me the birth date of Australian basketball players?", "Tell me the birth date of a Australian basketball player?", "Tell me the birth date of Australian basketball players?", "What is the birth date of a Australian basketball player?", "What is the birth date of Australian basketball players?", "What was the birth date of a Australian basketball player?", "What was the birth date of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian speedway rider?", "Give me the birth date of Australian speedway riders?", "Tell me the birth date of a Australian speedway rider?", "Tell me the birth date of Australian speedway riders?", "What is the birth date of a Australian speedway rider?", "What is the birth date of Australian speedway riders?", "What was the birth date of a Australian speedway rider?", "What was the birth date of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian model?", "Give me the birth date of Australian models?", "Tell me the birth date of a Australian model?", "Tell me the birth date of Australian models?", "What is the birth date of a Australian model?", "What is the birth date of Australian models?", "What was the birth date of a Australian model?", "What was the birth date of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian motorsport racer?", "Give me the birth date of Australian motorsport racers?", "Tell me the birth date of a Australian motorsport racer?", "Tell me the birth date of Australian motorsport racers?", "What is the birth date of a Australian motorsport racer?", "What is the birth date of Australian motorsport racers?", "What was the birth date of a Australian motorsport racer?", "What was the birth date of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian cleric?", "Give me the birth date of Australian clerics?", "Tell me the birth date of a Australian cleric?", "Tell me the birth date of Australian clerics?", "What is the birth date of a Australian cleric?", "What is the birth date of Australian clerics?", "What was the birth date of a Australian cleric?", "What was the birth date of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian boxer?", "Give me the birth date of Australian boxers?", "Tell me the birth date of a Australian boxer?", "Tell me the birth date of Australian boxers?", "What is the birth date of a Australian boxer?", "What is the birth date of Australian boxers?", "What was the birth date of a Australian boxer?", "What was the birth date of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian office holder?", "Give me the birth date of Australian office holders?", "Tell me the birth date of a Australian office holder?", "Tell me the birth date of Australian office holders?", "What is the birth date of a Australian office holder?", "What is the birth date of Australian office holders?", "What was the birth date of a Australian office holder?", "What was the birth date of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian economist?", "Give me the birth date of Australian economists?", "Tell me the birth date of a Australian economist?", "Tell me the birth date of Australian economists?", "What is the birth date of a Australian economist?", "What is the birth date of Australian economists?", "What was the birth date of a Australian economist?", "What was the birth date of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian fictional character?", "Give me the birth date of Australian fictional characters?", "Tell me the birth date of a Australian fictional character?", "Tell me the birth date of Australian fictional characters?", "What is the birth date of a Australian fictional character?", "What is the birth date of Australian fictional characters?", "What was the birth date of a Australian fictional character?", "What was the birth date of Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian athlete?", "Give me the birth date of Australian athletes?", "Tell me the birth date of a Australian athlete?", "Tell me the birth date of Australian athletes?", "What is the birth date of a Australian athlete?", "What is the birth date of Australian athletes?", "What was the birth date of a Australian athlete?", "What was the birth date of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian racing driver?", "Give me the birth date of Australian racing drivers?", "Tell me the birth date of a Australian racing driver?", "Tell me the birth date of Australian racing drivers?", "What is the birth date of a Australian racing driver?", "What is the birth date of Australian racing drivers?", "What was the birth date of a Australian racing driver?", "What was the birth date of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian golf player?", "Give me the birth date of Australian golf players?", "Tell me the birth date of a Australian golf player?", "Tell me the birth date of Australian golf players?", "What is the birth date of a Australian golf player?", "What is the birth date of Australian golf players?", "What was the birth date of a Australian golf player?", "What was the birth date of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian politician?", "Give me the birth date of Australian politicians?", "Tell me the birth date of a Australian politician?", "Tell me the birth date of Australian politicians?", "What is the birth date of a Australian politician?", "What is the birth date of Australian politicians?", "What was the birth date of a Australian politician?", "What was the birth date of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian swimmer?", "Give me the birth date of Australian swimmers?", "Tell me the birth date of a Australian swimmer?", "Tell me the birth date of Australian swimmers?", "What is the birth date of a Australian swimmer?", "What is the birth date of Australian swimmers?", "What was the birth date of a Australian swimmer?", "What was the birth date of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian handball player?", "Give me the birth date of Australian handball players?", "Tell me the birth date of a Australian handball player?", "Tell me the birth date of Australian handball players?", "What is the birth date of a Australian handball player?", "What is the birth date of Australian handball players?", "What was the birth date of a Australian handball player?", "What was the birth date of Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian person?", "Give me the birth date of Australian persons?", "Tell me the birth date of a Australian person?", "Tell me the birth date of Australian persons?", "What is the birth date of a Australian person?", "What is the birth date of Australian persons?", "What was the birth date of a Australian person?", "What was the birth date of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian Christian Bishop?", "Give me the birth date of Australian Christian Bishops?", "Tell me the birth date of a Australian Christian Bishop?", "Tell me the birth date of Australian Christian Bishops?", "What is the birth date of a Australian Christian Bishop?", "What is the birth date of Australian Christian Bishops?", "What was the birth date of a Australian Christian Bishop?", "What was the birth date of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian writer?", "Give me the birth date of Australian writers?", "Tell me the birth date of a Australian writer?", "Tell me the birth date of Australian writers?", "What is the birth date of a Australian writer?", "What is the birth date of Australian writers?", "What was the birth date of a Australian writer?", "What was the birth date of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian cleric?", "Give me the birth date of Belgian clerics?", "Tell me the birth date of a Belgian cleric?", "Tell me the birth date of Belgian clerics?", "What is the birth date of a Belgian cleric?", "What is the birth date of Belgian clerics?", "What was the birth date of a Belgian cleric?", "What was the birth date of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian office holder?", "Give me the birth date of Belgian office holders?", "Tell me the birth date of a Belgian office holder?", "Tell me the birth date of Belgian office holders?", "What is the birth date of a Belgian office holder?", "What is the birth date of Belgian office holders?", "What was the birth date of a Belgian office holder?", "What was the birth date of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian agent?", "Give me the birth date of Belgian agents?", "Tell me the birth date of a Belgian agent?", "Tell me the birth date of Belgian agents?", "What is the birth date of a Belgian agent?", "What is the birth date of Belgian agents?", "What was the birth date of a Belgian agent?", "What was the birth date of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian economist?", "Give me the birth date of Belgian economists?", "Tell me the birth date of a Belgian economist?", "Tell me the birth date of Belgian economists?", "What is the birth date of a Belgian economist?", "What is the birth date of Belgian economists?", "What was the birth date of a Belgian economist?", "What was the birth date of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorcycle rider?", "Give me the birth date of Belgian motorcycle riders?", "Tell me the birth date of a Belgian motorcycle rider?", "Tell me the birth date of Belgian motorcycle riders?", "What is the birth date of a Belgian motorcycle rider?", "What is the birth date of Belgian motorcycle riders?", "What was the birth date of a Belgian motorcycle rider?", "What was the birth date of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian artist?", "Give me the birth date of Belgian artists?", "Tell me the birth date of a Belgian artist?", "Tell me the birth date of Belgian artists?", "What is the birth date of a Belgian artist?", "What is the birth date of Belgian artists?", "What was the birth date of a Belgian artist?", "What was the birth date of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian athlete?", "Give me the birth date of Belgian athletes?", "Tell me the birth date of a Belgian athlete?", "Tell me the birth date of Belgian athletes?", "What is the birth date of a Belgian athlete?", "What is the birth date of Belgian athletes?", "What was the birth date of a Belgian athlete?", "What was the birth date of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian scientist?", "Give me the birth date of Belgian scientists?", "Tell me the birth date of a Belgian scientist?", "Tell me the birth date of Belgian scientists?", "What is the birth date of a Belgian scientist?", "What is the birth date of Belgian scientists?", "What was the birth date of a Belgian scientist?", "What was the birth date of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian architect?", "Give me the birth date of Belgian architects?", "Tell me the birth date of a Belgian architect?", "Tell me the birth date of Belgian architects?", "What is the birth date of a Belgian architect?", "What is the birth date of Belgian architects?", "What was the birth date of a Belgian architect?", "What was the birth date of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian golf player?", "Give me the birth date of Belgian golf players?", "Tell me the birth date of a Belgian golf player?", "Tell me the birth date of Belgian golf players?", "What is the birth date of a Belgian golf player?", "What is the birth date of Belgian golf players?", "What was the birth date of a Belgian golf player?", "What was the birth date of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian racing driver?", "Give me the birth date of Belgian racing drivers?", "Tell me the birth date of a Belgian racing driver?", "Tell me the birth date of Belgian racing drivers?", "What is the birth date of a Belgian racing driver?", "What is the birth date of Belgian racing drivers?", "What was the birth date of a Belgian racing driver?", "What was the birth date of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian politician?", "Give me the birth date of Belgian politicians?", "Tell me the birth date of a Belgian politician?", "Tell me the birth date of Belgian politicians?", "What is the birth date of a Belgian politician?", "What is the birth date of Belgian politicians?", "What was the birth date of a Belgian politician?", "What was the birth date of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian swimmer?", "Give me the birth date of Belgian swimmers?", "Tell me the birth date of a Belgian swimmer?", "Tell me the birth date of Belgian swimmers?", "What is the birth date of a Belgian swimmer?", "What is the birth date of Belgian swimmers?", "What was the birth date of a Belgian swimmer?", "What was the birth date of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian volleyball player?", "Give me the birth date of Belgian volleyball players?", "Tell me the birth date of a Belgian volleyball player?", "Tell me the birth date of Belgian volleyball players?", "What is the birth date of a Belgian volleyball player?", "What is the birth date of Belgian volleyball players?", "What was the birth date of a Belgian volleyball player?", "What was the birth date of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian person?", "Give me the birth date of Belgian persons?", "Tell me the birth date of a Belgian person?", "Tell me the birth date of Belgian persons?", "What is the birth date of a Belgian person?", "What is the birth date of Belgian persons?", "What was the birth date of a Belgian person?", "What was the birth date of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian comics creator?", "Give me the birth date of Belgian comics creators?", "Tell me the birth date of a Belgian comics creator?", "Tell me the birth date of Belgian comics creators?", "What is the birth date of a Belgian comics creator?", "What is the birth date of Belgian comics creators?", "What was the birth date of a Belgian comics creator?", "What was the birth date of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian writer?", "Give me the birth date of Belgian writers?", "Tell me the birth date of a Belgian writer?", "Tell me the birth date of Belgian writers?", "What is the birth date of a Belgian writer?", "What is the birth date of Belgian writers?", "What was the birth date of a Belgian writer?", "What was the birth date of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorsport racer?", "Give me the birth date of Belgian motorsport racers?", "Tell me the birth date of a Belgian motorsport racer?", "Tell me the birth date of Belgian motorsport racers?", "What is the birth date of a Belgian motorsport racer?", "What is the birth date of Belgian motorsport racers?", "What was the birth date of a Belgian motorsport racer?", "What was the birth date of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of $x?", "Tell me the occupation of the spouse of $x?", "What is the occupation of the spouse of $x?", "What was the occupation of the spouse of $x?", "Which person function is the occupation of the spouse of $x?", "Which person function was the occupation of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Luca Zingaretti",
        "uri" : "http://dbpedia.org/resource/Luca_Zingaretti"
      }, {
        "label" : "Lucia Bosè",
        "uri" : "http://dbpedia.org/resource/Lucia_Bosè"
      }, {
        "label" : "Ludu Daw Amar",
        "uri" : "http://dbpedia.org/resource/Ludu_Daw_Amar"
      }, {
        "label" : "Ludu U Hla",
        "uri" : "http://dbpedia.org/resource/Ludu_U_Hla"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Val Butnaru",
        "uri" : "http://dbpedia.org/resource/Val_Butnaru"
      }, {
        "label" : "Valentina Butnaru",
        "uri" : "http://dbpedia.org/resource/Valentina_Butnaru"
      }, {
        "label" : "Vantile Whitfield",
        "uri" : "http://dbpedia.org/resource/Vantile_Whitfield"
      }, {
        "label" : "Vera Tschechowa",
        "uri" : "http://dbpedia.org/resource/Vera_Tschechowa"
      }, {
        "label" : "Vere Harmsworth, 3rd Viscount Rothermere",
        "uri" : "http://dbpedia.org/resource/Vere_Harmsworth,_3rd_Viscount_Rothermere"
      }, {
        "label" : "Veronika Franz and Severin Fiala",
        "uri" : "http://dbpedia.org/resource/Veronika_Franz_and_Severin_Fiala"
      }, {
        "label" : "Peyton Sawyer",
        "uri" : "http://dbpedia.org/resource/Peyton_Sawyer"
      }, {
        "label" : "Sandhya Shantaram",
        "uri" : "http://dbpedia.org/resource/Sandhya_Shantaram"
      }, {
        "label" : "Hyman B. Samuels",
        "uri" : "http://dbpedia.org/resource/Hyman_B._Samuels"
      }, {
        "label" : "Manuel Sadosky",
        "uri" : "http://dbpedia.org/resource/Manuel_Sadosky"
      }, {
        "label" : "Bjørn Sand",
        "uri" : "http://dbpedia.org/resource/Bjørn_Sand"
      }, {
        "label" : "Deirdre O'Connell",
        "uri" : "http://dbpedia.org/resource/Deirdre_O'Connell"
      }, {
        "label" : "Derya Alabora",
        "uri" : "http://dbpedia.org/resource/Derya_Alabora"
      }, {
        "label" : "Desha Breckinridge",
        "uri" : "http://dbpedia.org/resource/Desha_Breckinridge"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Kevin Seal",
        "uri" : "http://dbpedia.org/resource/Kevin_Seal"
      }, {
        "label" : "Khan Ataur Rahman",
        "uri" : "http://dbpedia.org/resource/Khan_Ataur_Rahman"
      }, {
        "label" : "Kishore Kumar",
        "uri" : "http://dbpedia.org/resource/Kishore_Kumar"
      }, {
        "label" : "Koji Yamamoto (actor)",
        "uri" : "http://dbpedia.org/resource/Koji_Yamamoto_(actor)"
      }, {
        "label" : "Kothamangalam Subbu",
        "uri" : "http://dbpedia.org/resource/Kothamangalam_Subbu"
      }, {
        "label" : "Krishnachandran",
        "uri" : "http://dbpedia.org/resource/Krishnachandran"
      }, {
        "label" : "Priya Bapat",
        "uri" : "http://dbpedia.org/resource/Priya_Bapat"
      }, {
        "label" : "Quinn Martin",
        "uri" : "http://dbpedia.org/resource/Quinn_Martin"
      }, {
        "label" : "Rachel Miner",
        "uri" : "http://dbpedia.org/resource/Rachel_Miner"
      }, {
        "label" : "Rachel Portman",
        "uri" : "http://dbpedia.org/resource/Rachel_Portman"
      }, {
        "label" : "Rajeshwari Sachdev",
        "uri" : "http://dbpedia.org/resource/Rajeshwari_Sachdev"
      }, {
        "label" : "Howard F. Ahmanson Sr.",
        "uri" : "http://dbpedia.org/resource/Howard_F._Ahmanson_Sr."
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Alan Halsall",
        "uri" : "http://dbpedia.org/resource/Alan_Halsall"
      }, {
        "label" : "Alan Quartermaine (General Hospital)",
        "uri" : "http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)"
      }, {
        "label" : "Albert Parsons",
        "uri" : "http://dbpedia.org/resource/Albert_Parsons"
      }, {
        "label" : "Alex O'Loughlin",
        "uri" : "http://dbpedia.org/resource/Alex_O'Loughlin"
      }, {
        "label" : "Alexander Godunov",
        "uri" : "http://dbpedia.org/resource/Alexander_Godunov"
      }, {
        "label" : "Alexandre de Lesseps",
        "uri" : "http://dbpedia.org/resource/Alexandre_de_Lesseps"
      }, {
        "label" : "Alfred Lunt",
        "uri" : "http://dbpedia.org/resource/Alfred_Lunt"
      }, {
        "label" : "Allan Turpin",
        "uri" : "http://dbpedia.org/resource/Allan_Turpin"
      }, {
        "label" : "Allen Paulson",
        "uri" : "http://dbpedia.org/resource/Allen_Paulson"
      }, {
        "label" : "Chetan Anand (director)",
        "uri" : "http://dbpedia.org/resource/Chetan_Anand_(director)"
      }, {
        "label" : "Florence Reed",
        "uri" : "http://dbpedia.org/resource/Florence_Reed"
      }, {
        "label" : "Nieves Navarro",
        "uri" : "http://dbpedia.org/resource/Nieves_Navarro"
      }, {
        "label" : "Nikolai Karachentsov",
        "uri" : "http://dbpedia.org/resource/Nikolai_Karachentsov"
      }, {
        "label" : "Nilmini Tennakoon",
        "uri" : "http://dbpedia.org/resource/Nilmini_Tennakoon"
      }, {
        "label" : "Nitin Sahrawat",
        "uri" : "http://dbpedia.org/resource/Nitin_Sahrawat"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Olafr Havrevold",
        "uri" : "http://dbpedia.org/resource/Olafr_Havrevold"
      }, {
        "label" : "Charlotte King",
        "uri" : "http://dbpedia.org/resource/Charlotte_King"
      }, {
        "label" : "Louis John Gardella",
        "uri" : "http://dbpedia.org/resource/Louis_John_Gardella"
      }, {
        "label" : "Sawsan Gabra Ayoub Khalil",
        "uri" : "http://dbpedia.org/resource/Sawsan_Gabra_Ayoub_Khalil"
      }, {
        "label" : "Avinash",
        "uri" : "http://dbpedia.org/resource/Avinash"
      }, {
        "label" : "Baburaj (actor)",
        "uri" : "http://dbpedia.org/resource/Baburaj_(actor)"
      }, {
        "label" : "Barbara Stühlmeyer",
        "uri" : "http://dbpedia.org/resource/Barbara_Stühlmeyer"
      }, {
        "label" : "Barry Levinson",
        "uri" : "http://dbpedia.org/resource/Barry_Levinson"
      }, {
        "label" : "Liya Akhedzhakova",
        "uri" : "http://dbpedia.org/resource/Liya_Akhedzhakova"
      }, {
        "label" : "Louis-Ferdinand Céline",
        "uri" : "http://dbpedia.org/resource/Louis-Ferdinand_Céline"
      }, {
        "label" : "Caitlin Stasey",
        "uri" : "http://dbpedia.org/resource/Caitlin_Stasey"
      }, {
        "label" : "Carlos the Jackal",
        "uri" : "http://dbpedia.org/resource/Carlos_the_Jackal"
      }, {
        "label" : "Carmine Giovinazzo",
        "uri" : "http://dbpedia.org/resource/Carmine_Giovinazzo"
      }, {
        "label" : "Chitrasena",
        "uri" : "http://dbpedia.org/resource/Chitrasena"
      }, {
        "label" : "Chris Reccardi",
        "uri" : "http://dbpedia.org/resource/Chris_Reccardi"
      }, {
        "label" : "Chris Thompson (TV producer)",
        "uri" : "http://dbpedia.org/resource/Chris_Thompson_(TV_producer)"
      }, {
        "label" : "Cindy Pickett",
        "uri" : "http://dbpedia.org/resource/Cindy_Pickett"
      }, {
        "label" : "Claudia La Gatta",
        "uri" : "http://dbpedia.org/resource/Claudia_La_Gatta"
      }, {
        "label" : "Claudia Razzi",
        "uri" : "http://dbpedia.org/resource/Claudia_Razzi"
      }, {
        "label" : "Clifford Odets",
        "uri" : "http://dbpedia.org/resource/Clifford_Odets"
      }, {
        "label" : "Alex Burns (journalist)",
        "uri" : "http://dbpedia.org/resource/Alex_Burns_(journalist)"
      }, {
        "label" : "Gamze Özçelik",
        "uri" : "http://dbpedia.org/resource/Gamze_Özçelik"
      }, {
        "label" : "Gary Morton",
        "uri" : "http://dbpedia.org/resource/Gary_Morton"
      }, {
        "label" : "Gary Oldman",
        "uri" : "http://dbpedia.org/resource/Gary_Oldman"
      }, {
        "label" : "Gaspar Noé",
        "uri" : "http://dbpedia.org/resource/Gaspar_Noé"
      }, {
        "label" : "Gene Markey",
        "uri" : "http://dbpedia.org/resource/Gene_Markey"
      }, {
        "label" : "George Georgiou",
        "uri" : "http://dbpedia.org/resource/George_Georgiou"
      }, {
        "label" : "George Sanders",
        "uri" : "http://dbpedia.org/resource/George_Sanders"
      }, {
        "label" : "George William Cook",
        "uri" : "http://dbpedia.org/resource/George_William_Cook"
      }, {
        "label" : "Georges Le Faure",
        "uri" : "http://dbpedia.org/resource/Georges_Le_Faure"
      }, {
        "label" : "Georgy Rerberg",
        "uri" : "http://dbpedia.org/resource/Georgy_Rerberg"
      }, {
        "label" : "Jean-Marie Roland de la Platière",
        "uri" : "http://dbpedia.org/resource/Jean-Marie_Roland_de_la_Platière"
      }, {
        "label" : "Jeff Bezos",
        "uri" : "http://dbpedia.org/resource/Jeff_Bezos"
      }, {
        "label" : "Jenny Gröllmann",
        "uri" : "http://dbpedia.org/resource/Jenny_Gröllmann"
      }, {
        "label" : "Jiang Chao",
        "uri" : "http://dbpedia.org/resource/Jiang_Chao"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "Jocelyn Lee (actress)",
        "uri" : "http://dbpedia.org/resource/Jocelyn_Lee_(actress)"
      }, {
        "label" : "John Clark (actor)",
        "uri" : "http://dbpedia.org/resource/John_Clark_(actor)"
      }, {
        "label" : "John Hope (educator)",
        "uri" : "http://dbpedia.org/resource/John_Hope_(educator)"
      }, {
        "label" : "John J. Shea Jr.",
        "uri" : "http://dbpedia.org/resource/John_J._Shea_Jr."
      }, {
        "label" : "John James Audubon",
        "uri" : "http://dbpedia.org/resource/John_James_Audubon"
      }, {
        "label" : "John Katzenbach",
        "uri" : "http://dbpedia.org/resource/John_Katzenbach"
      }, {
        "label" : "John Maynard Keynes",
        "uri" : "http://dbpedia.org/resource/John_Maynard_Keynes"
      }, {
        "label" : "Don Sebastian",
        "uri" : "http://dbpedia.org/resource/Don_Sebastian"
      }, {
        "label" : "Vani Harikrishna",
        "uri" : "http://dbpedia.org/resource/Vani_Harikrishna"
      }, {
        "label" : "Sharat Raju",
        "uri" : "http://dbpedia.org/resource/Sharat_Raju"
      }, {
        "label" : "Behnoosh Tabatabaei",
        "uri" : "http://dbpedia.org/resource/Behnoosh_Tabatabaei"
      }, {
        "label" : "Ben Koldyke",
        "uri" : "http://dbpedia.org/resource/Ben_Koldyke"
      } ]
    },
    "combination" : true
  }, {
    "id" : "205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian prime minister?", "Give me the occupation of Australian prime ministers?", "Tell me the occupation of a Australian prime minister?", "Tell me the occupation of Australian prime ministers?", "What is the occupation of a Australian prime minister?", "What is the occupation of Australian prime ministers?", "What was the occupation of a Australian prime minister?", "What was the occupation of Australian prime ministers?", "Which person function is the occupation of a Australian prime minister?", "Which person function is the occupation of Australian prime ministers?", "Which person function was the occupation of a Australian prime minister?", "Which person function was the occupation of Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian agent?", "Give me the occupation of Australian agents?", "Tell me the occupation of a Australian agent?", "Tell me the occupation of Australian agents?", "What is the occupation of a Australian agent?", "What is the occupation of Australian agents?", "What was the occupation of a Australian agent?", "What was the occupation of Australian agents?", "Which person function is the occupation of a Australian agent?", "Which person function is the occupation of Australian agents?", "Which person function was the occupation of a Australian agent?", "Which person function was the occupation of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian artist?", "Give me the occupation of Australian artists?", "Tell me the occupation of a Australian artist?", "Tell me the occupation of Australian artists?", "What is the occupation of a Australian artist?", "What is the occupation of Australian artists?", "What was the occupation of a Australian artist?", "What was the occupation of Australian artists?", "Which person function is the occupation of a Australian artist?", "Which person function is the occupation of Australian artists?", "Which person function was the occupation of a Australian artist?", "Which person function was the occupation of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian motorcycle rider?", "Give me the occupation of Australian motorcycle riders?", "Tell me the occupation of a Australian motorcycle rider?", "Tell me the occupation of Australian motorcycle riders?", "What is the occupation of a Australian motorcycle rider?", "What is the occupation of Australian motorcycle riders?", "What was the occupation of a Australian motorcycle rider?", "What was the occupation of Australian motorcycle riders?", "Which person function is the occupation of a Australian motorcycle rider?", "Which person function is the occupation of Australian motorcycle riders?", "Which person function was the occupation of a Australian motorcycle rider?", "Which person function was the occupation of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian scientist?", "Give me the occupation of Australian scientists?", "Tell me the occupation of a Australian scientist?", "Tell me the occupation of Australian scientists?", "What is the occupation of a Australian scientist?", "What is the occupation of Australian scientists?", "What was the occupation of a Australian scientist?", "What was the occupation of Australian scientists?", "Which person function is the occupation of a Australian scientist?", "Which person function is the occupation of Australian scientists?", "Which person function was the occupation of a Australian scientist?", "Which person function was the occupation of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian military person?", "Give me the occupation of Australian military persons?", "Tell me the occupation of a Australian military person?", "Tell me the occupation of Australian military persons?", "What is the occupation of a Australian military person?", "What is the occupation of Australian military persons?", "What was the occupation of a Australian military person?", "What was the occupation of Australian military persons?", "Which person function is the occupation of a Australian military person?", "Which person function is the occupation of Australian military persons?", "Which person function was the occupation of a Australian military person?", "Which person function was the occupation of Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian volleyball player?", "Give me the occupation of Australian volleyball players?", "Tell me the occupation of a Australian volleyball player?", "Tell me the occupation of Australian volleyball players?", "What is the occupation of a Australian volleyball player?", "What is the occupation of Australian volleyball players?", "What was the occupation of a Australian volleyball player?", "What was the occupation of Australian volleyball players?", "Which person function is the occupation of a Australian volleyball player?", "Which person function is the occupation of Australian volleyball players?", "Which person function was the occupation of a Australian volleyball player?", "Which person function was the occupation of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian basketball player?", "Give me the occupation of Australian basketball players?", "Tell me the occupation of a Australian basketball player?", "Tell me the occupation of Australian basketball players?", "What is the occupation of a Australian basketball player?", "What is the occupation of Australian basketball players?", "What was the occupation of a Australian basketball player?", "What was the occupation of Australian basketball players?", "Which person function is the occupation of a Australian basketball player?", "Which person function is the occupation of Australian basketball players?", "Which person function was the occupation of a Australian basketball player?", "Which person function was the occupation of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian speedway rider?", "Give me the occupation of Australian speedway riders?", "Tell me the occupation of a Australian speedway rider?", "Tell me the occupation of Australian speedway riders?", "What is the occupation of a Australian speedway rider?", "What is the occupation of Australian speedway riders?", "What was the occupation of a Australian speedway rider?", "What was the occupation of Australian speedway riders?", "Which person function is the occupation of a Australian speedway rider?", "Which person function is the occupation of Australian speedway riders?", "Which person function was the occupation of a Australian speedway rider?", "Which person function was the occupation of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian model?", "Give me the occupation of Australian models?", "Tell me the occupation of a Australian model?", "Tell me the occupation of Australian models?", "What is the occupation of a Australian model?", "What is the occupation of Australian models?", "What was the occupation of a Australian model?", "What was the occupation of Australian models?", "Which person function is the occupation of a Australian model?", "Which person function is the occupation of Australian models?", "Which person function was the occupation of a Australian model?", "Which person function was the occupation of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian motorsport racer?", "Give me the occupation of Australian motorsport racers?", "Tell me the occupation of a Australian motorsport racer?", "Tell me the occupation of Australian motorsport racers?", "What is the occupation of a Australian motorsport racer?", "What is the occupation of Australian motorsport racers?", "What was the occupation of a Australian motorsport racer?", "What was the occupation of Australian motorsport racers?", "Which person function is the occupation of a Australian motorsport racer?", "Which person function is the occupation of Australian motorsport racers?", "Which person function was the occupation of a Australian motorsport racer?", "Which person function was the occupation of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian cleric?", "Give me the occupation of Australian clerics?", "Tell me the occupation of a Australian cleric?", "Tell me the occupation of Australian clerics?", "What is the occupation of a Australian cleric?", "What is the occupation of Australian clerics?", "What was the occupation of a Australian cleric?", "What was the occupation of Australian clerics?", "Which person function is the occupation of a Australian cleric?", "Which person function is the occupation of Australian clerics?", "Which person function was the occupation of a Australian cleric?", "Which person function was the occupation of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian boxer?", "Give me the occupation of Australian boxers?", "Tell me the occupation of a Australian boxer?", "Tell me the occupation of Australian boxers?", "What is the occupation of a Australian boxer?", "What is the occupation of Australian boxers?", "What was the occupation of a Australian boxer?", "What was the occupation of Australian boxers?", "Which person function is the occupation of a Australian boxer?", "Which person function is the occupation of Australian boxers?", "Which person function was the occupation of a Australian boxer?", "Which person function was the occupation of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian office holder?", "Give me the occupation of Australian office holders?", "Tell me the occupation of a Australian office holder?", "Tell me the occupation of Australian office holders?", "What is the occupation of a Australian office holder?", "What is the occupation of Australian office holders?", "What was the occupation of a Australian office holder?", "What was the occupation of Australian office holders?", "Which person function is the occupation of a Australian office holder?", "Which person function is the occupation of Australian office holders?", "Which person function was the occupation of a Australian office holder?", "Which person function was the occupation of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian economist?", "Give me the occupation of Australian economists?", "Tell me the occupation of a Australian economist?", "Tell me the occupation of Australian economists?", "What is the occupation of a Australian economist?", "What is the occupation of Australian economists?", "What was the occupation of a Australian economist?", "What was the occupation of Australian economists?", "Which person function is the occupation of a Australian economist?", "Which person function is the occupation of Australian economists?", "Which person function was the occupation of a Australian economist?", "Which person function was the occupation of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian fictional character?", "Give me the occupation of Australian fictional characters?", "Tell me the occupation of a Australian fictional character?", "Tell me the occupation of Australian fictional characters?", "What is the occupation of a Australian fictional character?", "What is the occupation of Australian fictional characters?", "What was the occupation of a Australian fictional character?", "What was the occupation of Australian fictional characters?", "Which person function is the occupation of a Australian fictional character?", "Which person function is the occupation of Australian fictional characters?", "Which person function was the occupation of a Australian fictional character?", "Which person function was the occupation of Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian athlete?", "Give me the occupation of Australian athletes?", "Tell me the occupation of a Australian athlete?", "Tell me the occupation of Australian athletes?", "What is the occupation of a Australian athlete?", "What is the occupation of Australian athletes?", "What was the occupation of a Australian athlete?", "What was the occupation of Australian athletes?", "Which person function is the occupation of a Australian athlete?", "Which person function is the occupation of Australian athletes?", "Which person function was the occupation of a Australian athlete?", "Which person function was the occupation of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian racing driver?", "Give me the occupation of Australian racing drivers?", "Tell me the occupation of a Australian racing driver?", "Tell me the occupation of Australian racing drivers?", "What is the occupation of a Australian racing driver?", "What is the occupation of Australian racing drivers?", "What was the occupation of a Australian racing driver?", "What was the occupation of Australian racing drivers?", "Which person function is the occupation of a Australian racing driver?", "Which person function is the occupation of Australian racing drivers?", "Which person function was the occupation of a Australian racing driver?", "Which person function was the occupation of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian golf player?", "Give me the occupation of Australian golf players?", "Tell me the occupation of a Australian golf player?", "Tell me the occupation of Australian golf players?", "What is the occupation of a Australian golf player?", "What is the occupation of Australian golf players?", "What was the occupation of a Australian golf player?", "What was the occupation of Australian golf players?", "Which person function is the occupation of a Australian golf player?", "Which person function is the occupation of Australian golf players?", "Which person function was the occupation of a Australian golf player?", "Which person function was the occupation of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian politician?", "Give me the occupation of Australian politicians?", "Tell me the occupation of a Australian politician?", "Tell me the occupation of Australian politicians?", "What is the occupation of a Australian politician?", "What is the occupation of Australian politicians?", "What was the occupation of a Australian politician?", "What was the occupation of Australian politicians?", "Which person function is the occupation of a Australian politician?", "Which person function is the occupation of Australian politicians?", "Which person function was the occupation of a Australian politician?", "Which person function was the occupation of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian swimmer?", "Give me the occupation of Australian swimmers?", "Tell me the occupation of a Australian swimmer?", "Tell me the occupation of Australian swimmers?", "What is the occupation of a Australian swimmer?", "What is the occupation of Australian swimmers?", "What was the occupation of a Australian swimmer?", "What was the occupation of Australian swimmers?", "Which person function is the occupation of a Australian swimmer?", "Which person function is the occupation of Australian swimmers?", "Which person function was the occupation of a Australian swimmer?", "Which person function was the occupation of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian handball player?", "Give me the occupation of Australian handball players?", "Tell me the occupation of a Australian handball player?", "Tell me the occupation of Australian handball players?", "What is the occupation of a Australian handball player?", "What is the occupation of Australian handball players?", "What was the occupation of a Australian handball player?", "What was the occupation of Australian handball players?", "Which person function is the occupation of a Australian handball player?", "Which person function is the occupation of Australian handball players?", "Which person function was the occupation of a Australian handball player?", "Which person function was the occupation of Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian person?", "Give me the occupation of Australian persons?", "Tell me the occupation of a Australian person?", "Tell me the occupation of Australian persons?", "What is the occupation of a Australian person?", "What is the occupation of Australian persons?", "What was the occupation of a Australian person?", "What was the occupation of Australian persons?", "Which person function is the occupation of a Australian person?", "Which person function is the occupation of Australian persons?", "Which person function was the occupation of a Australian person?", "Which person function was the occupation of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian Christian Bishop?", "Give me the occupation of Australian Christian Bishops?", "Tell me the occupation of a Australian Christian Bishop?", "Tell me the occupation of Australian Christian Bishops?", "What is the occupation of a Australian Christian Bishop?", "What is the occupation of Australian Christian Bishops?", "What was the occupation of a Australian Christian Bishop?", "What was the occupation of Australian Christian Bishops?", "Which person function is the occupation of a Australian Christian Bishop?", "Which person function is the occupation of Australian Christian Bishops?", "Which person function was the occupation of a Australian Christian Bishop?", "Which person function was the occupation of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian writer?", "Give me the occupation of Australian writers?", "Tell me the occupation of a Australian writer?", "Tell me the occupation of Australian writers?", "What is the occupation of a Australian writer?", "What is the occupation of Australian writers?", "What was the occupation of a Australian writer?", "What was the occupation of Australian writers?", "Which person function is the occupation of a Australian writer?", "Which person function is the occupation of Australian writers?", "Which person function was the occupation of a Australian writer?", "Which person function was the occupation of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian cleric?", "Give me the occupation of Belgian clerics?", "Tell me the occupation of a Belgian cleric?", "Tell me the occupation of Belgian clerics?", "What is the occupation of a Belgian cleric?", "What is the occupation of Belgian clerics?", "What was the occupation of a Belgian cleric?", "What was the occupation of Belgian clerics?", "Which person function is the occupation of a Belgian cleric?", "Which person function is the occupation of Belgian clerics?", "Which person function was the occupation of a Belgian cleric?", "Which person function was the occupation of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian office holder?", "Give me the occupation of Belgian office holders?", "Tell me the occupation of a Belgian office holder?", "Tell me the occupation of Belgian office holders?", "What is the occupation of a Belgian office holder?", "What is the occupation of Belgian office holders?", "What was the occupation of a Belgian office holder?", "What was the occupation of Belgian office holders?", "Which person function is the occupation of a Belgian office holder?", "Which person function is the occupation of Belgian office holders?", "Which person function was the occupation of a Belgian office holder?", "Which person function was the occupation of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian agent?", "Give me the occupation of Belgian agents?", "Tell me the occupation of a Belgian agent?", "Tell me the occupation of Belgian agents?", "What is the occupation of a Belgian agent?", "What is the occupation of Belgian agents?", "What was the occupation of a Belgian agent?", "What was the occupation of Belgian agents?", "Which person function is the occupation of a Belgian agent?", "Which person function is the occupation of Belgian agents?", "Which person function was the occupation of a Belgian agent?", "Which person function was the occupation of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian economist?", "Give me the occupation of Belgian economists?", "Tell me the occupation of a Belgian economist?", "Tell me the occupation of Belgian economists?", "What is the occupation of a Belgian economist?", "What is the occupation of Belgian economists?", "What was the occupation of a Belgian economist?", "What was the occupation of Belgian economists?", "Which person function is the occupation of a Belgian economist?", "Which person function is the occupation of Belgian economists?", "Which person function was the occupation of a Belgian economist?", "Which person function was the occupation of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorcycle rider?", "Give me the occupation of Belgian motorcycle riders?", "Tell me the occupation of a Belgian motorcycle rider?", "Tell me the occupation of Belgian motorcycle riders?", "What is the occupation of a Belgian motorcycle rider?", "What is the occupation of Belgian motorcycle riders?", "What was the occupation of a Belgian motorcycle rider?", "What was the occupation of Belgian motorcycle riders?", "Which person function is the occupation of a Belgian motorcycle rider?", "Which person function is the occupation of Belgian motorcycle riders?", "Which person function was the occupation of a Belgian motorcycle rider?", "Which person function was the occupation of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian artist?", "Give me the occupation of Belgian artists?", "Tell me the occupation of a Belgian artist?", "Tell me the occupation of Belgian artists?", "What is the occupation of a Belgian artist?", "What is the occupation of Belgian artists?", "What was the occupation of a Belgian artist?", "What was the occupation of Belgian artists?", "Which person function is the occupation of a Belgian artist?", "Which person function is the occupation of Belgian artists?", "Which person function was the occupation of a Belgian artist?", "Which person function was the occupation of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian athlete?", "Give me the occupation of Belgian athletes?", "Tell me the occupation of a Belgian athlete?", "Tell me the occupation of Belgian athletes?", "What is the occupation of a Belgian athlete?", "What is the occupation of Belgian athletes?", "What was the occupation of a Belgian athlete?", "What was the occupation of Belgian athletes?", "Which person function is the occupation of a Belgian athlete?", "Which person function is the occupation of Belgian athletes?", "Which person function was the occupation of a Belgian athlete?", "Which person function was the occupation of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian scientist?", "Give me the occupation of Belgian scientists?", "Tell me the occupation of a Belgian scientist?", "Tell me the occupation of Belgian scientists?", "What is the occupation of a Belgian scientist?", "What is the occupation of Belgian scientists?", "What was the occupation of a Belgian scientist?", "What was the occupation of Belgian scientists?", "Which person function is the occupation of a Belgian scientist?", "Which person function is the occupation of Belgian scientists?", "Which person function was the occupation of a Belgian scientist?", "Which person function was the occupation of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian architect?", "Give me the occupation of Belgian architects?", "Tell me the occupation of a Belgian architect?", "Tell me the occupation of Belgian architects?", "What is the occupation of a Belgian architect?", "What is the occupation of Belgian architects?", "What was the occupation of a Belgian architect?", "What was the occupation of Belgian architects?", "Which person function is the occupation of a Belgian architect?", "Which person function is the occupation of Belgian architects?", "Which person function was the occupation of a Belgian architect?", "Which person function was the occupation of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian golf player?", "Give me the occupation of Belgian golf players?", "Tell me the occupation of a Belgian golf player?", "Tell me the occupation of Belgian golf players?", "What is the occupation of a Belgian golf player?", "What is the occupation of Belgian golf players?", "What was the occupation of a Belgian golf player?", "What was the occupation of Belgian golf players?", "Which person function is the occupation of a Belgian golf player?", "Which person function is the occupation of Belgian golf players?", "Which person function was the occupation of a Belgian golf player?", "Which person function was the occupation of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian racing driver?", "Give me the occupation of Belgian racing drivers?", "Tell me the occupation of a Belgian racing driver?", "Tell me the occupation of Belgian racing drivers?", "What is the occupation of a Belgian racing driver?", "What is the occupation of Belgian racing drivers?", "What was the occupation of a Belgian racing driver?", "What was the occupation of Belgian racing drivers?", "Which person function is the occupation of a Belgian racing driver?", "Which person function is the occupation of Belgian racing drivers?", "Which person function was the occupation of a Belgian racing driver?", "Which person function was the occupation of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian politician?", "Give me the occupation of Belgian politicians?", "Tell me the occupation of a Belgian politician?", "Tell me the occupation of Belgian politicians?", "What is the occupation of a Belgian politician?", "What is the occupation of Belgian politicians?", "What was the occupation of a Belgian politician?", "What was the occupation of Belgian politicians?", "Which person function is the occupation of a Belgian politician?", "Which person function is the occupation of Belgian politicians?", "Which person function was the occupation of a Belgian politician?", "Which person function was the occupation of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian swimmer?", "Give me the occupation of Belgian swimmers?", "Tell me the occupation of a Belgian swimmer?", "Tell me the occupation of Belgian swimmers?", "What is the occupation of a Belgian swimmer?", "What is the occupation of Belgian swimmers?", "What was the occupation of a Belgian swimmer?", "What was the occupation of Belgian swimmers?", "Which person function is the occupation of a Belgian swimmer?", "Which person function is the occupation of Belgian swimmers?", "Which person function was the occupation of a Belgian swimmer?", "Which person function was the occupation of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian volleyball player?", "Give me the occupation of Belgian volleyball players?", "Tell me the occupation of a Belgian volleyball player?", "Tell me the occupation of Belgian volleyball players?", "What is the occupation of a Belgian volleyball player?", "What is the occupation of Belgian volleyball players?", "What was the occupation of a Belgian volleyball player?", "What was the occupation of Belgian volleyball players?", "Which person function is the occupation of a Belgian volleyball player?", "Which person function is the occupation of Belgian volleyball players?", "Which person function was the occupation of a Belgian volleyball player?", "Which person function was the occupation of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian person?", "Give me the occupation of Belgian persons?", "Tell me the occupation of a Belgian person?", "Tell me the occupation of Belgian persons?", "What is the occupation of a Belgian person?", "What is the occupation of Belgian persons?", "What was the occupation of a Belgian person?", "What was the occupation of Belgian persons?", "Which person function is the occupation of a Belgian person?", "Which person function is the occupation of Belgian persons?", "Which person function was the occupation of a Belgian person?", "Which person function was the occupation of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian comics creator?", "Give me the occupation of Belgian comics creators?", "Tell me the occupation of a Belgian comics creator?", "Tell me the occupation of Belgian comics creators?", "What is the occupation of a Belgian comics creator?", "What is the occupation of Belgian comics creators?", "What was the occupation of a Belgian comics creator?", "What was the occupation of Belgian comics creators?", "Which person function is the occupation of a Belgian comics creator?", "Which person function is the occupation of Belgian comics creators?", "Which person function was the occupation of a Belgian comics creator?", "Which person function was the occupation of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian writer?", "Give me the occupation of Belgian writers?", "Tell me the occupation of a Belgian writer?", "Tell me the occupation of Belgian writers?", "What is the occupation of a Belgian writer?", "What is the occupation of Belgian writers?", "What was the occupation of a Belgian writer?", "What was the occupation of Belgian writers?", "Which person function is the occupation of a Belgian writer?", "Which person function is the occupation of Belgian writers?", "Which person function was the occupation of a Belgian writer?", "Which person function was the occupation of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorsport racer?", "Give me the occupation of Belgian motorsport racers?", "Tell me the occupation of a Belgian motorsport racer?", "Tell me the occupation of Belgian motorsport racers?", "What is the occupation of a Belgian motorsport racer?", "What is the occupation of Belgian motorsport racers?", "What was the occupation of a Belgian motorsport racer?", "What was the occupation of Belgian motorsport racers?", "Which person function is the occupation of a Belgian motorsport racer?", "Which person function is the occupation of Belgian motorsport racers?", "Which person function was the occupation of a Belgian motorsport racer?", "Which person function was the occupation of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of $x?", "Tell me the birth place of the spouse of $x?", "What is the birth place of the spouse of $x?", "What was the birth place of the spouse of $x?", "Which place is the birth place of the spouse of $x?", "Which place was the birth place of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Luca Zingaretti",
        "uri" : "http://dbpedia.org/resource/Luca_Zingaretti"
      }, {
        "label" : "Lucia Bosè",
        "uri" : "http://dbpedia.org/resource/Lucia_Bosè"
      }, {
        "label" : "Lucia Moholy",
        "uri" : "http://dbpedia.org/resource/Lucia_Moholy"
      }, {
        "label" : "Lucy Turnbull",
        "uri" : "http://dbpedia.org/resource/Lucy_Turnbull"
      }, {
        "label" : "Lucé Vela",
        "uri" : "http://dbpedia.org/resource/Lucé_Vela"
      }, {
        "label" : "Ludu Daw Amar",
        "uri" : "http://dbpedia.org/resource/Ludu_Daw_Amar"
      }, {
        "label" : "Ludu U Hla",
        "uri" : "http://dbpedia.org/resource/Ludu_U_Hla"
      }, {
        "label" : "Luis Fortuño",
        "uri" : "http://dbpedia.org/resource/Luis_Fortuño"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Lysette Anthony",
        "uri" : "http://dbpedia.org/resource/Lysette_Anthony"
      }, {
        "label" : "László Moholy-Nagy",
        "uri" : "http://dbpedia.org/resource/László_Moholy-Nagy"
      }, {
        "label" : "M. G. Ramachandran",
        "uri" : "http://dbpedia.org/resource/M._G._Ramachandran"
      }, {
        "label" : "M. N. Rajam",
        "uri" : "http://dbpedia.org/resource/M._N._Rajam"
      }, {
        "label" : "Magdalena Graaf",
        "uri" : "http://dbpedia.org/resource/Magdalena_Graaf"
      }, {
        "label" : "Malcolm Turnbull",
        "uri" : "http://dbpedia.org/resource/Malcolm_Turnbull"
      }, {
        "label" : "Utaybah bin Abu Lahab",
        "uri" : "http://dbpedia.org/resource/Utaybah_bin_Abu_Lahab"
      }, {
        "label" : "V. N. Janaki",
        "uri" : "http://dbpedia.org/resource/V._N._Janaki"
      }, {
        "label" : "Val Butnaru",
        "uri" : "http://dbpedia.org/resource/Val_Butnaru"
      }, {
        "label" : "Valentina Butnaru",
        "uri" : "http://dbpedia.org/resource/Valentina_Butnaru"
      }, {
        "label" : "Valeriy Borzov",
        "uri" : "http://dbpedia.org/resource/Valeriy_Borzov"
      }, {
        "label" : "Vantile Whitfield",
        "uri" : "http://dbpedia.org/resource/Vantile_Whitfield"
      }, {
        "label" : "Vera Tschechowa",
        "uri" : "http://dbpedia.org/resource/Vera_Tschechowa"
      }, {
        "label" : "Veronika Franz and Severin Fiala",
        "uri" : "http://dbpedia.org/resource/Veronika_Franz_and_Severin_Fiala"
      }, {
        "label" : "Marieme Faye Sall",
        "uri" : "http://dbpedia.org/resource/Marieme_Faye_Sall"
      }, {
        "label" : "Sandhya Shantaram",
        "uri" : "http://dbpedia.org/resource/Sandhya_Shantaram"
      }, {
        "label" : "George Grierson (printer)",
        "uri" : "http://dbpedia.org/resource/George_Grierson_(printer)"
      }, {
        "label" : "Thomas Hassan",
        "uri" : "http://dbpedia.org/resource/Thomas_Hassan"
      }, {
        "label" : "Hyman B. Samuels",
        "uri" : "http://dbpedia.org/resource/Hyman_B._Samuels"
      }, {
        "label" : "Manuel Sadosky",
        "uri" : "http://dbpedia.org/resource/Manuel_Sadosky"
      }, {
        "label" : "Bjørn Sand",
        "uri" : "http://dbpedia.org/resource/Bjørn_Sand"
      }, {
        "label" : "Bořivoj I, Duke of Bohemia",
        "uri" : "http://dbpedia.org/resource/Bořivoj_I,_Duke_of_Bohemia"
      }, {
        "label" : "Deirdre O'Connell",
        "uri" : "http://dbpedia.org/resource/Deirdre_O'Connell"
      }, {
        "label" : "Derya Alabora",
        "uri" : "http://dbpedia.org/resource/Derya_Alabora"
      }, {
        "label" : "Desha Breckinridge",
        "uri" : "http://dbpedia.org/resource/Desha_Breckinridge"
      }, {
        "label" : "Desmond FitzGerald (politician)",
        "uri" : "http://dbpedia.org/resource/Desmond_FitzGerald_(politician)"
      }, {
        "label" : "Diana Wellesley, Duchess of Wellington",
        "uri" : "http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington"
      }, {
        "label" : "Dick Cheney",
        "uri" : "http://dbpedia.org/resource/Dick_Cheney"
      }, {
        "label" : "Gladys Vanderbilt Széchenyi",
        "uri" : "http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Gu Yong",
        "uri" : "http://dbpedia.org/resource/Gu_Yong"
      }, {
        "label" : "Kevin Seal",
        "uri" : "http://dbpedia.org/resource/Kevin_Seal"
      }, {
        "label" : "Khalida Safarova",
        "uri" : "http://dbpedia.org/resource/Khalida_Safarova"
      }, {
        "label" : "Kishore Kumar",
        "uri" : "http://dbpedia.org/resource/Kishore_Kumar"
      }, {
        "label" : "Koji Yamamoto (actor)",
        "uri" : "http://dbpedia.org/resource/Koji_Yamamoto_(actor)"
      }, {
        "label" : "Kothamangalam Subbu",
        "uri" : "http://dbpedia.org/resource/Kothamangalam_Subbu"
      }, {
        "label" : "Krishnachandran",
        "uri" : "http://dbpedia.org/resource/Krishnachandran"
      }, {
        "label" : "Priya Bapat",
        "uri" : "http://dbpedia.org/resource/Priya_Bapat"
      }, {
        "label" : "Quinn Martin",
        "uri" : "http://dbpedia.org/resource/Quinn_Martin"
      }, {
        "label" : "Rachel Portman",
        "uri" : "http://dbpedia.org/resource/Rachel_Portman"
      }, {
        "label" : "Ragnheiður Melsteð",
        "uri" : "http://dbpedia.org/resource/Ragnheiður_Melsteð"
      }, {
        "label" : "Rajeshwari Sachdev",
        "uri" : "http://dbpedia.org/resource/Rajeshwari_Sachdev"
      }, {
        "label" : "Howard F. Ahmanson Sr.",
        "uri" : "http://dbpedia.org/resource/Howard_F._Ahmanson_Sr."
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Alan Halsall",
        "uri" : "http://dbpedia.org/resource/Alan_Halsall"
      }, {
        "label" : "Albert Parsons",
        "uri" : "http://dbpedia.org/resource/Albert_Parsons"
      }, {
        "label" : "Albert S. Ruddy",
        "uri" : "http://dbpedia.org/resource/Albert_S._Ruddy"
      }, {
        "label" : "Alex O'Loughlin",
        "uri" : "http://dbpedia.org/resource/Alex_O'Loughlin"
      }, {
        "label" : "Alexander Godunov",
        "uri" : "http://dbpedia.org/resource/Alexander_Godunov"
      }, {
        "label" : "Alexandra Jacobi",
        "uri" : "http://dbpedia.org/resource/Alexandra_Jacobi"
      }, {
        "label" : "Alfred Lunt",
        "uri" : "http://dbpedia.org/resource/Alfred_Lunt"
      }, {
        "label" : "Ali",
        "uri" : "http://dbpedia.org/resource/Ali"
      }, {
        "label" : "Allan Turpin",
        "uri" : "http://dbpedia.org/resource/Allan_Turpin"
      }, {
        "label" : "Allen Paulson",
        "uri" : "http://dbpedia.org/resource/Allen_Paulson"
      }, {
        "label" : "Alma Adamkienė",
        "uri" : "http://dbpedia.org/resource/Alma_Adamkienė"
      }, {
        "label" : "Altiero Spinelli",
        "uri" : "http://dbpedia.org/resource/Altiero_Spinelli"
      }, {
        "label" : "Cathal Goan",
        "uri" : "http://dbpedia.org/resource/Cathal_Goan"
      }, {
        "label" : "Charlton Heston",
        "uri" : "http://dbpedia.org/resource/Charlton_Heston"
      }, {
        "label" : "Chetan Anand (director)",
        "uri" : "http://dbpedia.org/resource/Chetan_Anand_(director)"
      }, {
        "label" : "Florence Reed",
        "uri" : "http://dbpedia.org/resource/Florence_Reed"
      }, {
        "label" : "Nieves Navarro",
        "uri" : "http://dbpedia.org/resource/Nieves_Navarro"
      }, {
        "label" : "Nijō Motohiro",
        "uri" : "http://dbpedia.org/resource/Nijō_Motohiro"
      }, {
        "label" : "Nikolai Karachentsov",
        "uri" : "http://dbpedia.org/resource/Nikolai_Karachentsov"
      }, {
        "label" : "Nilmini Tennakoon",
        "uri" : "http://dbpedia.org/resource/Nilmini_Tennakoon"
      }, {
        "label" : "Nirmal Kumar",
        "uri" : "http://dbpedia.org/resource/Nirmal_Kumar"
      }, {
        "label" : "Nitin Sahrawat",
        "uri" : "http://dbpedia.org/resource/Nitin_Sahrawat"
      }, {
        "label" : "Nnamdi Azikiwe",
        "uri" : "http://dbpedia.org/resource/Nnamdi_Azikiwe"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Noel Buxton",
        "uri" : "http://dbpedia.org/resource/Noel_Buxton"
      }, {
        "label" : "Noriko Shinohara",
        "uri" : "http://dbpedia.org/resource/Noriko_Shinohara"
      }, {
        "label" : "Olafr Havrevold",
        "uri" : "http://dbpedia.org/resource/Olafr_Havrevold"
      }, {
        "label" : "Diana Laura Riojas",
        "uri" : "http://dbpedia.org/resource/Diana_Laura_Riojas"
      }, {
        "label" : "George I, Landgrave of Hesse-Darmstadt",
        "uri" : "http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt"
      }, {
        "label" : "Louis John Gardella",
        "uri" : "http://dbpedia.org/resource/Louis_John_Gardella"
      }, {
        "label" : "Sulochana Gadgil",
        "uri" : "http://dbpedia.org/resource/Sulochana_Gadgil"
      }, {
        "label" : "Ramabai Peshwa",
        "uri" : "http://dbpedia.org/resource/Ramabai_Peshwa"
      }, {
        "label" : "Avinash",
        "uri" : "http://dbpedia.org/resource/Avinash"
      }, {
        "label" : "Azam Farahi",
        "uri" : "http://dbpedia.org/resource/Azam_Farahi"
      }, {
        "label" : "Aïssata Issoufou Mahamadou",
        "uri" : "http://dbpedia.org/resource/Aïssata_Issoufou_Mahamadou"
      }, {
        "label" : "Baburaj (actor)",
        "uri" : "http://dbpedia.org/resource/Baburaj_(actor)"
      }, {
        "label" : "Barbara Stühlmeyer",
        "uri" : "http://dbpedia.org/resource/Barbara_Stühlmeyer"
      }, {
        "label" : "Barbara of Brandenburg, Marquise of Mantua",
        "uri" : "http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua"
      }, {
        "label" : "Barry Levinson",
        "uri" : "http://dbpedia.org/resource/Barry_Levinson"
      }, {
        "label" : "Art Linares",
        "uri" : "http://dbpedia.org/resource/Art_Linares"
      }, {
        "label" : "Liya Akhedzhakova",
        "uri" : "http://dbpedia.org/resource/Liya_Akhedzhakova"
      }, {
        "label" : "Lord Frederick Cavendish",
        "uri" : "http://dbpedia.org/resource/Lord_Frederick_Cavendish"
      }, {
        "label" : "Louis-Ferdinand Céline",
        "uri" : "http://dbpedia.org/resource/Louis-Ferdinand_Céline"
      }, {
        "label" : "Caitlin Stasey",
        "uri" : "http://dbpedia.org/resource/Caitlin_Stasey"
      } ]
    },
    "combination" : true
  }, {
    "id" : "249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian prime minister?", "Give me the birth place of Australian prime ministers?", "Tell me the birth place of a Australian prime minister?", "Tell me the birth place of Australian prime ministers?", "What is the birth place of a Australian prime minister?", "What is the birth place of Australian prime ministers?", "What was the birth place of a Australian prime minister?", "What was the birth place of Australian prime ministers?", "Which place is the birth place of a Australian prime minister?", "Which place is the birth place of Australian prime ministers?", "Which place was the birth place of a Australian prime minister?", "Which place was the birth place of Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian agent?", "Give me the birth place of Australian agents?", "Tell me the birth place of a Australian agent?", "Tell me the birth place of Australian agents?", "What is the birth place of a Australian agent?", "What is the birth place of Australian agents?", "What was the birth place of a Australian agent?", "What was the birth place of Australian agents?", "Which place is the birth place of a Australian agent?", "Which place is the birth place of Australian agents?", "Which place was the birth place of a Australian agent?", "Which place was the birth place of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian artist?", "Give me the birth place of Australian artists?", "Tell me the birth place of a Australian artist?", "Tell me the birth place of Australian artists?", "What is the birth place of a Australian artist?", "What is the birth place of Australian artists?", "What was the birth place of a Australian artist?", "What was the birth place of Australian artists?", "Which place is the birth place of a Australian artist?", "Which place is the birth place of Australian artists?", "Which place was the birth place of a Australian artist?", "Which place was the birth place of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian motorcycle rider?", "Give me the birth place of Australian motorcycle riders?", "Tell me the birth place of a Australian motorcycle rider?", "Tell me the birth place of Australian motorcycle riders?", "What is the birth place of a Australian motorcycle rider?", "What is the birth place of Australian motorcycle riders?", "What was the birth place of a Australian motorcycle rider?", "What was the birth place of Australian motorcycle riders?", "Which place is the birth place of a Australian motorcycle rider?", "Which place is the birth place of Australian motorcycle riders?", "Which place was the birth place of a Australian motorcycle rider?", "Which place was the birth place of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian scientist?", "Give me the birth place of Australian scientists?", "Tell me the birth place of a Australian scientist?", "Tell me the birth place of Australian scientists?", "What is the birth place of a Australian scientist?", "What is the birth place of Australian scientists?", "What was the birth place of a Australian scientist?", "What was the birth place of Australian scientists?", "Which place is the birth place of a Australian scientist?", "Which place is the birth place of Australian scientists?", "Which place was the birth place of a Australian scientist?", "Which place was the birth place of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian military person?", "Give me the birth place of Australian military persons?", "Tell me the birth place of a Australian military person?", "Tell me the birth place of Australian military persons?", "What is the birth place of a Australian military person?", "What is the birth place of Australian military persons?", "What was the birth place of a Australian military person?", "What was the birth place of Australian military persons?", "Which place is the birth place of a Australian military person?", "Which place is the birth place of Australian military persons?", "Which place was the birth place of a Australian military person?", "Which place was the birth place of Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian volleyball player?", "Give me the birth place of Australian volleyball players?", "Tell me the birth place of a Australian volleyball player?", "Tell me the birth place of Australian volleyball players?", "What is the birth place of a Australian volleyball player?", "What is the birth place of Australian volleyball players?", "What was the birth place of a Australian volleyball player?", "What was the birth place of Australian volleyball players?", "Which place is the birth place of a Australian volleyball player?", "Which place is the birth place of Australian volleyball players?", "Which place was the birth place of a Australian volleyball player?", "Which place was the birth place of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian basketball player?", "Give me the birth place of Australian basketball players?", "Tell me the birth place of a Australian basketball player?", "Tell me the birth place of Australian basketball players?", "What is the birth place of a Australian basketball player?", "What is the birth place of Australian basketball players?", "What was the birth place of a Australian basketball player?", "What was the birth place of Australian basketball players?", "Which place is the birth place of a Australian basketball player?", "Which place is the birth place of Australian basketball players?", "Which place was the birth place of a Australian basketball player?", "Which place was the birth place of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian speedway rider?", "Give me the birth place of Australian speedway riders?", "Tell me the birth place of a Australian speedway rider?", "Tell me the birth place of Australian speedway riders?", "What is the birth place of a Australian speedway rider?", "What is the birth place of Australian speedway riders?", "What was the birth place of a Australian speedway rider?", "What was the birth place of Australian speedway riders?", "Which place is the birth place of a Australian speedway rider?", "Which place is the birth place of Australian speedway riders?", "Which place was the birth place of a Australian speedway rider?", "Which place was the birth place of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian model?", "Give me the birth place of Australian models?", "Tell me the birth place of a Australian model?", "Tell me the birth place of Australian models?", "What is the birth place of a Australian model?", "What is the birth place of Australian models?", "What was the birth place of a Australian model?", "What was the birth place of Australian models?", "Which place is the birth place of a Australian model?", "Which place is the birth place of Australian models?", "Which place was the birth place of a Australian model?", "Which place was the birth place of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian motorsport racer?", "Give me the birth place of Australian motorsport racers?", "Tell me the birth place of a Australian motorsport racer?", "Tell me the birth place of Australian motorsport racers?", "What is the birth place of a Australian motorsport racer?", "What is the birth place of Australian motorsport racers?", "What was the birth place of a Australian motorsport racer?", "What was the birth place of Australian motorsport racers?", "Which place is the birth place of a Australian motorsport racer?", "Which place is the birth place of Australian motorsport racers?", "Which place was the birth place of a Australian motorsport racer?", "Which place was the birth place of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian cleric?", "Give me the birth place of Australian clerics?", "Tell me the birth place of a Australian cleric?", "Tell me the birth place of Australian clerics?", "What is the birth place of a Australian cleric?", "What is the birth place of Australian clerics?", "What was the birth place of a Australian cleric?", "What was the birth place of Australian clerics?", "Which place is the birth place of a Australian cleric?", "Which place is the birth place of Australian clerics?", "Which place was the birth place of a Australian cleric?", "Which place was the birth place of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian boxer?", "Give me the birth place of Australian boxers?", "Tell me the birth place of a Australian boxer?", "Tell me the birth place of Australian boxers?", "What is the birth place of a Australian boxer?", "What is the birth place of Australian boxers?", "What was the birth place of a Australian boxer?", "What was the birth place of Australian boxers?", "Which place is the birth place of a Australian boxer?", "Which place is the birth place of Australian boxers?", "Which place was the birth place of a Australian boxer?", "Which place was the birth place of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian office holder?", "Give me the birth place of Australian office holders?", "Tell me the birth place of a Australian office holder?", "Tell me the birth place of Australian office holders?", "What is the birth place of a Australian office holder?", "What is the birth place of Australian office holders?", "What was the birth place of a Australian office holder?", "What was the birth place of Australian office holders?", "Which place is the birth place of a Australian office holder?", "Which place is the birth place of Australian office holders?", "Which place was the birth place of a Australian office holder?", "Which place was the birth place of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian economist?", "Give me the birth place of Australian economists?", "Tell me the birth place of a Australian economist?", "Tell me the birth place of Australian economists?", "What is the birth place of a Australian economist?", "What is the birth place of Australian economists?", "What was the birth place of a Australian economist?", "What was the birth place of Australian economists?", "Which place is the birth place of a Australian economist?", "Which place is the birth place of Australian economists?", "Which place was the birth place of a Australian economist?", "Which place was the birth place of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian fictional character?", "Give me the birth place of Australian fictional characters?", "Tell me the birth place of a Australian fictional character?", "Tell me the birth place of Australian fictional characters?", "What is the birth place of a Australian fictional character?", "What is the birth place of Australian fictional characters?", "What was the birth place of a Australian fictional character?", "What was the birth place of Australian fictional characters?", "Which place is the birth place of a Australian fictional character?", "Which place is the birth place of Australian fictional characters?", "Which place was the birth place of a Australian fictional character?", "Which place was the birth place of Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian athlete?", "Give me the birth place of Australian athletes?", "Tell me the birth place of a Australian athlete?", "Tell me the birth place of Australian athletes?", "What is the birth place of a Australian athlete?", "What is the birth place of Australian athletes?", "What was the birth place of a Australian athlete?", "What was the birth place of Australian athletes?", "Which place is the birth place of a Australian athlete?", "Which place is the birth place of Australian athletes?", "Which place was the birth place of a Australian athlete?", "Which place was the birth place of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian racing driver?", "Give me the birth place of Australian racing drivers?", "Tell me the birth place of a Australian racing driver?", "Tell me the birth place of Australian racing drivers?", "What is the birth place of a Australian racing driver?", "What is the birth place of Australian racing drivers?", "What was the birth place of a Australian racing driver?", "What was the birth place of Australian racing drivers?", "Which place is the birth place of a Australian racing driver?", "Which place is the birth place of Australian racing drivers?", "Which place was the birth place of a Australian racing driver?", "Which place was the birth place of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian golf player?", "Give me the birth place of Australian golf players?", "Tell me the birth place of a Australian golf player?", "Tell me the birth place of Australian golf players?", "What is the birth place of a Australian golf player?", "What is the birth place of Australian golf players?", "What was the birth place of a Australian golf player?", "What was the birth place of Australian golf players?", "Which place is the birth place of a Australian golf player?", "Which place is the birth place of Australian golf players?", "Which place was the birth place of a Australian golf player?", "Which place was the birth place of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian politician?", "Give me the birth place of Australian politicians?", "Tell me the birth place of a Australian politician?", "Tell me the birth place of Australian politicians?", "What is the birth place of a Australian politician?", "What is the birth place of Australian politicians?", "What was the birth place of a Australian politician?", "What was the birth place of Australian politicians?", "Which place is the birth place of a Australian politician?", "Which place is the birth place of Australian politicians?", "Which place was the birth place of a Australian politician?", "Which place was the birth place of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian swimmer?", "Give me the birth place of Australian swimmers?", "Tell me the birth place of a Australian swimmer?", "Tell me the birth place of Australian swimmers?", "What is the birth place of a Australian swimmer?", "What is the birth place of Australian swimmers?", "What was the birth place of a Australian swimmer?", "What was the birth place of Australian swimmers?", "Which place is the birth place of a Australian swimmer?", "Which place is the birth place of Australian swimmers?", "Which place was the birth place of a Australian swimmer?", "Which place was the birth place of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian handball player?", "Give me the birth place of Australian handball players?", "Tell me the birth place of a Australian handball player?", "Tell me the birth place of Australian handball players?", "What is the birth place of a Australian handball player?", "What is the birth place of Australian handball players?", "What was the birth place of a Australian handball player?", "What was the birth place of Australian handball players?", "Which place is the birth place of a Australian handball player?", "Which place is the birth place of Australian handball players?", "Which place was the birth place of a Australian handball player?", "Which place was the birth place of Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian person?", "Give me the birth place of Australian persons?", "Tell me the birth place of a Australian person?", "Tell me the birth place of Australian persons?", "What is the birth place of a Australian person?", "What is the birth place of Australian persons?", "What was the birth place of a Australian person?", "What was the birth place of Australian persons?", "Which place is the birth place of a Australian person?", "Which place is the birth place of Australian persons?", "Which place was the birth place of a Australian person?", "Which place was the birth place of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian Christian Bishop?", "Give me the birth place of Australian Christian Bishops?", "Tell me the birth place of a Australian Christian Bishop?", "Tell me the birth place of Australian Christian Bishops?", "What is the birth place of a Australian Christian Bishop?", "What is the birth place of Australian Christian Bishops?", "What was the birth place of a Australian Christian Bishop?", "What was the birth place of Australian Christian Bishops?", "Which place is the birth place of a Australian Christian Bishop?", "Which place is the birth place of Australian Christian Bishops?", "Which place was the birth place of a Australian Christian Bishop?", "Which place was the birth place of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian writer?", "Give me the birth place of Australian writers?", "Tell me the birth place of a Australian writer?", "Tell me the birth place of Australian writers?", "What is the birth place of a Australian writer?", "What is the birth place of Australian writers?", "What was the birth place of a Australian writer?", "What was the birth place of Australian writers?", "Which place is the birth place of a Australian writer?", "Which place is the birth place of Australian writers?", "Which place was the birth place of a Australian writer?", "Which place was the birth place of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian cleric?", "Give me the birth place of Belgian clerics?", "Tell me the birth place of a Belgian cleric?", "Tell me the birth place of Belgian clerics?", "What is the birth place of a Belgian cleric?", "What is the birth place of Belgian clerics?", "What was the birth place of a Belgian cleric?", "What was the birth place of Belgian clerics?", "Which place is the birth place of a Belgian cleric?", "Which place is the birth place of Belgian clerics?", "Which place was the birth place of a Belgian cleric?", "Which place was the birth place of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian office holder?", "Give me the birth place of Belgian office holders?", "Tell me the birth place of a Belgian office holder?", "Tell me the birth place of Belgian office holders?", "What is the birth place of a Belgian office holder?", "What is the birth place of Belgian office holders?", "What was the birth place of a Belgian office holder?", "What was the birth place of Belgian office holders?", "Which place is the birth place of a Belgian office holder?", "Which place is the birth place of Belgian office holders?", "Which place was the birth place of a Belgian office holder?", "Which place was the birth place of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian agent?", "Give me the birth place of Belgian agents?", "Tell me the birth place of a Belgian agent?", "Tell me the birth place of Belgian agents?", "What is the birth place of a Belgian agent?", "What is the birth place of Belgian agents?", "What was the birth place of a Belgian agent?", "What was the birth place of Belgian agents?", "Which place is the birth place of a Belgian agent?", "Which place is the birth place of Belgian agents?", "Which place was the birth place of a Belgian agent?", "Which place was the birth place of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian economist?", "Give me the birth place of Belgian economists?", "Tell me the birth place of a Belgian economist?", "Tell me the birth place of Belgian economists?", "What is the birth place of a Belgian economist?", "What is the birth place of Belgian economists?", "What was the birth place of a Belgian economist?", "What was the birth place of Belgian economists?", "Which place is the birth place of a Belgian economist?", "Which place is the birth place of Belgian economists?", "Which place was the birth place of a Belgian economist?", "Which place was the birth place of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorcycle rider?", "Give me the birth place of Belgian motorcycle riders?", "Tell me the birth place of a Belgian motorcycle rider?", "Tell me the birth place of Belgian motorcycle riders?", "What is the birth place of a Belgian motorcycle rider?", "What is the birth place of Belgian motorcycle riders?", "What was the birth place of a Belgian motorcycle rider?", "What was the birth place of Belgian motorcycle riders?", "Which place is the birth place of a Belgian motorcycle rider?", "Which place is the birth place of Belgian motorcycle riders?", "Which place was the birth place of a Belgian motorcycle rider?", "Which place was the birth place of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian artist?", "Give me the birth place of Belgian artists?", "Tell me the birth place of a Belgian artist?", "Tell me the birth place of Belgian artists?", "What is the birth place of a Belgian artist?", "What is the birth place of Belgian artists?", "What was the birth place of a Belgian artist?", "What was the birth place of Belgian artists?", "Which place is the birth place of a Belgian artist?", "Which place is the birth place of Belgian artists?", "Which place was the birth place of a Belgian artist?", "Which place was the birth place of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian athlete?", "Give me the birth place of Belgian athletes?", "Tell me the birth place of a Belgian athlete?", "Tell me the birth place of Belgian athletes?", "What is the birth place of a Belgian athlete?", "What is the birth place of Belgian athletes?", "What was the birth place of a Belgian athlete?", "What was the birth place of Belgian athletes?", "Which place is the birth place of a Belgian athlete?", "Which place is the birth place of Belgian athletes?", "Which place was the birth place of a Belgian athlete?", "Which place was the birth place of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian scientist?", "Give me the birth place of Belgian scientists?", "Tell me the birth place of a Belgian scientist?", "Tell me the birth place of Belgian scientists?", "What is the birth place of a Belgian scientist?", "What is the birth place of Belgian scientists?", "What was the birth place of a Belgian scientist?", "What was the birth place of Belgian scientists?", "Which place is the birth place of a Belgian scientist?", "Which place is the birth place of Belgian scientists?", "Which place was the birth place of a Belgian scientist?", "Which place was the birth place of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian architect?", "Give me the birth place of Belgian architects?", "Tell me the birth place of a Belgian architect?", "Tell me the birth place of Belgian architects?", "What is the birth place of a Belgian architect?", "What is the birth place of Belgian architects?", "What was the birth place of a Belgian architect?", "What was the birth place of Belgian architects?", "Which place is the birth place of a Belgian architect?", "Which place is the birth place of Belgian architects?", "Which place was the birth place of a Belgian architect?", "Which place was the birth place of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian golf player?", "Give me the birth place of Belgian golf players?", "Tell me the birth place of a Belgian golf player?", "Tell me the birth place of Belgian golf players?", "What is the birth place of a Belgian golf player?", "What is the birth place of Belgian golf players?", "What was the birth place of a Belgian golf player?", "What was the birth place of Belgian golf players?", "Which place is the birth place of a Belgian golf player?", "Which place is the birth place of Belgian golf players?", "Which place was the birth place of a Belgian golf player?", "Which place was the birth place of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian racing driver?", "Give me the birth place of Belgian racing drivers?", "Tell me the birth place of a Belgian racing driver?", "Tell me the birth place of Belgian racing drivers?", "What is the birth place of a Belgian racing driver?", "What is the birth place of Belgian racing drivers?", "What was the birth place of a Belgian racing driver?", "What was the birth place of Belgian racing drivers?", "Which place is the birth place of a Belgian racing driver?", "Which place is the birth place of Belgian racing drivers?", "Which place was the birth place of a Belgian racing driver?", "Which place was the birth place of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian politician?", "Give me the birth place of Belgian politicians?", "Tell me the birth place of a Belgian politician?", "Tell me the birth place of Belgian politicians?", "What is the birth place of a Belgian politician?", "What is the birth place of Belgian politicians?", "What was the birth place of a Belgian politician?", "What was the birth place of Belgian politicians?", "Which place is the birth place of a Belgian politician?", "Which place is the birth place of Belgian politicians?", "Which place was the birth place of a Belgian politician?", "Which place was the birth place of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian swimmer?", "Give me the birth place of Belgian swimmers?", "Tell me the birth place of a Belgian swimmer?", "Tell me the birth place of Belgian swimmers?", "What is the birth place of a Belgian swimmer?", "What is the birth place of Belgian swimmers?", "What was the birth place of a Belgian swimmer?", "What was the birth place of Belgian swimmers?", "Which place is the birth place of a Belgian swimmer?", "Which place is the birth place of Belgian swimmers?", "Which place was the birth place of a Belgian swimmer?", "Which place was the birth place of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian volleyball player?", "Give me the birth place of Belgian volleyball players?", "Tell me the birth place of a Belgian volleyball player?", "Tell me the birth place of Belgian volleyball players?", "What is the birth place of a Belgian volleyball player?", "What is the birth place of Belgian volleyball players?", "What was the birth place of a Belgian volleyball player?", "What was the birth place of Belgian volleyball players?", "Which place is the birth place of a Belgian volleyball player?", "Which place is the birth place of Belgian volleyball players?", "Which place was the birth place of a Belgian volleyball player?", "Which place was the birth place of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian person?", "Give me the birth place of Belgian persons?", "Tell me the birth place of a Belgian person?", "Tell me the birth place of Belgian persons?", "What is the birth place of a Belgian person?", "What is the birth place of Belgian persons?", "What was the birth place of a Belgian person?", "What was the birth place of Belgian persons?", "Which place is the birth place of a Belgian person?", "Which place is the birth place of Belgian persons?", "Which place was the birth place of a Belgian person?", "Which place was the birth place of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian comics creator?", "Give me the birth place of Belgian comics creators?", "Tell me the birth place of a Belgian comics creator?", "Tell me the birth place of Belgian comics creators?", "What is the birth place of a Belgian comics creator?", "What is the birth place of Belgian comics creators?", "What was the birth place of a Belgian comics creator?", "What was the birth place of Belgian comics creators?", "Which place is the birth place of a Belgian comics creator?", "Which place is the birth place of Belgian comics creators?", "Which place was the birth place of a Belgian comics creator?", "Which place was the birth place of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian writer?", "Give me the birth place of Belgian writers?", "Tell me the birth place of a Belgian writer?", "Tell me the birth place of Belgian writers?", "What is the birth place of a Belgian writer?", "What is the birth place of Belgian writers?", "What was the birth place of a Belgian writer?", "What was the birth place of Belgian writers?", "Which place is the birth place of a Belgian writer?", "Which place is the birth place of Belgian writers?", "Which place was the birth place of a Belgian writer?", "Which place was the birth place of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorsport racer?", "Give me the birth place of Belgian motorsport racers?", "Tell me the birth place of a Belgian motorsport racer?", "Tell me the birth place of Belgian motorsport racers?", "What is the birth place of a Belgian motorsport racer?", "What is the birth place of Belgian motorsport racers?", "What was the birth place of a Belgian motorsport racer?", "What was the birth place of Belgian motorsport racers?", "Which place is the birth place of a Belgian motorsport racer?", "Which place is the birth place of Belgian motorsport racers?", "Which place was the birth place of a Belgian motorsport racer?", "Which place was the birth place of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of $x?", "Tell me the spouse of the spouse of $x?", "What is the spouse of the spouse of $x?", "What was the spouse of the spouse of $x?", "Which person is the spouse of the spouse of $x?", "Which person was the spouse of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Luca Zingaretti",
        "uri" : "http://dbpedia.org/resource/Luca_Zingaretti"
      }, {
        "label" : "Lucia Moholy",
        "uri" : "http://dbpedia.org/resource/Lucia_Moholy"
      }, {
        "label" : "Lucilla",
        "uri" : "http://dbpedia.org/resource/Lucilla"
      }, {
        "label" : "Lucius Verus",
        "uri" : "http://dbpedia.org/resource/Lucius_Verus"
      }, {
        "label" : "Lucy Turnbull",
        "uri" : "http://dbpedia.org/resource/Lucy_Turnbull"
      }, {
        "label" : "Lucé Vela",
        "uri" : "http://dbpedia.org/resource/Lucé_Vela"
      }, {
        "label" : "Ludu Daw Amar",
        "uri" : "http://dbpedia.org/resource/Ludu_Daw_Amar"
      }, {
        "label" : "Ludu U Hla",
        "uri" : "http://dbpedia.org/resource/Ludu_U_Hla"
      }, {
        "label" : "Luis Fortuño",
        "uri" : "http://dbpedia.org/resource/Luis_Fortuño"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Lysette Anthony",
        "uri" : "http://dbpedia.org/resource/Lysette_Anthony"
      }, {
        "label" : "László Moholy-Nagy",
        "uri" : "http://dbpedia.org/resource/László_Moholy-Nagy"
      }, {
        "label" : "M. G. Ramachandran",
        "uri" : "http://dbpedia.org/resource/M._G._Ramachandran"
      }, {
        "label" : "Malcolm Turnbull",
        "uri" : "http://dbpedia.org/resource/Malcolm_Turnbull"
      }, {
        "label" : "Maldev Rathore",
        "uri" : "http://dbpedia.org/resource/Maldev_Rathore"
      }, {
        "label" : "Utaybah bin Abu Lahab",
        "uri" : "http://dbpedia.org/resource/Utaybah_bin_Abu_Lahab"
      }, {
        "label" : "V. N. Janaki",
        "uri" : "http://dbpedia.org/resource/V._N._Janaki"
      }, {
        "label" : "Val Butnaru",
        "uri" : "http://dbpedia.org/resource/Val_Butnaru"
      }, {
        "label" : "Valentina Butnaru",
        "uri" : "http://dbpedia.org/resource/Valentina_Butnaru"
      }, {
        "label" : "Vantile Whitfield",
        "uri" : "http://dbpedia.org/resource/Vantile_Whitfield"
      }, {
        "label" : "Vera Tschechowa",
        "uri" : "http://dbpedia.org/resource/Vera_Tschechowa"
      }, {
        "label" : "Vere Harmsworth, 3rd Viscount Rothermere",
        "uri" : "http://dbpedia.org/resource/Vere_Harmsworth,_3rd_Viscount_Rothermere"
      }, {
        "label" : "Marie Say",
        "uri" : "http://dbpedia.org/resource/Marie_Say"
      }, {
        "label" : "Marieme Faye Sall",
        "uri" : "http://dbpedia.org/resource/Marieme_Faye_Sall"
      }, {
        "label" : "Peyton Sawyer",
        "uri" : "http://dbpedia.org/resource/Peyton_Sawyer"
      }, {
        "label" : "Rusudan of Circassia",
        "uri" : "http://dbpedia.org/resource/Rusudan_of_Circassia"
      }, {
        "label" : "Sandhya Shantaram",
        "uri" : "http://dbpedia.org/resource/Sandhya_Shantaram"
      }, {
        "label" : "Solomonia Saburova",
        "uri" : "http://dbpedia.org/resource/Solomonia_Saburova"
      }, {
        "label" : "George Grierson (printer)",
        "uri" : "http://dbpedia.org/resource/George_Grierson_(printer)"
      }, {
        "label" : "Thomas Hassan",
        "uri" : "http://dbpedia.org/resource/Thomas_Hassan"
      }, {
        "label" : "Hyman B. Samuels",
        "uri" : "http://dbpedia.org/resource/Hyman_B._Samuels"
      }, {
        "label" : "Suriyothai",
        "uri" : "http://dbpedia.org/resource/Suriyothai"
      }, {
        "label" : "Manuel Sadosky",
        "uri" : "http://dbpedia.org/resource/Manuel_Sadosky"
      }, {
        "label" : "Bjørn Sand",
        "uri" : "http://dbpedia.org/resource/Bjørn_Sand"
      }, {
        "label" : "Blanche of Namur",
        "uri" : "http://dbpedia.org/resource/Blanche_of_Namur"
      }, {
        "label" : "Derya Alabora",
        "uri" : "http://dbpedia.org/resource/Derya_Alabora"
      }, {
        "label" : "Desmond FitzGerald (politician)",
        "uri" : "http://dbpedia.org/resource/Desmond_FitzGerald_(politician)"
      }, {
        "label" : "Diana Wellesley, Duchess of Wellington",
        "uri" : "http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington"
      }, {
        "label" : "Dick Cheney",
        "uri" : "http://dbpedia.org/resource/Dick_Cheney"
      }, {
        "label" : "Gladys Vanderbilt Széchenyi",
        "uri" : "http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Greg Penner",
        "uri" : "http://dbpedia.org/resource/Greg_Penner"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Kevin Seal",
        "uri" : "http://dbpedia.org/resource/Kevin_Seal"
      }, {
        "label" : "Khalida Safarova",
        "uri" : "http://dbpedia.org/resource/Khalida_Safarova"
      }, {
        "label" : "Khan Ataur Rahman",
        "uri" : "http://dbpedia.org/resource/Khan_Ataur_Rahman"
      }, {
        "label" : "Kishore Kumar",
        "uri" : "http://dbpedia.org/resource/Kishore_Kumar"
      }, {
        "label" : "Koji Yamamoto (actor)",
        "uri" : "http://dbpedia.org/resource/Koji_Yamamoto_(actor)"
      }, {
        "label" : "Kothamangalam Subbu",
        "uri" : "http://dbpedia.org/resource/Kothamangalam_Subbu"
      }, {
        "label" : "Krishnachandran",
        "uri" : "http://dbpedia.org/resource/Krishnachandran"
      }, {
        "label" : "Prince Sahle Selassie",
        "uri" : "http://dbpedia.org/resource/Prince_Sahle_Selassie"
      }, {
        "label" : "Prince Xavier of Bourbon-Parma",
        "uri" : "http://dbpedia.org/resource/Prince_Xavier_of_Bourbon-Parma"
      }, {
        "label" : "Priya Bapat",
        "uri" : "http://dbpedia.org/resource/Priya_Bapat"
      }, {
        "label" : "Puranmal",
        "uri" : "http://dbpedia.org/resource/Puranmal"
      }, {
        "label" : "Pwa Saw",
        "uri" : "http://dbpedia.org/resource/Pwa_Saw"
      }, {
        "label" : "Queen Ratna of Nepal",
        "uri" : "http://dbpedia.org/resource/Queen_Ratna_of_Nepal"
      }, {
        "label" : "Quinn Martin",
        "uri" : "http://dbpedia.org/resource/Quinn_Martin"
      }, {
        "label" : "Qutlugh Nigar Khanum",
        "uri" : "http://dbpedia.org/resource/Qutlugh_Nigar_Khanum"
      }, {
        "label" : "Rachel Miner",
        "uri" : "http://dbpedia.org/resource/Rachel_Miner"
      }, {
        "label" : "Rachel Portman",
        "uri" : "http://dbpedia.org/resource/Rachel_Portman"
      }, {
        "label" : "Rajeshwari Sachdev",
        "uri" : "http://dbpedia.org/resource/Rajeshwari_Sachdev"
      }, {
        "label" : "Howard F. Ahmanson Sr.",
        "uri" : "http://dbpedia.org/resource/Howard_F._Ahmanson_Sr."
      }, {
        "label" : "James II of Cyprus",
        "uri" : "http://dbpedia.org/resource/James_II_of_Cyprus"
      }, {
        "label" : "Phoebe Halliwell",
        "uri" : "http://dbpedia.org/resource/Phoebe_Halliwell"
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Alan Halsall",
        "uri" : "http://dbpedia.org/resource/Alan_Halsall"
      }, {
        "label" : "Alan Quartermaine (General Hospital)",
        "uri" : "http://dbpedia.org/resource/Alan_Quartermaine_(General_Hospital)"
      }, {
        "label" : "Albert Parsons",
        "uri" : "http://dbpedia.org/resource/Albert_Parsons"
      }, {
        "label" : "Albert S. Ruddy",
        "uri" : "http://dbpedia.org/resource/Albert_S._Ruddy"
      }, {
        "label" : "Alex O'Loughlin",
        "uri" : "http://dbpedia.org/resource/Alex_O'Loughlin"
      }, {
        "label" : "Alexander Godunov",
        "uri" : "http://dbpedia.org/resource/Alexander_Godunov"
      }, {
        "label" : "Alexandre de Lesseps",
        "uri" : "http://dbpedia.org/resource/Alexandre_de_Lesseps"
      }, {
        "label" : "Alexandrine de Bleschamp",
        "uri" : "http://dbpedia.org/resource/Alexandrine_de_Bleschamp"
      }, {
        "label" : "Alfonso I d'Este, Duke of Ferrara",
        "uri" : "http://dbpedia.org/resource/Alfonso_I_d'Este,_Duke_of_Ferrara"
      }, {
        "label" : "Alfonso of Aragon (1481–1500)",
        "uri" : "http://dbpedia.org/resource/Alfonso_of_Aragon_(1481–1500)"
      }, {
        "label" : "Alfred Lunt",
        "uri" : "http://dbpedia.org/resource/Alfred_Lunt"
      }, {
        "label" : "Ali",
        "uri" : "http://dbpedia.org/resource/Ali"
      }, {
        "label" : "Alistair Petrie",
        "uri" : "http://dbpedia.org/resource/Alistair_Petrie"
      }, {
        "label" : "Allan Turpin",
        "uri" : "http://dbpedia.org/resource/Allan_Turpin"
      }, {
        "label" : "Allen Paulson",
        "uri" : "http://dbpedia.org/resource/Allen_Paulson"
      }, {
        "label" : "Alma Adamkienė",
        "uri" : "http://dbpedia.org/resource/Alma_Adamkienė"
      }, {
        "label" : "Charles, Count of Valois",
        "uri" : "http://dbpedia.org/resource/Charles,_Count_of_Valois"
      }, {
        "label" : "Charles III Philip, Elector Palatine",
        "uri" : "http://dbpedia.org/resource/Charles_III_Philip,_Elector_Palatine"
      }, {
        "label" : "Charles III William, Margrave of Baden-Durlach",
        "uri" : "http://dbpedia.org/resource/Charles_III_William,_Margrave_of_Baden-Durlach"
      }, {
        "label" : "Charles XI of Sweden",
        "uri" : "http://dbpedia.org/resource/Charles_XI_of_Sweden"
      }, {
        "label" : "Charlton Heston",
        "uri" : "http://dbpedia.org/resource/Charlton_Heston"
      }, {
        "label" : "Chetan Anand (director)",
        "uri" : "http://dbpedia.org/resource/Chetan_Anand_(director)"
      }, {
        "label" : "Florence Reed",
        "uri" : "http://dbpedia.org/resource/Florence_Reed"
      }, {
        "label" : "Anand Mohan Singh",
        "uri" : "http://dbpedia.org/resource/Anand_Mohan_Singh"
      }, {
        "label" : "Nieves Navarro",
        "uri" : "http://dbpedia.org/resource/Nieves_Navarro"
      }, {
        "label" : "Nijō Motohiro",
        "uri" : "http://dbpedia.org/resource/Nijō_Motohiro"
      }, {
        "label" : "Nilmini Tennakoon",
        "uri" : "http://dbpedia.org/resource/Nilmini_Tennakoon"
      }, {
        "label" : "Nitin Sahrawat",
        "uri" : "http://dbpedia.org/resource/Nitin_Sahrawat"
      }, {
        "label" : "Nnamdi Azikiwe",
        "uri" : "http://dbpedia.org/resource/Nnamdi_Azikiwe"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Noriko Shinohara",
        "uri" : "http://dbpedia.org/resource/Noriko_Shinohara"
      }, {
        "label" : "Olafr Havrevold",
        "uri" : "http://dbpedia.org/resource/Olafr_Havrevold"
      }, {
        "label" : "Charlotte King",
        "uri" : "http://dbpedia.org/resource/Charlotte_King"
      } ]
    },
    "combination" : true
  }, {
    "id" : "293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian prime minister?", "Give me the spouse of Australian prime ministers?", "Tell me the spouse of a Australian prime minister?", "Tell me the spouse of Australian prime ministers?", "What is the spouse of a Australian prime minister?", "What is the spouse of Australian prime ministers?", "What was the spouse of a Australian prime minister?", "What was the spouse of Australian prime ministers?", "Which person is the spouse of a Australian prime minister?", "Which person is the spouse of Australian prime ministers?", "Which person was the spouse of a Australian prime minister?", "Which person was the spouse of Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian agent?", "Give me the spouse of Australian agents?", "Tell me the spouse of a Australian agent?", "Tell me the spouse of Australian agents?", "What is the spouse of a Australian agent?", "What is the spouse of Australian agents?", "What was the spouse of a Australian agent?", "What was the spouse of Australian agents?", "Which person is the spouse of a Australian agent?", "Which person is the spouse of Australian agents?", "Which person was the spouse of a Australian agent?", "Which person was the spouse of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian artist?", "Give me the spouse of Australian artists?", "Tell me the spouse of a Australian artist?", "Tell me the spouse of Australian artists?", "What is the spouse of a Australian artist?", "What is the spouse of Australian artists?", "What was the spouse of a Australian artist?", "What was the spouse of Australian artists?", "Which person is the spouse of a Australian artist?", "Which person is the spouse of Australian artists?", "Which person was the spouse of a Australian artist?", "Which person was the spouse of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian motorcycle rider?", "Give me the spouse of Australian motorcycle riders?", "Tell me the spouse of a Australian motorcycle rider?", "Tell me the spouse of Australian motorcycle riders?", "What is the spouse of a Australian motorcycle rider?", "What is the spouse of Australian motorcycle riders?", "What was the spouse of a Australian motorcycle rider?", "What was the spouse of Australian motorcycle riders?", "Which person is the spouse of a Australian motorcycle rider?", "Which person is the spouse of Australian motorcycle riders?", "Which person was the spouse of a Australian motorcycle rider?", "Which person was the spouse of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian scientist?", "Give me the spouse of Australian scientists?", "Tell me the spouse of a Australian scientist?", "Tell me the spouse of Australian scientists?", "What is the spouse of a Australian scientist?", "What is the spouse of Australian scientists?", "What was the spouse of a Australian scientist?", "What was the spouse of Australian scientists?", "Which person is the spouse of a Australian scientist?", "Which person is the spouse of Australian scientists?", "Which person was the spouse of a Australian scientist?", "Which person was the spouse of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian military person?", "Give me the spouse of Australian military persons?", "Tell me the spouse of a Australian military person?", "Tell me the spouse of Australian military persons?", "What is the spouse of a Australian military person?", "What is the spouse of Australian military persons?", "What was the spouse of a Australian military person?", "What was the spouse of Australian military persons?", "Which person is the spouse of a Australian military person?", "Which person is the spouse of Australian military persons?", "Which person was the spouse of a Australian military person?", "Which person was the spouse of Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian volleyball player?", "Give me the spouse of Australian volleyball players?", "Tell me the spouse of a Australian volleyball player?", "Tell me the spouse of Australian volleyball players?", "What is the spouse of a Australian volleyball player?", "What is the spouse of Australian volleyball players?", "What was the spouse of a Australian volleyball player?", "What was the spouse of Australian volleyball players?", "Which person is the spouse of a Australian volleyball player?", "Which person is the spouse of Australian volleyball players?", "Which person was the spouse of a Australian volleyball player?", "Which person was the spouse of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian basketball player?", "Give me the spouse of Australian basketball players?", "Tell me the spouse of a Australian basketball player?", "Tell me the spouse of Australian basketball players?", "What is the spouse of a Australian basketball player?", "What is the spouse of Australian basketball players?", "What was the spouse of a Australian basketball player?", "What was the spouse of Australian basketball players?", "Which person is the spouse of a Australian basketball player?", "Which person is the spouse of Australian basketball players?", "Which person was the spouse of a Australian basketball player?", "Which person was the spouse of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian speedway rider?", "Give me the spouse of Australian speedway riders?", "Tell me the spouse of a Australian speedway rider?", "Tell me the spouse of Australian speedway riders?", "What is the spouse of a Australian speedway rider?", "What is the spouse of Australian speedway riders?", "What was the spouse of a Australian speedway rider?", "What was the spouse of Australian speedway riders?", "Which person is the spouse of a Australian speedway rider?", "Which person is the spouse of Australian speedway riders?", "Which person was the spouse of a Australian speedway rider?", "Which person was the spouse of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian model?", "Give me the spouse of Australian models?", "Tell me the spouse of a Australian model?", "Tell me the spouse of Australian models?", "What is the spouse of a Australian model?", "What is the spouse of Australian models?", "What was the spouse of a Australian model?", "What was the spouse of Australian models?", "Which person is the spouse of a Australian model?", "Which person is the spouse of Australian models?", "Which person was the spouse of a Australian model?", "Which person was the spouse of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian motorsport racer?", "Give me the spouse of Australian motorsport racers?", "Tell me the spouse of a Australian motorsport racer?", "Tell me the spouse of Australian motorsport racers?", "What is the spouse of a Australian motorsport racer?", "What is the spouse of Australian motorsport racers?", "What was the spouse of a Australian motorsport racer?", "What was the spouse of Australian motorsport racers?", "Which person is the spouse of a Australian motorsport racer?", "Which person is the spouse of Australian motorsport racers?", "Which person was the spouse of a Australian motorsport racer?", "Which person was the spouse of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian cleric?", "Give me the spouse of Australian clerics?", "Tell me the spouse of a Australian cleric?", "Tell me the spouse of Australian clerics?", "What is the spouse of a Australian cleric?", "What is the spouse of Australian clerics?", "What was the spouse of a Australian cleric?", "What was the spouse of Australian clerics?", "Which person is the spouse of a Australian cleric?", "Which person is the spouse of Australian clerics?", "Which person was the spouse of a Australian cleric?", "Which person was the spouse of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian boxer?", "Give me the spouse of Australian boxers?", "Tell me the spouse of a Australian boxer?", "Tell me the spouse of Australian boxers?", "What is the spouse of a Australian boxer?", "What is the spouse of Australian boxers?", "What was the spouse of a Australian boxer?", "What was the spouse of Australian boxers?", "Which person is the spouse of a Australian boxer?", "Which person is the spouse of Australian boxers?", "Which person was the spouse of a Australian boxer?", "Which person was the spouse of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian office holder?", "Give me the spouse of Australian office holders?", "Tell me the spouse of a Australian office holder?", "Tell me the spouse of Australian office holders?", "What is the spouse of a Australian office holder?", "What is the spouse of Australian office holders?", "What was the spouse of a Australian office holder?", "What was the spouse of Australian office holders?", "Which person is the spouse of a Australian office holder?", "Which person is the spouse of Australian office holders?", "Which person was the spouse of a Australian office holder?", "Which person was the spouse of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian economist?", "Give me the spouse of Australian economists?", "Tell me the spouse of a Australian economist?", "Tell me the spouse of Australian economists?", "What is the spouse of a Australian economist?", "What is the spouse of Australian economists?", "What was the spouse of a Australian economist?", "What was the spouse of Australian economists?", "Which person is the spouse of a Australian economist?", "Which person is the spouse of Australian economists?", "Which person was the spouse of a Australian economist?", "Which person was the spouse of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian fictional character?", "Give me the spouse of Australian fictional characters?", "Tell me the spouse of a Australian fictional character?", "Tell me the spouse of Australian fictional characters?", "What is the spouse of a Australian fictional character?", "What is the spouse of Australian fictional characters?", "What was the spouse of a Australian fictional character?", "What was the spouse of Australian fictional characters?", "Which person is the spouse of a Australian fictional character?", "Which person is the spouse of Australian fictional characters?", "Which person was the spouse of a Australian fictional character?", "Which person was the spouse of Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian athlete?", "Give me the spouse of Australian athletes?", "Tell me the spouse of a Australian athlete?", "Tell me the spouse of Australian athletes?", "What is the spouse of a Australian athlete?", "What is the spouse of Australian athletes?", "What was the spouse of a Australian athlete?", "What was the spouse of Australian athletes?", "Which person is the spouse of a Australian athlete?", "Which person is the spouse of Australian athletes?", "Which person was the spouse of a Australian athlete?", "Which person was the spouse of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian racing driver?", "Give me the spouse of Australian racing drivers?", "Tell me the spouse of a Australian racing driver?", "Tell me the spouse of Australian racing drivers?", "What is the spouse of a Australian racing driver?", "What is the spouse of Australian racing drivers?", "What was the spouse of a Australian racing driver?", "What was the spouse of Australian racing drivers?", "Which person is the spouse of a Australian racing driver?", "Which person is the spouse of Australian racing drivers?", "Which person was the spouse of a Australian racing driver?", "Which person was the spouse of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian golf player?", "Give me the spouse of Australian golf players?", "Tell me the spouse of a Australian golf player?", "Tell me the spouse of Australian golf players?", "What is the spouse of a Australian golf player?", "What is the spouse of Australian golf players?", "What was the spouse of a Australian golf player?", "What was the spouse of Australian golf players?", "Which person is the spouse of a Australian golf player?", "Which person is the spouse of Australian golf players?", "Which person was the spouse of a Australian golf player?", "Which person was the spouse of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian politician?", "Give me the spouse of Australian politicians?", "Tell me the spouse of a Australian politician?", "Tell me the spouse of Australian politicians?", "What is the spouse of a Australian politician?", "What is the spouse of Australian politicians?", "What was the spouse of a Australian politician?", "What was the spouse of Australian politicians?", "Which person is the spouse of a Australian politician?", "Which person is the spouse of Australian politicians?", "Which person was the spouse of a Australian politician?", "Which person was the spouse of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian swimmer?", "Give me the spouse of Australian swimmers?", "Tell me the spouse of a Australian swimmer?", "Tell me the spouse of Australian swimmers?", "What is the spouse of a Australian swimmer?", "What is the spouse of Australian swimmers?", "What was the spouse of a Australian swimmer?", "What was the spouse of Australian swimmers?", "Which person is the spouse of a Australian swimmer?", "Which person is the spouse of Australian swimmers?", "Which person was the spouse of a Australian swimmer?", "Which person was the spouse of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian handball player?", "Give me the spouse of Australian handball players?", "Tell me the spouse of a Australian handball player?", "Tell me the spouse of Australian handball players?", "What is the spouse of a Australian handball player?", "What is the spouse of Australian handball players?", "What was the spouse of a Australian handball player?", "What was the spouse of Australian handball players?", "Which person is the spouse of a Australian handball player?", "Which person is the spouse of Australian handball players?", "Which person was the spouse of a Australian handball player?", "Which person was the spouse of Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian person?", "Give me the spouse of Australian persons?", "Tell me the spouse of a Australian person?", "Tell me the spouse of Australian persons?", "What is the spouse of a Australian person?", "What is the spouse of Australian persons?", "What was the spouse of a Australian person?", "What was the spouse of Australian persons?", "Which person is the spouse of a Australian person?", "Which person is the spouse of Australian persons?", "Which person was the spouse of a Australian person?", "Which person was the spouse of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian Christian Bishop?", "Give me the spouse of Australian Christian Bishops?", "Tell me the spouse of a Australian Christian Bishop?", "Tell me the spouse of Australian Christian Bishops?", "What is the spouse of a Australian Christian Bishop?", "What is the spouse of Australian Christian Bishops?", "What was the spouse of a Australian Christian Bishop?", "What was the spouse of Australian Christian Bishops?", "Which person is the spouse of a Australian Christian Bishop?", "Which person is the spouse of Australian Christian Bishops?", "Which person was the spouse of a Australian Christian Bishop?", "Which person was the spouse of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian writer?", "Give me the spouse of Australian writers?", "Tell me the spouse of a Australian writer?", "Tell me the spouse of Australian writers?", "What is the spouse of a Australian writer?", "What is the spouse of Australian writers?", "What was the spouse of a Australian writer?", "What was the spouse of Australian writers?", "Which person is the spouse of a Australian writer?", "Which person is the spouse of Australian writers?", "Which person was the spouse of a Australian writer?", "Which person was the spouse of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian cleric?", "Give me the spouse of Belgian clerics?", "Tell me the spouse of a Belgian cleric?", "Tell me the spouse of Belgian clerics?", "What is the spouse of a Belgian cleric?", "What is the spouse of Belgian clerics?", "What was the spouse of a Belgian cleric?", "What was the spouse of Belgian clerics?", "Which person is the spouse of a Belgian cleric?", "Which person is the spouse of Belgian clerics?", "Which person was the spouse of a Belgian cleric?", "Which person was the spouse of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian office holder?", "Give me the spouse of Belgian office holders?", "Tell me the spouse of a Belgian office holder?", "Tell me the spouse of Belgian office holders?", "What is the spouse of a Belgian office holder?", "What is the spouse of Belgian office holders?", "What was the spouse of a Belgian office holder?", "What was the spouse of Belgian office holders?", "Which person is the spouse of a Belgian office holder?", "Which person is the spouse of Belgian office holders?", "Which person was the spouse of a Belgian office holder?", "Which person was the spouse of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian agent?", "Give me the spouse of Belgian agents?", "Tell me the spouse of a Belgian agent?", "Tell me the spouse of Belgian agents?", "What is the spouse of a Belgian agent?", "What is the spouse of Belgian agents?", "What was the spouse of a Belgian agent?", "What was the spouse of Belgian agents?", "Which person is the spouse of a Belgian agent?", "Which person is the spouse of Belgian agents?", "Which person was the spouse of a Belgian agent?", "Which person was the spouse of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian economist?", "Give me the spouse of Belgian economists?", "Tell me the spouse of a Belgian economist?", "Tell me the spouse of Belgian economists?", "What is the spouse of a Belgian economist?", "What is the spouse of Belgian economists?", "What was the spouse of a Belgian economist?", "What was the spouse of Belgian economists?", "Which person is the spouse of a Belgian economist?", "Which person is the spouse of Belgian economists?", "Which person was the spouse of a Belgian economist?", "Which person was the spouse of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorcycle rider?", "Give me the spouse of Belgian motorcycle riders?", "Tell me the spouse of a Belgian motorcycle rider?", "Tell me the spouse of Belgian motorcycle riders?", "What is the spouse of a Belgian motorcycle rider?", "What is the spouse of Belgian motorcycle riders?", "What was the spouse of a Belgian motorcycle rider?", "What was the spouse of Belgian motorcycle riders?", "Which person is the spouse of a Belgian motorcycle rider?", "Which person is the spouse of Belgian motorcycle riders?", "Which person was the spouse of a Belgian motorcycle rider?", "Which person was the spouse of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian artist?", "Give me the spouse of Belgian artists?", "Tell me the spouse of a Belgian artist?", "Tell me the spouse of Belgian artists?", "What is the spouse of a Belgian artist?", "What is the spouse of Belgian artists?", "What was the spouse of a Belgian artist?", "What was the spouse of Belgian artists?", "Which person is the spouse of a Belgian artist?", "Which person is the spouse of Belgian artists?", "Which person was the spouse of a Belgian artist?", "Which person was the spouse of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian athlete?", "Give me the spouse of Belgian athletes?", "Tell me the spouse of a Belgian athlete?", "Tell me the spouse of Belgian athletes?", "What is the spouse of a Belgian athlete?", "What is the spouse of Belgian athletes?", "What was the spouse of a Belgian athlete?", "What was the spouse of Belgian athletes?", "Which person is the spouse of a Belgian athlete?", "Which person is the spouse of Belgian athletes?", "Which person was the spouse of a Belgian athlete?", "Which person was the spouse of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian scientist?", "Give me the spouse of Belgian scientists?", "Tell me the spouse of a Belgian scientist?", "Tell me the spouse of Belgian scientists?", "What is the spouse of a Belgian scientist?", "What is the spouse of Belgian scientists?", "What was the spouse of a Belgian scientist?", "What was the spouse of Belgian scientists?", "Which person is the spouse of a Belgian scientist?", "Which person is the spouse of Belgian scientists?", "Which person was the spouse of a Belgian scientist?", "Which person was the spouse of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian architect?", "Give me the spouse of Belgian architects?", "Tell me the spouse of a Belgian architect?", "Tell me the spouse of Belgian architects?", "What is the spouse of a Belgian architect?", "What is the spouse of Belgian architects?", "What was the spouse of a Belgian architect?", "What was the spouse of Belgian architects?", "Which person is the spouse of a Belgian architect?", "Which person is the spouse of Belgian architects?", "Which person was the spouse of a Belgian architect?", "Which person was the spouse of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian golf player?", "Give me the spouse of Belgian golf players?", "Tell me the spouse of a Belgian golf player?", "Tell me the spouse of Belgian golf players?", "What is the spouse of a Belgian golf player?", "What is the spouse of Belgian golf players?", "What was the spouse of a Belgian golf player?", "What was the spouse of Belgian golf players?", "Which person is the spouse of a Belgian golf player?", "Which person is the spouse of Belgian golf players?", "Which person was the spouse of a Belgian golf player?", "Which person was the spouse of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian racing driver?", "Give me the spouse of Belgian racing drivers?", "Tell me the spouse of a Belgian racing driver?", "Tell me the spouse of Belgian racing drivers?", "What is the spouse of a Belgian racing driver?", "What is the spouse of Belgian racing drivers?", "What was the spouse of a Belgian racing driver?", "What was the spouse of Belgian racing drivers?", "Which person is the spouse of a Belgian racing driver?", "Which person is the spouse of Belgian racing drivers?", "Which person was the spouse of a Belgian racing driver?", "Which person was the spouse of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian politician?", "Give me the spouse of Belgian politicians?", "Tell me the spouse of a Belgian politician?", "Tell me the spouse of Belgian politicians?", "What is the spouse of a Belgian politician?", "What is the spouse of Belgian politicians?", "What was the spouse of a Belgian politician?", "What was the spouse of Belgian politicians?", "Which person is the spouse of a Belgian politician?", "Which person is the spouse of Belgian politicians?", "Which person was the spouse of a Belgian politician?", "Which person was the spouse of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian swimmer?", "Give me the spouse of Belgian swimmers?", "Tell me the spouse of a Belgian swimmer?", "Tell me the spouse of Belgian swimmers?", "What is the spouse of a Belgian swimmer?", "What is the spouse of Belgian swimmers?", "What was the spouse of a Belgian swimmer?", "What was the spouse of Belgian swimmers?", "Which person is the spouse of a Belgian swimmer?", "Which person is the spouse of Belgian swimmers?", "Which person was the spouse of a Belgian swimmer?", "Which person was the spouse of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian volleyball player?", "Give me the spouse of Belgian volleyball players?", "Tell me the spouse of a Belgian volleyball player?", "Tell me the spouse of Belgian volleyball players?", "What is the spouse of a Belgian volleyball player?", "What is the spouse of Belgian volleyball players?", "What was the spouse of a Belgian volleyball player?", "What was the spouse of Belgian volleyball players?", "Which person is the spouse of a Belgian volleyball player?", "Which person is the spouse of Belgian volleyball players?", "Which person was the spouse of a Belgian volleyball player?", "Which person was the spouse of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian person?", "Give me the spouse of Belgian persons?", "Tell me the spouse of a Belgian person?", "Tell me the spouse of Belgian persons?", "What is the spouse of a Belgian person?", "What is the spouse of Belgian persons?", "What was the spouse of a Belgian person?", "What was the spouse of Belgian persons?", "Which person is the spouse of a Belgian person?", "Which person is the spouse of Belgian persons?", "Which person was the spouse of a Belgian person?", "Which person was the spouse of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian comics creator?", "Give me the spouse of Belgian comics creators?", "Tell me the spouse of a Belgian comics creator?", "Tell me the spouse of Belgian comics creators?", "What is the spouse of a Belgian comics creator?", "What is the spouse of Belgian comics creators?", "What was the spouse of a Belgian comics creator?", "What was the spouse of Belgian comics creators?", "Which person is the spouse of a Belgian comics creator?", "Which person is the spouse of Belgian comics creators?", "Which person was the spouse of a Belgian comics creator?", "Which person was the spouse of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian writer?", "Give me the spouse of Belgian writers?", "Tell me the spouse of a Belgian writer?", "Tell me the spouse of Belgian writers?", "What is the spouse of a Belgian writer?", "What is the spouse of Belgian writers?", "What was the spouse of a Belgian writer?", "What was the spouse of Belgian writers?", "Which person is the spouse of a Belgian writer?", "Which person is the spouse of Belgian writers?", "Which person was the spouse of a Belgian writer?", "Which person was the spouse of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorsport racer?", "Give me the spouse of Belgian motorsport racers?", "Tell me the spouse of a Belgian motorsport racer?", "Tell me the spouse of Belgian motorsport racers?", "What is the spouse of a Belgian motorsport racer?", "What is the spouse of Belgian motorsport racers?", "What was the spouse of a Belgian motorsport racer?", "What was the spouse of Belgian motorsport racers?", "Which person is the spouse of a Belgian motorsport racer?", "Which person is the spouse of Belgian motorsport racers?", "Which person was the spouse of a Belgian motorsport racer?", "Which person was the spouse of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What border the birth place of $x?", "What bordered the birth place of $x?", "What borders the birth place of $x?", "Which state border the birth place of $x?", "Which state bordered the birth place of $x?", "Which state borders the birth place of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/State> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear the spouse of $x?", "What bears the spouse of $x?", "What born the spouse of $x?", "Which date bear the spouse of $x?", "Which date bears the spouse of $x?", "Which date born the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Luca Zingaretti",
        "uri" : "http://dbpedia.org/resource/Luca_Zingaretti"
      }, {
        "label" : "Lucia Bosè",
        "uri" : "http://dbpedia.org/resource/Lucia_Bosè"
      }, {
        "label" : "Lucia Moholy",
        "uri" : "http://dbpedia.org/resource/Lucia_Moholy"
      }, {
        "label" : "Lucy Turnbull",
        "uri" : "http://dbpedia.org/resource/Lucy_Turnbull"
      }, {
        "label" : "Lucé Vela",
        "uri" : "http://dbpedia.org/resource/Lucé_Vela"
      }, {
        "label" : "Ludu Daw Amar",
        "uri" : "http://dbpedia.org/resource/Ludu_Daw_Amar"
      }, {
        "label" : "Ludu U Hla",
        "uri" : "http://dbpedia.org/resource/Ludu_U_Hla"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Lynn Whitfield",
        "uri" : "http://dbpedia.org/resource/Lynn_Whitfield"
      }, {
        "label" : "Lysette Anthony",
        "uri" : "http://dbpedia.org/resource/Lysette_Anthony"
      }, {
        "label" : "László Moholy-Nagy",
        "uri" : "http://dbpedia.org/resource/László_Moholy-Nagy"
      }, {
        "label" : "M. G. Ramachandran",
        "uri" : "http://dbpedia.org/resource/M._G._Ramachandran"
      }, {
        "label" : "Magdalena Graaf",
        "uri" : "http://dbpedia.org/resource/Magdalena_Graaf"
      }, {
        "label" : "Malcolm Turnbull",
        "uri" : "http://dbpedia.org/resource/Malcolm_Turnbull"
      }, {
        "label" : "V. N. Janaki",
        "uri" : "http://dbpedia.org/resource/V._N._Janaki"
      }, {
        "label" : "Val Butnaru",
        "uri" : "http://dbpedia.org/resource/Val_Butnaru"
      }, {
        "label" : "Valentina Butnaru",
        "uri" : "http://dbpedia.org/resource/Valentina_Butnaru"
      }, {
        "label" : "Valeriy Borzov",
        "uri" : "http://dbpedia.org/resource/Valeriy_Borzov"
      }, {
        "label" : "Vantile Whitfield",
        "uri" : "http://dbpedia.org/resource/Vantile_Whitfield"
      }, {
        "label" : "Vera Tschechowa",
        "uri" : "http://dbpedia.org/resource/Vera_Tschechowa"
      }, {
        "label" : "Veronika Franz and Severin Fiala",
        "uri" : "http://dbpedia.org/resource/Veronika_Franz_and_Severin_Fiala"
      }, {
        "label" : "Marieme Faye Sall",
        "uri" : "http://dbpedia.org/resource/Marieme_Faye_Sall"
      }, {
        "label" : "Sandhya Shantaram",
        "uri" : "http://dbpedia.org/resource/Sandhya_Shantaram"
      }, {
        "label" : "Thomas Hassan",
        "uri" : "http://dbpedia.org/resource/Thomas_Hassan"
      }, {
        "label" : "Hyman B. Samuels",
        "uri" : "http://dbpedia.org/resource/Hyman_B._Samuels"
      }, {
        "label" : "Manuel Sadosky",
        "uri" : "http://dbpedia.org/resource/Manuel_Sadosky"
      }, {
        "label" : "Bjørn Sand",
        "uri" : "http://dbpedia.org/resource/Bjørn_Sand"
      }, {
        "label" : "Deirdre O'Connell",
        "uri" : "http://dbpedia.org/resource/Deirdre_O'Connell"
      }, {
        "label" : "Derya Alabora",
        "uri" : "http://dbpedia.org/resource/Derya_Alabora"
      }, {
        "label" : "Desha Breckinridge",
        "uri" : "http://dbpedia.org/resource/Desha_Breckinridge"
      }, {
        "label" : "Desmond FitzGerald (politician)",
        "uri" : "http://dbpedia.org/resource/Desmond_FitzGerald_(politician)"
      }, {
        "label" : "Diana Wellesley, Duchess of Wellington",
        "uri" : "http://dbpedia.org/resource/Diana_Wellesley,_Duchess_of_Wellington"
      }, {
        "label" : "Dick Cheney",
        "uri" : "http://dbpedia.org/resource/Dick_Cheney"
      }, {
        "label" : "Gladys Vanderbilt Széchenyi",
        "uri" : "http://dbpedia.org/resource/Gladys_Vanderbilt_Széchenyi"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Grigori Aleksandrov",
        "uri" : "http://dbpedia.org/resource/Grigori_Aleksandrov"
      }, {
        "label" : "Kevin Seal",
        "uri" : "http://dbpedia.org/resource/Kevin_Seal"
      }, {
        "label" : "Khalida Safarova",
        "uri" : "http://dbpedia.org/resource/Khalida_Safarova"
      }, {
        "label" : "Khan Ataur Rahman",
        "uri" : "http://dbpedia.org/resource/Khan_Ataur_Rahman"
      }, {
        "label" : "Kishore Kumar",
        "uri" : "http://dbpedia.org/resource/Kishore_Kumar"
      }, {
        "label" : "Koji Yamamoto (actor)",
        "uri" : "http://dbpedia.org/resource/Koji_Yamamoto_(actor)"
      }, {
        "label" : "Kothamangalam Subbu",
        "uri" : "http://dbpedia.org/resource/Kothamangalam_Subbu"
      }, {
        "label" : "Krishnachandran",
        "uri" : "http://dbpedia.org/resource/Krishnachandran"
      }, {
        "label" : "Priya Bapat",
        "uri" : "http://dbpedia.org/resource/Priya_Bapat"
      }, {
        "label" : "Quinn Martin",
        "uri" : "http://dbpedia.org/resource/Quinn_Martin"
      }, {
        "label" : "Rachel Miner",
        "uri" : "http://dbpedia.org/resource/Rachel_Miner"
      }, {
        "label" : "Rachel Portman",
        "uri" : "http://dbpedia.org/resource/Rachel_Portman"
      }, {
        "label" : "Ragnheiður Melsteð",
        "uri" : "http://dbpedia.org/resource/Ragnheiður_Melsteð"
      }, {
        "label" : "Rajeshwari Sachdev",
        "uri" : "http://dbpedia.org/resource/Rajeshwari_Sachdev"
      }, {
        "label" : "Howard F. Ahmanson Sr.",
        "uri" : "http://dbpedia.org/resource/Howard_F._Ahmanson_Sr."
      }, {
        "label" : "Shizuko Hoshi",
        "uri" : "http://dbpedia.org/resource/Shizuko_Hoshi"
      }, {
        "label" : "Albert S. Ruddy",
        "uri" : "http://dbpedia.org/resource/Albert_S._Ruddy"
      }, {
        "label" : "Alex O'Loughlin",
        "uri" : "http://dbpedia.org/resource/Alex_O'Loughlin"
      }, {
        "label" : "Alexander Godunov",
        "uri" : "http://dbpedia.org/resource/Alexander_Godunov"
      }, {
        "label" : "Alexandre de Lesseps",
        "uri" : "http://dbpedia.org/resource/Alexandre_de_Lesseps"
      }, {
        "label" : "Alfred Lunt",
        "uri" : "http://dbpedia.org/resource/Alfred_Lunt"
      }, {
        "label" : "Alistair Petrie",
        "uri" : "http://dbpedia.org/resource/Alistair_Petrie"
      }, {
        "label" : "Allan Turpin",
        "uri" : "http://dbpedia.org/resource/Allan_Turpin"
      }, {
        "label" : "Allen Paulson",
        "uri" : "http://dbpedia.org/resource/Allen_Paulson"
      }, {
        "label" : "Alma Adamkienė",
        "uri" : "http://dbpedia.org/resource/Alma_Adamkienė"
      }, {
        "label" : "Altiero Spinelli",
        "uri" : "http://dbpedia.org/resource/Altiero_Spinelli"
      }, {
        "label" : "Charlton Heston",
        "uri" : "http://dbpedia.org/resource/Charlton_Heston"
      }, {
        "label" : "Florence Reed",
        "uri" : "http://dbpedia.org/resource/Florence_Reed"
      }, {
        "label" : "Anand Mohan Singh",
        "uri" : "http://dbpedia.org/resource/Anand_Mohan_Singh"
      }, {
        "label" : "Nieves Navarro",
        "uri" : "http://dbpedia.org/resource/Nieves_Navarro"
      }, {
        "label" : "Nijō Motohiro",
        "uri" : "http://dbpedia.org/resource/Nijō_Motohiro"
      }, {
        "label" : "Nikolai Karachentsov",
        "uri" : "http://dbpedia.org/resource/Nikolai_Karachentsov"
      }, {
        "label" : "Nilmini Tennakoon",
        "uri" : "http://dbpedia.org/resource/Nilmini_Tennakoon"
      }, {
        "label" : "Nirmal Kumar",
        "uri" : "http://dbpedia.org/resource/Nirmal_Kumar"
      }, {
        "label" : "Nitin Sahrawat",
        "uri" : "http://dbpedia.org/resource/Nitin_Sahrawat"
      }, {
        "label" : "Nnamdi Azikiwe",
        "uri" : "http://dbpedia.org/resource/Nnamdi_Azikiwe"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Olafr Havrevold",
        "uri" : "http://dbpedia.org/resource/Olafr_Havrevold"
      }, {
        "label" : "Diana Laura Riojas",
        "uri" : "http://dbpedia.org/resource/Diana_Laura_Riojas"
      }, {
        "label" : "George I, Landgrave of Hesse-Darmstadt",
        "uri" : "http://dbpedia.org/resource/George_I,_Landgrave_of_Hesse-Darmstadt"
      }, {
        "label" : "Louis John Gardella",
        "uri" : "http://dbpedia.org/resource/Louis_John_Gardella"
      }, {
        "label" : "Sawsan Gabra Ayoub Khalil",
        "uri" : "http://dbpedia.org/resource/Sawsan_Gabra_Ayoub_Khalil"
      }, {
        "label" : "Sulochana Gadgil",
        "uri" : "http://dbpedia.org/resource/Sulochana_Gadgil"
      }, {
        "label" : "Ramabai Peshwa",
        "uri" : "http://dbpedia.org/resource/Ramabai_Peshwa"
      }, {
        "label" : "Azam Farahi",
        "uri" : "http://dbpedia.org/resource/Azam_Farahi"
      }, {
        "label" : "Aïssata Issoufou Mahamadou",
        "uri" : "http://dbpedia.org/resource/Aïssata_Issoufou_Mahamadou"
      }, {
        "label" : "Baburaj (actor)",
        "uri" : "http://dbpedia.org/resource/Baburaj_(actor)"
      }, {
        "label" : "Barbara Stühlmeyer",
        "uri" : "http://dbpedia.org/resource/Barbara_Stühlmeyer"
      }, {
        "label" : "Barbara of Brandenburg, Marquise of Mantua",
        "uri" : "http://dbpedia.org/resource/Barbara_of_Brandenburg,_Marquise_of_Mantua"
      }, {
        "label" : "Barry Levinson",
        "uri" : "http://dbpedia.org/resource/Barry_Levinson"
      }, {
        "label" : "Liya Akhedzhakova",
        "uri" : "http://dbpedia.org/resource/Liya_Akhedzhakova"
      }, {
        "label" : "Lord Frederick Cavendish",
        "uri" : "http://dbpedia.org/resource/Lord_Frederick_Cavendish"
      }, {
        "label" : "Louis-Ferdinand Céline",
        "uri" : "http://dbpedia.org/resource/Louis-Ferdinand_Céline"
      }, {
        "label" : "Caitlin Stasey",
        "uri" : "http://dbpedia.org/resource/Caitlin_Stasey"
      }, {
        "label" : "Cal Rampton",
        "uri" : "http://dbpedia.org/resource/Cal_Rampton"
      }, {
        "label" : "Candace Cameron Bure",
        "uri" : "http://dbpedia.org/resource/Candace_Cameron_Bure"
      }, {
        "label" : "Carl Sagan",
        "uri" : "http://dbpedia.org/resource/Carl_Sagan"
      }, {
        "label" : "Carla Arocha",
        "uri" : "http://dbpedia.org/resource/Carla_Arocha"
      }, {
        "label" : "Carmine Giovinazzo",
        "uri" : "http://dbpedia.org/resource/Carmine_Giovinazzo"
      }, {
        "label" : "Carolina Rivas",
        "uri" : "http://dbpedia.org/resource/Carolina_Rivas"
      }, {
        "label" : "Caroline St-Hilaire",
        "uri" : "http://dbpedia.org/resource/Caroline_St-Hilaire"
      }, {
        "label" : "Catarina de Lencastre, Viscountess of Balsemão",
        "uri" : "http://dbpedia.org/resource/Catarina_de_Lencastre,_Viscountess_of_Balsemão"
      }, {
        "label" : "Chien-Shiung Wu",
        "uri" : "http://dbpedia.org/resource/Chien-Shiung_Wu"
      }, {
        "label" : "Chitrasena",
        "uri" : "http://dbpedia.org/resource/Chitrasena"
      } ]
    },
    "combination" : true
  }, {
    "id" : "338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian prime minister?", "What bear Australian prime ministers?", "What bears a Australian prime minister?", "What bears Australian prime ministers?", "What born a Australian prime minister?", "What born Australian prime ministers?", "Which date bear a Australian prime minister?", "Which date bear Australian prime ministers?", "Which date bears a Australian prime minister?", "Which date bears Australian prime ministers?", "Which date born a Australian prime minister?", "Which date born Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian agent?", "What bear Australian agents?", "What bears a Australian agent?", "What bears Australian agents?", "What born a Australian agent?", "What born Australian agents?", "Which date bear a Australian agent?", "Which date bear Australian agents?", "Which date bears a Australian agent?", "Which date bears Australian agents?", "Which date born a Australian agent?", "Which date born Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian artist?", "What bear Australian artists?", "What bears a Australian artist?", "What bears Australian artists?", "What born a Australian artist?", "What born Australian artists?", "Which date bear a Australian artist?", "Which date bear Australian artists?", "Which date bears a Australian artist?", "Which date bears Australian artists?", "Which date born a Australian artist?", "Which date born Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian motorcycle rider?", "What bear Australian motorcycle riders?", "What bears a Australian motorcycle rider?", "What bears Australian motorcycle riders?", "What born a Australian motorcycle rider?", "What born Australian motorcycle riders?", "Which date bear a Australian motorcycle rider?", "Which date bear Australian motorcycle riders?", "Which date bears a Australian motorcycle rider?", "Which date bears Australian motorcycle riders?", "Which date born a Australian motorcycle rider?", "Which date born Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian scientist?", "What bear Australian scientists?", "What bears a Australian scientist?", "What bears Australian scientists?", "What born a Australian scientist?", "What born Australian scientists?", "Which date bear a Australian scientist?", "Which date bear Australian scientists?", "Which date bears a Australian scientist?", "Which date bears Australian scientists?", "Which date born a Australian scientist?", "Which date born Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian military person?", "What bear Australian military persons?", "What bears a Australian military person?", "What bears Australian military persons?", "What born a Australian military person?", "What born Australian military persons?", "Which date bear a Australian military person?", "Which date bear Australian military persons?", "Which date bears a Australian military person?", "Which date bears Australian military persons?", "Which date born a Australian military person?", "Which date born Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian volleyball player?", "What bear Australian volleyball players?", "What bears a Australian volleyball player?", "What bears Australian volleyball players?", "What born a Australian volleyball player?", "What born Australian volleyball players?", "Which date bear a Australian volleyball player?", "Which date bear Australian volleyball players?", "Which date bears a Australian volleyball player?", "Which date bears Australian volleyball players?", "Which date born a Australian volleyball player?", "Which date born Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian basketball player?", "What bear Australian basketball players?", "What bears a Australian basketball player?", "What bears Australian basketball players?", "What born a Australian basketball player?", "What born Australian basketball players?", "Which date bear a Australian basketball player?", "Which date bear Australian basketball players?", "Which date bears a Australian basketball player?", "Which date bears Australian basketball players?", "Which date born a Australian basketball player?", "Which date born Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian speedway rider?", "What bear Australian speedway riders?", "What bears a Australian speedway rider?", "What bears Australian speedway riders?", "What born a Australian speedway rider?", "What born Australian speedway riders?", "Which date bear a Australian speedway rider?", "Which date bear Australian speedway riders?", "Which date bears a Australian speedway rider?", "Which date bears Australian speedway riders?", "Which date born a Australian speedway rider?", "Which date born Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian model?", "What bear Australian models?", "What bears a Australian model?", "What bears Australian models?", "What born a Australian model?", "What born Australian models?", "Which date bear a Australian model?", "Which date bear Australian models?", "Which date bears a Australian model?", "Which date bears Australian models?", "Which date born a Australian model?", "Which date born Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian motorsport racer?", "What bear Australian motorsport racers?", "What bears a Australian motorsport racer?", "What bears Australian motorsport racers?", "What born a Australian motorsport racer?", "What born Australian motorsport racers?", "Which date bear a Australian motorsport racer?", "Which date bear Australian motorsport racers?", "Which date bears a Australian motorsport racer?", "Which date bears Australian motorsport racers?", "Which date born a Australian motorsport racer?", "Which date born Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian cleric?", "What bear Australian clerics?", "What bears a Australian cleric?", "What bears Australian clerics?", "What born a Australian cleric?", "What born Australian clerics?", "Which date bear a Australian cleric?", "Which date bear Australian clerics?", "Which date bears a Australian cleric?", "Which date bears Australian clerics?", "Which date born a Australian cleric?", "Which date born Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian boxer?", "What bear Australian boxers?", "What bears a Australian boxer?", "What bears Australian boxers?", "What born a Australian boxer?", "What born Australian boxers?", "Which date bear a Australian boxer?", "Which date bear Australian boxers?", "Which date bears a Australian boxer?", "Which date bears Australian boxers?", "Which date born a Australian boxer?", "Which date born Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian office holder?", "What bear Australian office holders?", "What bears a Australian office holder?", "What bears Australian office holders?", "What born a Australian office holder?", "What born Australian office holders?", "Which date bear a Australian office holder?", "Which date bear Australian office holders?", "Which date bears a Australian office holder?", "Which date bears Australian office holders?", "Which date born a Australian office holder?", "Which date born Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian economist?", "What bear Australian economists?", "What bears a Australian economist?", "What bears Australian economists?", "What born a Australian economist?", "What born Australian economists?", "Which date bear a Australian economist?", "Which date bear Australian economists?", "Which date bears a Australian economist?", "Which date bears Australian economists?", "Which date born a Australian economist?", "Which date born Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian fictional character?", "What bear Australian fictional characters?", "What bears a Australian fictional character?", "What bears Australian fictional characters?", "What born a Australian fictional character?", "What born Australian fictional characters?", "Which date bear a Australian fictional character?", "Which date bear Australian fictional characters?", "Which date bears a Australian fictional character?", "Which date bears Australian fictional characters?", "Which date born a Australian fictional character?", "Which date born Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian athlete?", "What bear Australian athletes?", "What bears a Australian athlete?", "What bears Australian athletes?", "What born a Australian athlete?", "What born Australian athletes?", "Which date bear a Australian athlete?", "Which date bear Australian athletes?", "Which date bears a Australian athlete?", "Which date bears Australian athletes?", "Which date born a Australian athlete?", "Which date born Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian racing driver?", "What bear Australian racing drivers?", "What bears a Australian racing driver?", "What bears Australian racing drivers?", "What born a Australian racing driver?", "What born Australian racing drivers?", "Which date bear a Australian racing driver?", "Which date bear Australian racing drivers?", "Which date bears a Australian racing driver?", "Which date bears Australian racing drivers?", "Which date born a Australian racing driver?", "Which date born Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian golf player?", "What bear Australian golf players?", "What bears a Australian golf player?", "What bears Australian golf players?", "What born a Australian golf player?", "What born Australian golf players?", "Which date bear a Australian golf player?", "Which date bear Australian golf players?", "Which date bears a Australian golf player?", "Which date bears Australian golf players?", "Which date born a Australian golf player?", "Which date born Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian politician?", "What bear Australian politicians?", "What bears a Australian politician?", "What bears Australian politicians?", "What born a Australian politician?", "What born Australian politicians?", "Which date bear a Australian politician?", "Which date bear Australian politicians?", "Which date bears a Australian politician?", "Which date bears Australian politicians?", "Which date born a Australian politician?", "Which date born Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian swimmer?", "What bear Australian swimmers?", "What bears a Australian swimmer?", "What bears Australian swimmers?", "What born a Australian swimmer?", "What born Australian swimmers?", "Which date bear a Australian swimmer?", "Which date bear Australian swimmers?", "Which date bears a Australian swimmer?", "Which date bears Australian swimmers?", "Which date born a Australian swimmer?", "Which date born Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian handball player?", "What bear Australian handball players?", "What bears a Australian handball player?", "What bears Australian handball players?", "What born a Australian handball player?", "What born Australian handball players?", "Which date bear a Australian handball player?", "Which date bear Australian handball players?", "Which date bears a Australian handball player?", "Which date bears Australian handball players?", "Which date born a Australian handball player?", "Which date born Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian person?", "What bear Australian persons?", "What bears a Australian person?", "What bears Australian persons?", "What born a Australian person?", "What born Australian persons?", "Which date bear a Australian person?", "Which date bear Australian persons?", "Which date bears a Australian person?", "Which date bears Australian persons?", "Which date born a Australian person?", "Which date born Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian Christian Bishop?", "What bear Australian Christian Bishops?", "What bears a Australian Christian Bishop?", "What bears Australian Christian Bishops?", "What born a Australian Christian Bishop?", "What born Australian Christian Bishops?", "Which date bear a Australian Christian Bishop?", "Which date bear Australian Christian Bishops?", "Which date bears a Australian Christian Bishop?", "Which date bears Australian Christian Bishops?", "Which date born a Australian Christian Bishop?", "Which date born Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Australian writer?", "What bear Australian writers?", "What bears a Australian writer?", "What bears Australian writers?", "What born a Australian writer?", "What born Australian writers?", "Which date bear a Australian writer?", "Which date bear Australian writers?", "Which date bears a Australian writer?", "Which date bears Australian writers?", "Which date born a Australian writer?", "Which date born Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian cleric?", "What bear Belgian clerics?", "What bears a Belgian cleric?", "What bears Belgian clerics?", "What born a Belgian cleric?", "What born Belgian clerics?", "Which date bear a Belgian cleric?", "Which date bear Belgian clerics?", "Which date bears a Belgian cleric?", "Which date bears Belgian clerics?", "Which date born a Belgian cleric?", "Which date born Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian office holder?", "What bear Belgian office holders?", "What bears a Belgian office holder?", "What bears Belgian office holders?", "What born a Belgian office holder?", "What born Belgian office holders?", "Which date bear a Belgian office holder?", "Which date bear Belgian office holders?", "Which date bears a Belgian office holder?", "Which date bears Belgian office holders?", "Which date born a Belgian office holder?", "Which date born Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian agent?", "What bear Belgian agents?", "What bears a Belgian agent?", "What bears Belgian agents?", "What born a Belgian agent?", "What born Belgian agents?", "Which date bear a Belgian agent?", "Which date bear Belgian agents?", "Which date bears a Belgian agent?", "Which date bears Belgian agents?", "Which date born a Belgian agent?", "Which date born Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian economist?", "What bear Belgian economists?", "What bears a Belgian economist?", "What bears Belgian economists?", "What born a Belgian economist?", "What born Belgian economists?", "Which date bear a Belgian economist?", "Which date bear Belgian economists?", "Which date bears a Belgian economist?", "Which date bears Belgian economists?", "Which date born a Belgian economist?", "Which date born Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian motorcycle rider?", "What bear Belgian motorcycle riders?", "What bears a Belgian motorcycle rider?", "What bears Belgian motorcycle riders?", "What born a Belgian motorcycle rider?", "What born Belgian motorcycle riders?", "Which date bear a Belgian motorcycle rider?", "Which date bear Belgian motorcycle riders?", "Which date bears a Belgian motorcycle rider?", "Which date bears Belgian motorcycle riders?", "Which date born a Belgian motorcycle rider?", "Which date born Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian artist?", "What bear Belgian artists?", "What bears a Belgian artist?", "What bears Belgian artists?", "What born a Belgian artist?", "What born Belgian artists?", "Which date bear a Belgian artist?", "Which date bear Belgian artists?", "Which date bears a Belgian artist?", "Which date bears Belgian artists?", "Which date born a Belgian artist?", "Which date born Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian athlete?", "What bear Belgian athletes?", "What bears a Belgian athlete?", "What bears Belgian athletes?", "What born a Belgian athlete?", "What born Belgian athletes?", "Which date bear a Belgian athlete?", "Which date bear Belgian athletes?", "Which date bears a Belgian athlete?", "Which date bears Belgian athletes?", "Which date born a Belgian athlete?", "Which date born Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian scientist?", "What bear Belgian scientists?", "What bears a Belgian scientist?", "What bears Belgian scientists?", "What born a Belgian scientist?", "What born Belgian scientists?", "Which date bear a Belgian scientist?", "Which date bear Belgian scientists?", "Which date bears a Belgian scientist?", "Which date bears Belgian scientists?", "Which date born a Belgian scientist?", "Which date born Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian architect?", "What bear Belgian architects?", "What bears a Belgian architect?", "What bears Belgian architects?", "What born a Belgian architect?", "What born Belgian architects?", "Which date bear a Belgian architect?", "Which date bear Belgian architects?", "Which date bears a Belgian architect?", "Which date bears Belgian architects?", "Which date born a Belgian architect?", "Which date born Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian golf player?", "What bear Belgian golf players?", "What bears a Belgian golf player?", "What bears Belgian golf players?", "What born a Belgian golf player?", "What born Belgian golf players?", "Which date bear a Belgian golf player?", "Which date bear Belgian golf players?", "Which date bears a Belgian golf player?", "Which date bears Belgian golf players?", "Which date born a Belgian golf player?", "Which date born Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian racing driver?", "What bear Belgian racing drivers?", "What bears a Belgian racing driver?", "What bears Belgian racing drivers?", "What born a Belgian racing driver?", "What born Belgian racing drivers?", "Which date bear a Belgian racing driver?", "Which date bear Belgian racing drivers?", "Which date bears a Belgian racing driver?", "Which date bears Belgian racing drivers?", "Which date born a Belgian racing driver?", "Which date born Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian politician?", "What bear Belgian politicians?", "What bears a Belgian politician?", "What bears Belgian politicians?", "What born a Belgian politician?", "What born Belgian politicians?", "Which date bear a Belgian politician?", "Which date bear Belgian politicians?", "Which date bears a Belgian politician?", "Which date bears Belgian politicians?", "Which date born a Belgian politician?", "Which date born Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian swimmer?", "What bear Belgian swimmers?", "What bears a Belgian swimmer?", "What bears Belgian swimmers?", "What born a Belgian swimmer?", "What born Belgian swimmers?", "Which date bear a Belgian swimmer?", "Which date bear Belgian swimmers?", "Which date bears a Belgian swimmer?", "Which date bears Belgian swimmers?", "Which date born a Belgian swimmer?", "Which date born Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian volleyball player?", "What bear Belgian volleyball players?", "What bears a Belgian volleyball player?", "What bears Belgian volleyball players?", "What born a Belgian volleyball player?", "What born Belgian volleyball players?", "Which date bear a Belgian volleyball player?", "Which date bear Belgian volleyball players?", "Which date bears a Belgian volleyball player?", "Which date bears Belgian volleyball players?", "Which date born a Belgian volleyball player?", "Which date born Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian person?", "What bear Belgian persons?", "What bears a Belgian person?", "What bears Belgian persons?", "What born a Belgian person?", "What born Belgian persons?", "Which date bear a Belgian person?", "Which date bear Belgian persons?", "Which date bears a Belgian person?", "Which date bears Belgian persons?", "Which date born a Belgian person?", "Which date born Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian comics creator?", "What bear Belgian comics creators?", "What bears a Belgian comics creator?", "What bears Belgian comics creators?", "What born a Belgian comics creator?", "What born Belgian comics creators?", "Which date bear a Belgian comics creator?", "Which date bear Belgian comics creators?", "Which date bears a Belgian comics creator?", "Which date bears Belgian comics creators?", "Which date born a Belgian comics creator?", "Which date born Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian writer?", "What bear Belgian writers?", "What bears a Belgian writer?", "What bears Belgian writers?", "What born a Belgian writer?", "What born Belgian writers?", "Which date bear a Belgian writer?", "Which date bear Belgian writers?", "Which date bears a Belgian writer?", "Which date bears Belgian writers?", "Which date born a Belgian writer?", "Which date born Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bear a Belgian motorsport racer?", "What bear Belgian motorsport racers?", "What bears a Belgian motorsport racer?", "What bears Belgian motorsport racers?", "What born a Belgian motorsport racer?", "What born Belgian motorsport racers?", "Which date bear a Belgian motorsport racer?", "Which date bear Belgian motorsport racers?", "Which date bears a Belgian motorsport racer?", "Which date bears Belgian motorsport racers?", "Which date born a Belgian motorsport racer?", "Which date born Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for the spouse of $x?", "What was played for the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Luc Leestemaker",
        "uri" : "http://dbpedia.org/resource/Luc_Leestemaker"
      }, {
        "label" : "Lucille Ball",
        "uri" : "http://dbpedia.org/resource/Lucille_Ball"
      }, {
        "label" : "Luisa Ranieri",
        "uri" : "http://dbpedia.org/resource/Luisa_Ranieri"
      }, {
        "label" : "Veronique Peck",
        "uri" : "http://dbpedia.org/resource/Veronique_Peck"
      }, {
        "label" : "Brandon Barash",
        "uri" : "http://dbpedia.org/resource/Brandon_Barash"
      }, {
        "label" : "Gloria Carrá",
        "uri" : "http://dbpedia.org/resource/Gloria_Carrá"
      }, {
        "label" : "Gordon Scott",
        "uri" : "http://dbpedia.org/resource/Gordon_Scott"
      }, {
        "label" : "Gry Molvær Hivju",
        "uri" : "http://dbpedia.org/resource/Gry_Molvær_Hivju"
      }, {
        "label" : "Grynet Molvig",
        "uri" : "http://dbpedia.org/resource/Grynet_Molvig"
      }, {
        "label" : "Kirsten Storms",
        "uri" : "http://dbpedia.org/resource/Kirsten_Storms"
      }, {
        "label" : "Rachel Gordon",
        "uri" : "http://dbpedia.org/resource/Rachel_Gordon"
      }, {
        "label" : "Rachel Rosenthal",
        "uri" : "http://dbpedia.org/resource/Rachel_Rosenthal"
      }, {
        "label" : "Alan Halsall",
        "uri" : "http://dbpedia.org/resource/Alan_Halsall"
      }, {
        "label" : "Alan Thicke",
        "uri" : "http://dbpedia.org/resource/Alan_Thicke"
      }, {
        "label" : "Alec Baldwin",
        "uri" : "http://dbpedia.org/resource/Alec_Baldwin"
      }, {
        "label" : "Catherine FitzGerald",
        "uri" : "http://dbpedia.org/resource/Catherine_FitzGerald"
      }, {
        "label" : "Cecilia Nilsson (actress)",
        "uri" : "http://dbpedia.org/resource/Cecilia_Nilsson_(actress)"
      }, {
        "label" : "Chelsea Noble",
        "uri" : "http://dbpedia.org/resource/Chelsea_Noble"
      }, {
        "label" : "Florenz Ziegfeld Jr.",
        "uri" : "http://dbpedia.org/resource/Florenz_Ziegfeld_Jr."
      }, {
        "label" : "Nispal Singh",
        "uri" : "http://dbpedia.org/resource/Nispal_Singh"
      }, {
        "label" : "Noah Bean",
        "uri" : "http://dbpedia.org/resource/Noah_Bean"
      }, {
        "label" : "Noah Danby",
        "uri" : "http://dbpedia.org/resource/Noah_Danby"
      }, {
        "label" : "Mithu Chakrabarty",
        "uri" : "http://dbpedia.org/resource/Mithu_Chakrabarty"
      }, {
        "label" : "Touriya Haoud",
        "uri" : "http://dbpedia.org/resource/Touriya_Haoud"
      }, {
        "label" : "B. J. Ward (actress)",
        "uri" : "http://dbpedia.org/resource/B._J._Ward_(actress)"
      }, {
        "label" : "Barry Cahill (actor)",
        "uri" : "http://dbpedia.org/resource/Barry_Cahill_(actor)"
      }, {
        "label" : "Camila Sodi",
        "uri" : "http://dbpedia.org/resource/Camila_Sodi"
      }, {
        "label" : "Camilla Sacre-Dallerup",
        "uri" : "http://dbpedia.org/resource/Camilla_Sacre-Dallerup"
      }, {
        "label" : "Carmine Giovinazzo",
        "uri" : "http://dbpedia.org/resource/Carmine_Giovinazzo"
      }, {
        "label" : "Carol Arthur",
        "uri" : "http://dbpedia.org/resource/Carol_Arthur"
      }, {
        "label" : "Chris Evans (presenter)",
        "uri" : "http://dbpedia.org/resource/Chris_Evans_(presenter)"
      }, {
        "label" : "Christie Brinkley",
        "uri" : "http://dbpedia.org/resource/Christie_Brinkley"
      }, {
        "label" : "Christopher Lambert",
        "uri" : "http://dbpedia.org/resource/Christopher_Lambert"
      }, {
        "label" : "Cindy Ambuehl",
        "uri" : "http://dbpedia.org/resource/Cindy_Ambuehl"
      }, {
        "label" : "Clarence Williams III",
        "uri" : "http://dbpedia.org/resource/Clarence_Williams_III"
      }, {
        "label" : "Garfield Morgan",
        "uri" : "http://dbpedia.org/resource/Garfield_Morgan"
      }, {
        "label" : "Gary Morton",
        "uri" : "http://dbpedia.org/resource/Gary_Morton"
      }, {
        "label" : "Gary Oldman",
        "uri" : "http://dbpedia.org/resource/Gary_Oldman"
      }, {
        "label" : "George Hearn",
        "uri" : "http://dbpedia.org/resource/George_Hearn"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Jennifer Esposito",
        "uri" : "http://dbpedia.org/resource/Jennifer_Esposito"
      }, {
        "label" : "Jennifer Schwalbach Smith",
        "uri" : "http://dbpedia.org/resource/Jennifer_Schwalbach_Smith"
      }, {
        "label" : "Jenny Lumet",
        "uri" : "http://dbpedia.org/resource/Jenny_Lumet"
      }, {
        "label" : "Jill Latiano",
        "uri" : "http://dbpedia.org/resource/Jill_Latiano"
      }, {
        "label" : "Joan Blondell",
        "uri" : "http://dbpedia.org/resource/Joan_Blondell"
      }, {
        "label" : "Joan Valerie",
        "uri" : "http://dbpedia.org/resource/Joan_Valerie"
      }, {
        "label" : "Joanne Mitchell",
        "uri" : "http://dbpedia.org/resource/Joanne_Mitchell"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John Billingsley",
        "uri" : "http://dbpedia.org/resource/John_Billingsley"
      }, {
        "label" : "John Clark (actor)",
        "uri" : "http://dbpedia.org/resource/John_Clark_(actor)"
      }, {
        "label" : "John Malkovich",
        "uri" : "http://dbpedia.org/resource/John_Malkovich"
      }, {
        "label" : "Ben Koldyke",
        "uri" : "http://dbpedia.org/resource/Ben_Koldyke"
      }, {
        "label" : "Katherine LaNasa",
        "uri" : "http://dbpedia.org/resource/Katherine_LaNasa"
      }, {
        "label" : "Kathryn Hays",
        "uri" : "http://dbpedia.org/resource/Kathryn_Hays"
      }, {
        "label" : "Katie Lee (chef)",
        "uri" : "http://dbpedia.org/resource/Katie_Lee_(chef)"
      }, {
        "label" : "Keith Larsen",
        "uri" : "http://dbpedia.org/resource/Keith_Larsen"
      }, {
        "label" : "Ken Campbell",
        "uri" : "http://dbpedia.org/resource/Ken_Campbell"
      }, {
        "label" : "Lee Mead",
        "uri" : "http://dbpedia.org/resource/Lee_Mead"
      }, {
        "label" : "Lesley Judd",
        "uri" : "http://dbpedia.org/resource/Lesley_Judd"
      }, {
        "label" : "Lincoln Townley",
        "uri" : "http://dbpedia.org/resource/Lincoln_Townley"
      }, {
        "label" : "Zach Gilford",
        "uri" : "http://dbpedia.org/resource/Zach_Gilford"
      }, {
        "label" : "Nobby Clark (photographer)",
        "uri" : "http://dbpedia.org/resource/Nobby_Clark_(photographer)"
      }, {
        "label" : "Michael Jayston",
        "uri" : "http://dbpedia.org/resource/Michael_Jayston"
      }, {
        "label" : "Michelle Phillips",
        "uri" : "http://dbpedia.org/resource/Michelle_Phillips"
      }, {
        "label" : "Ryan Reynolds",
        "uri" : "http://dbpedia.org/resource/Ryan_Reynolds"
      }, {
        "label" : "Sam Sorbo",
        "uri" : "http://dbpedia.org/resource/Sam_Sorbo"
      }, {
        "label" : "Early life and career of Gene Roddenberry",
        "uri" : "http://dbpedia.org/resource/Early_life_and_career_of_Gene_Roddenberry"
      }, {
        "label" : "Eden Hartford",
        "uri" : "http://dbpedia.org/resource/Eden_Hartford"
      }, {
        "label" : "Franco Nero",
        "uri" : "http://dbpedia.org/resource/Franco_Nero"
      }, {
        "label" : "François Olivennes",
        "uri" : "http://dbpedia.org/resource/François_Olivennes"
      }, {
        "label" : "Gustaw Holoubek",
        "uri" : "http://dbpedia.org/resource/Gustaw_Holoubek"
      }, {
        "label" : "Hal Holbrook",
        "uri" : "http://dbpedia.org/resource/Hal_Holbrook"
      }, {
        "label" : "Hugo Ballin",
        "uri" : "http://dbpedia.org/resource/Hugo_Ballin"
      }, {
        "label" : "Jack Wagner (actor)",
        "uri" : "http://dbpedia.org/resource/Jack_Wagner_(actor)"
      }, {
        "label" : "Jack Wrather",
        "uri" : "http://dbpedia.org/resource/Jack_Wrather"
      }, {
        "label" : "Jane Kaczmarek",
        "uri" : "http://dbpedia.org/resource/Jane_Kaczmarek"
      }, {
        "label" : "Jane Powell",
        "uri" : "http://dbpedia.org/resource/Jane_Powell"
      }, {
        "label" : "Sebastian Roché",
        "uri" : "http://dbpedia.org/resource/Sebastian_Roché"
      }, {
        "label" : "Paul Antony-Barber",
        "uri" : "http://dbpedia.org/resource/Paul_Antony-Barber"
      }, {
        "label" : "Amy Landecker",
        "uri" : "http://dbpedia.org/resource/Amy_Landecker"
      }, {
        "label" : "Andrew Taylor (painter)",
        "uri" : "http://dbpedia.org/resource/Andrew_Taylor_(painter)"
      }, {
        "label" : "Angelina Jolie",
        "uri" : "http://dbpedia.org/resource/Angelina_Jolie"
      }, {
        "label" : "Anna Brecon",
        "uri" : "http://dbpedia.org/resource/Anna_Brecon"
      }, {
        "label" : "Anne Aubrey",
        "uri" : "http://dbpedia.org/resource/Anne_Aubrey"
      }, {
        "label" : "Anthony Havelock-Allan",
        "uri" : "http://dbpedia.org/resource/Anthony_Havelock-Allan"
      }, {
        "label" : "Archie Pitt",
        "uri" : "http://dbpedia.org/resource/Archie_Pitt"
      }, {
        "label" : "Aretha Franklin",
        "uri" : "http://dbpedia.org/resource/Aretha_Franklin"
      }, {
        "label" : "Arthur L. Carter",
        "uri" : "http://dbpedia.org/resource/Arthur_L._Carter"
      }, {
        "label" : "Audrey Christie",
        "uri" : "http://dbpedia.org/resource/Audrey_Christie"
      }, {
        "label" : "Olga Schoberová",
        "uri" : "http://dbpedia.org/resource/Olga_Schoberová"
      }, {
        "label" : "Owain Yeoman",
        "uri" : "http://dbpedia.org/resource/Owain_Yeoman"
      }, {
        "label" : "Rebecca Breeds",
        "uri" : "http://dbpedia.org/resource/Rebecca_Breeds"
      }, {
        "label" : "Renn Hawkey",
        "uri" : "http://dbpedia.org/resource/Renn_Hawkey"
      }, {
        "label" : "Richard A. Colla",
        "uri" : "http://dbpedia.org/resource/Richard_A._Colla"
      }, {
        "label" : "Richard Fidler",
        "uri" : "http://dbpedia.org/resource/Richard_Fidler"
      }, {
        "label" : "Richard Schaal",
        "uri" : "http://dbpedia.org/resource/Richard_Schaal"
      }, {
        "label" : "Patricia Maynard",
        "uri" : "http://dbpedia.org/resource/Patricia_Maynard"
      }, {
        "label" : "Adam Rayner",
        "uri" : "http://dbpedia.org/resource/Adam_Rayner"
      }, {
        "label" : "Adam Reid",
        "uri" : "http://dbpedia.org/resource/Adam_Reid"
      }, {
        "label" : "Brooke Hayward",
        "uri" : "http://dbpedia.org/resource/Brooke_Hayward"
      } ]
    },
    "combination" : true
  }, {
    "id" : "382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian prime minister?", "What is played for Australian prime ministers?", "What was played for a Australian prime minister?", "What was played for Australian prime ministers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian agent?", "What is played for Australian agents?", "What was played for a Australian agent?", "What was played for Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian artist?", "What is played for Australian artists?", "What was played for a Australian artist?", "What was played for Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian motorcycle rider?", "What is played for Australian motorcycle riders?", "What was played for a Australian motorcycle rider?", "What was played for Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian scientist?", "What is played for Australian scientists?", "What was played for a Australian scientist?", "What was played for Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian military person?", "What is played for Australian military persons?", "What was played for a Australian military person?", "What was played for Australian military persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian volleyball player?", "What is played for Australian volleyball players?", "What was played for a Australian volleyball player?", "What was played for Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian basketball player?", "What is played for Australian basketball players?", "What was played for a Australian basketball player?", "What was played for Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian speedway rider?", "What is played for Australian speedway riders?", "What was played for a Australian speedway rider?", "What was played for Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian model?", "What is played for Australian models?", "What was played for a Australian model?", "What was played for Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian motorsport racer?", "What is played for Australian motorsport racers?", "What was played for a Australian motorsport racer?", "What was played for Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian cleric?", "What is played for Australian clerics?", "What was played for a Australian cleric?", "What was played for Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian boxer?", "What is played for Australian boxers?", "What was played for a Australian boxer?", "What was played for Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian office holder?", "What is played for Australian office holders?", "What was played for a Australian office holder?", "What was played for Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian economist?", "What is played for Australian economists?", "What was played for a Australian economist?", "What was played for Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian fictional character?", "What is played for Australian fictional characters?", "What was played for a Australian fictional character?", "What was played for Australian fictional characters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian athlete?", "What is played for Australian athletes?", "What was played for a Australian athlete?", "What was played for Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian racing driver?", "What is played for Australian racing drivers?", "What was played for a Australian racing driver?", "What was played for Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian golf player?", "What is played for Australian golf players?", "What was played for a Australian golf player?", "What was played for Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian politician?", "What is played for Australian politicians?", "What was played for a Australian politician?", "What was played for Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian swimmer?", "What is played for Australian swimmers?", "What was played for a Australian swimmer?", "What was played for Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian handball player?", "What is played for Australian handball players?", "What was played for a Australian handball player?", "What was played for Australian handball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian person?", "What is played for Australian persons?", "What was played for a Australian person?", "What was played for Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian Christian Bishop?", "What is played for Australian Christian Bishops?", "What was played for a Australian Christian Bishop?", "What was played for Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Australian writer?", "What is played for Australian writers?", "What was played for a Australian writer?", "What was played for Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian cleric?", "What is played for Belgian clerics?", "What was played for a Belgian cleric?", "What was played for Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian office holder?", "What is played for Belgian office holders?", "What was played for a Belgian office holder?", "What was played for Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian agent?", "What is played for Belgian agents?", "What was played for a Belgian agent?", "What was played for Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian economist?", "What is played for Belgian economists?", "What was played for a Belgian economist?", "What was played for Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian motorcycle rider?", "What is played for Belgian motorcycle riders?", "What was played for a Belgian motorcycle rider?", "What was played for Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian artist?", "What is played for Belgian artists?", "What was played for a Belgian artist?", "What was played for Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian athlete?", "What is played for Belgian athletes?", "What was played for a Belgian athlete?", "What was played for Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian scientist?", "What is played for Belgian scientists?", "What was played for a Belgian scientist?", "What was played for Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian architect?", "What is played for Belgian architects?", "What was played for a Belgian architect?", "What was played for Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian golf player?", "What is played for Belgian golf players?", "What was played for a Belgian golf player?", "What was played for Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian racing driver?", "What is played for Belgian racing drivers?", "What was played for a Belgian racing driver?", "What was played for Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian politician?", "What is played for Belgian politicians?", "What was played for a Belgian politician?", "What was played for Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian swimmer?", "What is played for Belgian swimmers?", "What was played for a Belgian swimmer?", "What was played for Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian volleyball player?", "What is played for Belgian volleyball players?", "What was played for a Belgian volleyball player?", "What was played for Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian person?", "What is played for Belgian persons?", "What was played for a Belgian person?", "What was played for Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian comics creator?", "What is played for Belgian comics creators?", "What was played for a Belgian comics creator?", "What was played for Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian writer?", "What is played for Belgian writers?", "What was played for a Belgian writer?", "What was played for Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "APP",
    "sentences" : [ "What is played for a Belgian motorsport racer?", "What is played for Belgian motorsport racers?", "What was played for a Belgian motorsport racer?", "What was played for Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth date of $x belonged?", "When was the the birth date of $x belongs?", "When were the the birth date of $x belonged?", "When were the the birth date of $x belongs?", "Which animal was the the birth date of $x belonged?", "Which animal was the the birth date of $x belongs?", "Which animal were the the birth date of $x belonged?", "Which animal were the the birth date of $x belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the occupation of $x belonged?", "When was the the occupation of $x belongs?", "When were the the occupation of $x belonged?", "When were the the occupation of $x belongs?", "Which animal was the the occupation of $x belonged?", "Which animal was the the occupation of $x belongs?", "Which animal were the the occupation of $x belonged?", "Which animal were the the occupation of $x belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/occupation> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Dolly Shepherd",
        "uri" : "http://dbpedia.org/resource/Dolly_Shepherd"
      }, {
        "label" : "Angela Franklin",
        "uri" : "http://dbpedia.org/resource/Angela_Franklin"
      }, {
        "label" : "Goku",
        "uri" : "http://dbpedia.org/resource/Goku"
      }, {
        "label" : "Norman Thelwell",
        "uri" : "http://dbpedia.org/resource/Norman_Thelwell"
      }, {
        "label" : "Behemoth (Master and Margarita)",
        "uri" : "http://dbpedia.org/resource/Behemoth_(Master_and_Margarita)"
      }, {
        "label" : "Albert Stewart Meek",
        "uri" : "http://dbpedia.org/resource/Albert_Stewart_Meek"
      }, {
        "label" : "George W. Littlefield",
        "uri" : "http://dbpedia.org/resource/George_W._Littlefield"
      }, {
        "label" : "John Macansh",
        "uri" : "http://dbpedia.org/resource/John_Macansh"
      }, {
        "label" : "David Gessner",
        "uri" : "http://dbpedia.org/resource/David_Gessner"
      }, {
        "label" : "Terry Rice",
        "uri" : "http://dbpedia.org/resource/Terry_Rice"
      }, {
        "label" : "Henry Conwell Wood",
        "uri" : "http://dbpedia.org/resource/Henry_Conwell_Wood"
      }, {
        "label" : "Lake (Infinity Train)",
        "uri" : "http://dbpedia.org/resource/Lake_(Infinity_Train)"
      }, {
        "label" : "Doug Jennings (politician)",
        "uri" : "http://dbpedia.org/resource/Doug_Jennings_(politician)"
      }, {
        "label" : "Edith Maud Cook",
        "uri" : "http://dbpedia.org/resource/Edith_Maud_Cook"
      }, {
        "label" : "Frank and John Craighead",
        "uri" : "http://dbpedia.org/resource/Frank_and_John_Craighead"
      }, {
        "label" : "James Heading",
        "uri" : "http://dbpedia.org/resource/James_Heading"
      }, {
        "label" : "Antonio Cabral de Melo",
        "uri" : "http://dbpedia.org/resource/Antonio_Cabral_de_Melo"
      }, {
        "label" : "Charles Lumley Hill",
        "uri" : "http://dbpedia.org/resource/Charles_Lumley_Hill"
      }, {
        "label" : "Thelma Bates",
        "uri" : "http://dbpedia.org/resource/Thelma_Bates"
      }, {
        "label" : "Toto (Oz)",
        "uri" : "http://dbpedia.org/resource/Toto_(Oz)"
      }, {
        "label" : "Brenham C. Crothers",
        "uri" : "http://dbpedia.org/resource/Brenham_C._Crothers"
      }, {
        "label" : "Michael Emerson (character)",
        "uri" : "http://dbpedia.org/resource/Michael_Emerson_(character)"
      }, {
        "label" : "Witch of Endor",
        "uri" : "http://dbpedia.org/resource/Witch_of_Endor"
      }, {
        "label" : "John T. McCutcheon",
        "uri" : "http://dbpedia.org/resource/John_T._McCutcheon"
      }, {
        "label" : "Theodore Annemann",
        "uri" : "http://dbpedia.org/resource/Theodore_Annemann"
      }, {
        "label" : "Denise Okuda",
        "uri" : "http://dbpedia.org/resource/Denise_Okuda"
      }, {
        "label" : "Péter Szőr",
        "uri" : "http://dbpedia.org/resource/Péter_Szőr"
      }, {
        "label" : "R2-D2",
        "uri" : "http://dbpedia.org/resource/R2-D2"
      }, {
        "label" : "Hilda Spellman",
        "uri" : "http://dbpedia.org/resource/Hilda_Spellman"
      }, {
        "label" : "Chris McKinstry",
        "uri" : "http://dbpedia.org/resource/Chris_McKinstry"
      }, {
        "label" : "Sabrina Spellman",
        "uri" : "http://dbpedia.org/resource/Sabrina_Spellman"
      }, {
        "label" : "Zelda Spellman",
        "uri" : "http://dbpedia.org/resource/Zelda_Spellman"
      }, {
        "label" : "La (Tarzan)",
        "uri" : "http://dbpedia.org/resource/La_(Tarzan)"
      }, {
        "label" : "Medea (The Icemark Chronicles)",
        "uri" : "http://dbpedia.org/resource/Medea_(The_Icemark_Chronicles)"
      }, {
        "label" : "Harry L. Straus",
        "uri" : "http://dbpedia.org/resource/Harry_L._Straus"
      }, {
        "label" : "Archie McCardell",
        "uri" : "http://dbpedia.org/resource/Archie_McCardell"
      }, {
        "label" : "René Carmille",
        "uri" : "http://dbpedia.org/resource/René_Carmille"
      }, {
        "label" : "Agent Smith",
        "uri" : "http://dbpedia.org/resource/Agent_Smith"
      }, {
        "label" : "Brusher Mills",
        "uri" : "http://dbpedia.org/resource/Brusher_Mills"
      }, {
        "label" : "Dave Elsey",
        "uri" : "http://dbpedia.org/resource/Dave_Elsey"
      }, {
        "label" : "Monique Wilson (witch)",
        "uri" : "http://dbpedia.org/resource/Monique_Wilson_(witch)"
      }, {
        "label" : "MC Yogi",
        "uri" : "http://dbpedia.org/resource/MC_Yogi"
      }, {
        "label" : "Ursula (The Little Mermaid)",
        "uri" : "http://dbpedia.org/resource/Ursula_(The_Little_Mermaid)"
      }, {
        "label" : "Vagish Shastri",
        "uri" : "http://dbpedia.org/resource/Vagish_Shastri"
      }, {
        "label" : "Verne Langdon",
        "uri" : "http://dbpedia.org/resource/Verne_Langdon"
      }, {
        "label" : "Bob Heleringer",
        "uri" : "http://dbpedia.org/resource/Bob_Heleringer"
      }, {
        "label" : "Despina Pappa-Paschalidou",
        "uri" : "http://dbpedia.org/resource/Despina_Pappa-Paschalidou"
      }, {
        "label" : "Sea Hag",
        "uri" : "http://dbpedia.org/resource/Sea_Hag"
      }, {
        "label" : "Morgan le Fay",
        "uri" : "http://dbpedia.org/resource/Morgan_le_Fay"
      }, {
        "label" : "Barry Knight (politician)",
        "uri" : "http://dbpedia.org/resource/Barry_Knight_(politician)"
      }, {
        "label" : "List of The Neverending Story characters",
        "uri" : "http://dbpedia.org/resource/List_of_The_Neverending_Story_characters"
      }, {
        "label" : "Joseph H. Pereira",
        "uri" : "http://dbpedia.org/resource/Joseph_H._Pereira"
      }, {
        "label" : "Geoff Holder",
        "uri" : "http://dbpedia.org/resource/Geoff_Holder"
      }, {
        "label" : "Mildred Hubble",
        "uri" : "http://dbpedia.org/resource/Mildred_Hubble"
      }, {
        "label" : "Mini-Me",
        "uri" : "http://dbpedia.org/resource/Mini-Me"
      }, {
        "label" : "Lady of the Lake",
        "uri" : "http://dbpedia.org/resource/Lady_of_the_Lake"
      }, {
        "label" : "Merlin",
        "uri" : "http://dbpedia.org/resource/Merlin"
      }, {
        "label" : "Harvey Peltier Sr.",
        "uri" : "http://dbpedia.org/resource/Harvey_Peltier_Sr."
      }, {
        "label" : "Jafar (Disney)",
        "uri" : "http://dbpedia.org/resource/Jafar_(Disney)"
      }, {
        "label" : "Witch Hazel (Looney Tunes)",
        "uri" : "http://dbpedia.org/resource/Witch_Hazel_(Looney_Tunes)"
      }, {
        "label" : "Debbie Riddle",
        "uri" : "http://dbpedia.org/resource/Debbie_Riddle"
      }, {
        "label" : "Deddy Corbuzier",
        "uri" : "http://dbpedia.org/resource/Deddy_Corbuzier"
      }, {
        "label" : "Vladimir Trefilov",
        "uri" : "http://dbpedia.org/resource/Vladimir_Trefilov"
      }, {
        "label" : "Evil Queen (Disney)",
        "uri" : "http://dbpedia.org/resource/Evil_Queen_(Disney)"
      }, {
        "label" : "Harry Dresden",
        "uri" : "http://dbpedia.org/resource/Harry_Dresden"
      }, {
        "label" : "Elric of Melniboné",
        "uri" : "http://dbpedia.org/resource/Elric_of_Melniboné"
      }, {
        "label" : "Jareth",
        "uri" : "http://dbpedia.org/resource/Jareth"
      }, {
        "label" : "Ella Dee",
        "uri" : "http://dbpedia.org/resource/Ella_Dee"
      }, {
        "label" : "Thulsa Doom",
        "uri" : "http://dbpedia.org/resource/Thulsa_Doom"
      }, {
        "label" : "Tony Giorgio",
        "uri" : "http://dbpedia.org/resource/Tony_Giorgio"
      }, {
        "label" : "K-2SO",
        "uri" : "http://dbpedia.org/resource/K-2SO"
      } ]
    },
    "combination" : true
  }, {
    "id" : "427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian amateur boxer belonged?", "When was the Australian amateur boxers belonged?", "When was the a Australian amateur boxer belongs?", "When was the Australian amateur boxers belongs?", "When were the a Australian amateur boxer belonged?", "When were the Australian amateur boxers belonged?", "When were the a Australian amateur boxer belongs?", "When were the Australian amateur boxers belongs?", "Which animal was the a Australian amateur boxer belonged?", "Which animal was the Australian amateur boxers belonged?", "Which animal was the a Australian amateur boxer belongs?", "Which animal was the Australian amateur boxers belongs?", "Which animal were the a Australian amateur boxer belonged?", "Which animal were the Australian amateur boxers belonged?", "Which animal were the a Australian amateur boxer belongs?", "Which animal were the Australian amateur boxers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmateurBoxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian time period belonged?", "When was the Australian time periods belonged?", "When was the a Australian time period belongs?", "When was the Australian time periods belongs?", "When were the a Australian time period belonged?", "When were the Australian time periods belonged?", "When were the a Australian time period belongs?", "When were the Australian time periods belongs?", "Which animal was the a Australian time period belonged?", "Which animal was the Australian time periods belonged?", "Which animal was the a Australian time period belongs?", "Which animal was the Australian time periods belongs?", "Which animal were the a Australian time period belonged?", "Which animal were the Australian time periods belonged?", "Which animal were the a Australian time period belongs?", "Which animal were the Australian time periods belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TimePeriod>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian criminal belonged?", "When was the Australian criminals belonged?", "When was the a Australian criminal belongs?", "When was the Australian criminals belongs?", "When were the a Australian criminal belonged?", "When were the Australian criminals belonged?", "When were the a Australian criminal belongs?", "When were the Australian criminals belongs?", "Which animal was the a Australian criminal belonged?", "Which animal was the Australian criminals belonged?", "Which animal was the a Australian criminal belongs?", "Which animal was the Australian criminals belongs?", "Which animal were the a Australian criminal belonged?", "Which animal were the Australian criminals belonged?", "Which animal were the a Australian criminal belongs?", "Which animal were the Australian criminals belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Criminal>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian fashion designer belonged?", "When was the Belgian fashion designers belonged?", "When was the a Belgian fashion designer belongs?", "When was the Belgian fashion designers belongs?", "When were the a Belgian fashion designer belonged?", "When were the Belgian fashion designers belonged?", "When were the a Belgian fashion designer belongs?", "When were the Belgian fashion designers belongs?", "Which animal was the a Belgian fashion designer belonged?", "Which animal was the Belgian fashion designers belonged?", "Which animal was the a Belgian fashion designer belongs?", "Which animal was the Belgian fashion designers belongs?", "Which animal were the a Belgian fashion designer belonged?", "Which animal were the Belgian fashion designers belonged?", "Which animal were the a Belgian fashion designer belongs?", "Which animal were the Belgian fashion designers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the s played for $x belonged?", "When was the s played for $x belongs?", "When were the s played for $x belonged?", "When were the s played for $x belongs?", "Which animal was the s played for $x belonged?", "Which animal was the s played for $x belongs?", "Which animal were the s played for $x belonged?", "Which animal were the s played for $x belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/portrayer> ?objOfPropx)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Boris Karloff",
        "uri" : "http://dbpedia.org/resource/Boris_Karloff"
      }, {
        "label" : "Glenn Strange",
        "uri" : "http://dbpedia.org/resource/Glenn_Strange"
      }, {
        "label" : "Kevin James",
        "uri" : "http://dbpedia.org/resource/Kevin_James"
      }, {
        "label" : "Mizuho Yoshida",
        "uri" : "http://dbpedia.org/resource/Mizuho_Yoshida"
      }, {
        "label" : "Christopher Lee",
        "uri" : "http://dbpedia.org/resource/Christopher_Lee"
      }, {
        "label" : "Katsumi Tezuka",
        "uri" : "http://dbpedia.org/resource/Katsumi_Tezuka"
      }, {
        "label" : "Kenpachiro Satsuma",
        "uri" : "http://dbpedia.org/resource/Kenpachiro_Satsuma"
      }, {
        "label" : "Bin Furuya",
        "uri" : "http://dbpedia.org/resource/Bin_Furuya"
      }, {
        "label" : "Tsutomu Kitagawa",
        "uri" : "http://dbpedia.org/resource/Tsutomu_Kitagawa"
      }, {
        "label" : "Frank Welker",
        "uri" : "http://dbpedia.org/resource/Frank_Welker"
      }, {
        "label" : "Haruo Nakajima",
        "uri" : "http://dbpedia.org/resource/Haruo_Nakajima"
      }, {
        "label" : "Toru Kawai",
        "uri" : "http://dbpedia.org/resource/Toru_Kawai"
      }, {
        "label" : "Robert De Niro",
        "uri" : "http://dbpedia.org/resource/Robert_De_Niro"
      }, {
        "label" : "Susumu Kurobe",
        "uri" : "http://dbpedia.org/resource/Susumu_Kurobe"
      }, {
        "label" : "T.J. Storm",
        "uri" : "http://dbpedia.org/resource/T.J._Storm"
      }, {
        "label" : "Ted Cassidy",
        "uri" : "http://dbpedia.org/resource/Ted_Cassidy"
      }, {
        "label" : "Mansai Nomura",
        "uri" : "http://dbpedia.org/resource/Mansai_Nomura"
      } ]
    },
    "combination" : true
  }, {
    "id" : "432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth date of $x builds?", "When was the the birth date of $x built?", "When were the the birth date of $x builds?", "When were the the birth date of $x built?", "Which date was the the birth date of $x builds?", "Which date was the the birth date of $x built?", "Which date were the the birth date of $x builds?", "Which date were the the birth date of $x built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthDate> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the occupation of $x builds?", "When was the the occupation of $x built?", "When were the the occupation of $x builds?", "When were the the occupation of $x built?", "Which date was the the occupation of $x builds?", "Which date was the the occupation of $x built?", "Which date were the the occupation of $x builds?", "Which date were the the occupation of $x built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/occupation> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Dionysis Diakos",
        "uri" : "http://dbpedia.org/resource/Dionysis_Diakos"
      }, {
        "label" : "Panagiotis Anagnostopoulos",
        "uri" : "http://dbpedia.org/resource/Panagiotis_Anagnostopoulos"
      }, {
        "label" : "Anagnostis Petimezas",
        "uri" : "http://dbpedia.org/resource/Anagnostis_Petimezas"
      }, {
        "label" : "Anagnostis Striftombolas",
        "uri" : "http://dbpedia.org/resource/Anagnostis_Striftombolas"
      }, {
        "label" : "Nikolaos Petimezas",
        "uri" : "http://dbpedia.org/resource/Nikolaos_Petimezas"
      }, {
        "label" : "Giorgos Giannias",
        "uri" : "http://dbpedia.org/resource/Giorgos_Giannias"
      }, {
        "label" : "Panagiotakis Fotilas",
        "uri" : "http://dbpedia.org/resource/Panagiotakis_Fotilas"
      }, {
        "label" : "Georgios Mitzou",
        "uri" : "http://dbpedia.org/resource/Georgios_Mitzou"
      }, {
        "label" : "Petros Mitzou",
        "uri" : "http://dbpedia.org/resource/Petros_Mitzou"
      }, {
        "label" : "Andreas Kontogouris",
        "uri" : "http://dbpedia.org/resource/Andreas_Kontogouris"
      }, {
        "label" : "Konstantinos Gofas",
        "uri" : "http://dbpedia.org/resource/Konstantinos_Gofas"
      }, {
        "label" : "Panagiotis Karatzas",
        "uri" : "http://dbpedia.org/resource/Panagiotis_Karatzas"
      }, {
        "label" : "Georgios Sisinis",
        "uri" : "http://dbpedia.org/resource/Georgios_Sisinis"
      }, {
        "label" : "Theodoros Papasimakopoulos",
        "uri" : "http://dbpedia.org/resource/Theodoros_Papasimakopoulos"
      }, {
        "label" : "Antonios Kalamogdartis",
        "uri" : "http://dbpedia.org/resource/Antonios_Kalamogdartis"
      }, {
        "label" : "Ioannis Diakos",
        "uri" : "http://dbpedia.org/resource/Ioannis_Diakos"
      }, {
        "label" : "Ioannis Krestenitis (elder)",
        "uri" : "http://dbpedia.org/resource/Ioannis_Krestenitis_(elder)"
      }, {
        "label" : "Ioannis Papadiamantopoulos (elder)",
        "uri" : "http://dbpedia.org/resource/Ioannis_Papadiamantopoulos_(elder)"
      }, {
        "label" : "Anastasios Christopoulos",
        "uri" : "http://dbpedia.org/resource/Anastasios_Christopoulos"
      }, {
        "label" : "Red Forman",
        "uri" : "http://dbpedia.org/resource/Red_Forman"
      }, {
        "label" : "Thallis Theodoridis (elder)",
        "uri" : "http://dbpedia.org/resource/Thallis_Theodoridis_(elder)"
      }, {
        "label" : "Giannis Chondrogiannis",
        "uri" : "http://dbpedia.org/resource/Giannis_Chondrogiannis"
      }, {
        "label" : "Asimakis Fotilas",
        "uri" : "http://dbpedia.org/resource/Asimakis_Fotilas"
      }, {
        "label" : "Stamatis Krestenitis",
        "uri" : "http://dbpedia.org/resource/Stamatis_Krestenitis"
      }, {
        "label" : "Chrysanthos Sisinis (died 1845)",
        "uri" : "http://dbpedia.org/resource/Chrysanthos_Sisinis_(died_1845)"
      }, {
        "label" : "Konstantinos Petimezas",
        "uri" : "http://dbpedia.org/resource/Konstantinos_Petimezas"
      }, {
        "label" : "Mai Badr",
        "uri" : "http://dbpedia.org/resource/Mai_Badr"
      }, {
        "label" : "Mikhail Safonov (pilot)",
        "uri" : "http://dbpedia.org/resource/Mikhail_Safonov_(pilot)"
      }, {
        "label" : "Jean-Luc Godard",
        "uri" : "http://dbpedia.org/resource/Jean-Luc_Godard"
      }, {
        "label" : "Miranda July",
        "uri" : "http://dbpedia.org/resource/Miranda_July"
      }, {
        "label" : "Roberto Civita",
        "uri" : "http://dbpedia.org/resource/Roberto_Civita"
      }, {
        "label" : "Todd Haynes",
        "uri" : "http://dbpedia.org/resource/Todd_Haynes"
      }, {
        "label" : "Hall Lyons",
        "uri" : "http://dbpedia.org/resource/Hall_Lyons"
      }, {
        "label" : "Lionel de Marmier",
        "uri" : "http://dbpedia.org/resource/Lionel_de_Marmier"
      }, {
        "label" : "Gojko Nikoliš",
        "uri" : "http://dbpedia.org/resource/Gojko_Nikoliš"
      }, {
        "label" : "Nomhlangano Beauty Mkhize",
        "uri" : "http://dbpedia.org/resource/Nomhlangano_Beauty_Mkhize"
      }, {
        "label" : "Louis-Nicolas Davout",
        "uri" : "http://dbpedia.org/resource/Louis-Nicolas_Davout"
      }, {
        "label" : "Carrie Donovan",
        "uri" : "http://dbpedia.org/resource/Carrie_Donovan"
      }, {
        "label" : "Michael Perlis",
        "uri" : "http://dbpedia.org/resource/Michael_Perlis"
      }, {
        "label" : "Donald Woods",
        "uri" : "http://dbpedia.org/resource/Donald_Woods"
      }, {
        "label" : "Harold Strachan",
        "uri" : "http://dbpedia.org/resource/Harold_Strachan"
      }, {
        "label" : "Randall Lane (journalist)",
        "uri" : "http://dbpedia.org/resource/Randall_Lane_(journalist)"
      }, {
        "label" : "Ray Alexander Simons",
        "uri" : "http://dbpedia.org/resource/Ray_Alexander_Simons"
      }, {
        "label" : "Sydney Kentridge",
        "uri" : "http://dbpedia.org/resource/Sydney_Kentridge"
      }, {
        "label" : "Felicia Kentridge",
        "uri" : "http://dbpedia.org/resource/Felicia_Kentridge"
      }, {
        "label" : "Steve Biko",
        "uri" : "http://dbpedia.org/resource/Steve_Biko"
      }, {
        "label" : "Max du Preez",
        "uri" : "http://dbpedia.org/resource/Max_du_Preez"
      }, {
        "label" : "Catharine Merrill",
        "uri" : "http://dbpedia.org/resource/Catharine_Merrill"
      }, {
        "label" : "Charles Brandon, 1st Duke of Suffolk",
        "uri" : "http://dbpedia.org/resource/Charles_Brandon,_1st_Duke_of_Suffolk"
      }, {
        "label" : "Louisa Morton Greene",
        "uri" : "http://dbpedia.org/resource/Louisa_Morton_Greene"
      }, {
        "label" : "James R. Newby",
        "uri" : "http://dbpedia.org/resource/James_R._Newby"
      }, {
        "label" : "James Sullivan (Medal of Honor)",
        "uri" : "http://dbpedia.org/resource/James_Sullivan_(Medal_of_Honor)"
      }, {
        "label" : "Adolph G. Metzner",
        "uri" : "http://dbpedia.org/resource/Adolph_G._Metzner"
      }, {
        "label" : "De Benneville Randolph Keim",
        "uri" : "http://dbpedia.org/resource/De_Benneville_Randolph_Keim"
      }, {
        "label" : "Philip G. Shadrach",
        "uri" : "http://dbpedia.org/resource/Philip_G._Shadrach"
      }, {
        "label" : "Philip Van Doren Stern",
        "uri" : "http://dbpedia.org/resource/Philip_Van_Doren_Stern"
      }, {
        "label" : "William Mason (1757–1818)",
        "uri" : "http://dbpedia.org/resource/William_Mason_(1757–1818)"
      }, {
        "label" : "Henry Rutgers",
        "uri" : "http://dbpedia.org/resource/Henry_Rutgers"
      }, {
        "label" : "Chapman Cohen",
        "uri" : "http://dbpedia.org/resource/Chapman_Cohen"
      }, {
        "label" : "Yoni Appelbaum",
        "uri" : "http://dbpedia.org/resource/Yoni_Appelbaum"
      }, {
        "label" : "Deaf Smith",
        "uri" : "http://dbpedia.org/resource/Deaf_Smith"
      }, {
        "label" : "Lois Long",
        "uri" : "http://dbpedia.org/resource/Lois_Long"
      }, {
        "label" : "Gerhard Thyben",
        "uri" : "http://dbpedia.org/resource/Gerhard_Thyben"
      }, {
        "label" : "Francisco da Silveira Pinto da Fonseca Teixeira, 1st Count of Amarante",
        "uri" : "http://dbpedia.org/resource/Francisco_da_Silveira_Pinto_da_Fonseca_Teixeira,_1st_Count_of_Amarante"
      }, {
        "label" : "Anna Henryka Pustowójtówna",
        "uri" : "http://dbpedia.org/resource/Anna_Henryka_Pustowójtówna"
      }, {
        "label" : "Carrie Bradshaw",
        "uri" : "http://dbpedia.org/resource/Carrie_Bradshaw"
      }, {
        "label" : "Lisa Love (editor)",
        "uri" : "http://dbpedia.org/resource/Lisa_Love_(editor)"
      }, {
        "label" : "Forrest Gump (character)",
        "uri" : "http://dbpedia.org/resource/Forrest_Gump_(character)"
      }, {
        "label" : "Jade Parfitt",
        "uri" : "http://dbpedia.org/resource/Jade_Parfitt"
      }, {
        "label" : "Gloria Steinem",
        "uri" : "http://dbpedia.org/resource/Gloria_Steinem"
      }, {
        "label" : "Klementyna Mankowska",
        "uri" : "http://dbpedia.org/resource/Klementyna_Mankowska"
      }, {
        "label" : "Barbi Benton",
        "uri" : "http://dbpedia.org/resource/Barbi_Benton"
      }, {
        "label" : "Adnan AlKateb",
        "uri" : "http://dbpedia.org/resource/Adnan_AlKateb"
      }, {
        "label" : "Edward Whelan (American lawyer)",
        "uri" : "http://dbpedia.org/resource/Edward_Whelan_(American_lawyer)"
      }, {
        "label" : "Michael Weisskopf",
        "uri" : "http://dbpedia.org/resource/Michael_Weisskopf"
      }, {
        "label" : "George Abel Schreiner",
        "uri" : "http://dbpedia.org/resource/George_Abel_Schreiner"
      }, {
        "label" : "John Babcock",
        "uri" : "http://dbpedia.org/resource/John_Babcock"
      }, {
        "label" : "Edward Felsenthal",
        "uri" : "http://dbpedia.org/resource/Edward_Felsenthal"
      }, {
        "label" : "Anne Fulenwider",
        "uri" : "http://dbpedia.org/resource/Anne_Fulenwider"
      }, {
        "label" : "Rebecca Greer",
        "uri" : "http://dbpedia.org/resource/Rebecca_Greer"
      }, {
        "label" : "Giuseppe Motta (aviator)",
        "uri" : "http://dbpedia.org/resource/Giuseppe_Motta_(aviator)"
      }, {
        "label" : "Mario de Bernardi",
        "uri" : "http://dbpedia.org/resource/Mario_de_Bernardi"
      } ]
    },
    "combination" : true
  }, {
    "id" : "434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian amateur boxer builds?", "When was the Australian amateur boxers builds?", "When was the a Australian amateur boxer built?", "When was the Australian amateur boxers built?", "When were the a Australian amateur boxer builds?", "When were the Australian amateur boxers builds?", "When were the a Australian amateur boxer built?", "When were the Australian amateur boxers built?", "Which date was the a Australian amateur boxer builds?", "Which date was the Australian amateur boxers builds?", "Which date was the a Australian amateur boxer built?", "Which date was the Australian amateur boxers built?", "Which date were the a Australian amateur boxer builds?", "Which date were the Australian amateur boxers builds?", "Which date were the a Australian amateur boxer built?", "Which date were the Australian amateur boxers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmateurBoxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian time period builds?", "When was the Australian time periods builds?", "When was the a Australian time period built?", "When was the Australian time periods built?", "When were the a Australian time period builds?", "When were the Australian time periods builds?", "When were the a Australian time period built?", "When were the Australian time periods built?", "Which date was the a Australian time period builds?", "Which date was the Australian time periods builds?", "Which date was the a Australian time period built?", "Which date was the Australian time periods built?", "Which date were the a Australian time period builds?", "Which date were the Australian time periods builds?", "Which date were the a Australian time period built?", "Which date were the Australian time periods built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TimePeriod>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian criminal builds?", "When was the Australian criminals builds?", "When was the a Australian criminal built?", "When was the Australian criminals built?", "When were the a Australian criminal builds?", "When were the Australian criminals builds?", "When were the a Australian criminal built?", "When were the Australian criminals built?", "Which date was the a Australian criminal builds?", "Which date was the Australian criminals builds?", "Which date was the a Australian criminal built?", "Which date was the Australian criminals built?", "Which date were the a Australian criminal builds?", "Which date were the Australian criminals builds?", "Which date were the a Australian criminal built?", "Which date were the Australian criminals built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Criminal>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "437",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian fashion designer builds?", "When was the Belgian fashion designers builds?", "When was the a Belgian fashion designer built?", "When was the Belgian fashion designers built?", "When were the a Belgian fashion designer builds?", "When were the Belgian fashion designers builds?", "When were the a Belgian fashion designer built?", "When were the Belgian fashion designers built?", "Which date was the a Belgian fashion designer builds?", "Which date was the Belgian fashion designers builds?", "Which date was the a Belgian fashion designer built?", "Which date was the Belgian fashion designers built?", "Which date were the a Belgian fashion designer builds?", "Which date were the Belgian fashion designers builds?", "Which date were the a Belgian fashion designer built?", "Which date were the Belgian fashion designers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "438",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the s played for $x builds?", "When was the s played for $x built?", "When were the s played for $x builds?", "When were the s played for $x built?", "Which date was the s played for $x builds?", "Which date was the s played for $x built?", "Which date were the s played for $x builds?", "Which date were the s played for $x built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfPropx)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  } ]
}