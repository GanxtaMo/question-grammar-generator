{
  "grammarEntries" : [ {
    "id" : "137",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of the spouse of $x?", "Tell me the Alma Mater of the spouse of $x?", "What is the Alma Mater of the spouse of $x?", "What was the Alma Mater of the spouse of $x?", "Which educational institution is the Alma Mater of the spouse of $x?", "Which educational institution was the Alma Mater of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Sylvia Plath",
        "uri" : "http://dbpedia.org/resource/Sylvia_Plath"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Padma Lakshmi",
        "uri" : "http://dbpedia.org/resource/Padma_Lakshmi"
      }, {
        "label" : "Savitri (actress)",
        "uri" : "http://dbpedia.org/resource/Savitri_(actress)"
      }, {
        "label" : "Aaron Spelling",
        "uri" : "http://dbpedia.org/resource/Aaron_Spelling"
      }, {
        "label" : "Adam Hochschild",
        "uri" : "http://dbpedia.org/resource/Adam_Hochschild"
      }, {
        "label" : "Barbara Simons",
        "uri" : "http://dbpedia.org/resource/Barbara_Simons"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Eleanor Silliman Belknap Humphrey",
        "uri" : "http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey"
      }, {
        "label" : "James Harris Simons",
        "uri" : "http://dbpedia.org/resource/James_Harris_Simons"
      }, {
        "label" : "Loret Miller Ruppe",
        "uri" : "http://dbpedia.org/resource/Loret_Miller_Ruppe"
      }, {
        "label" : "Clara McMillen",
        "uri" : "http://dbpedia.org/resource/Clara_McMillen"
      }, {
        "label" : "Deborah Walley",
        "uri" : "http://dbpedia.org/resource/Deborah_Walley"
      }, {
        "label" : "Sarala Roy",
        "uri" : "http://dbpedia.org/resource/Sarala_Roy"
      }, {
        "label" : "Lydia Lopokova",
        "uri" : "http://dbpedia.org/resource/Lydia_Lopokova"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Eliza Jumel",
        "uri" : "http://dbpedia.org/resource/Eliza_Jumel"
      }, {
        "label" : "Lady Caroline Lamb",
        "uri" : "http://dbpedia.org/resource/Lady_Caroline_Lamb"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "John Jay O'Connor",
        "uri" : "http://dbpedia.org/resource/John_Jay_O'Connor"
      }, {
        "label" : "Luma de Oliveira",
        "uri" : "http://dbpedia.org/resource/Luma_de_Oliveira"
      }, {
        "label" : "Bernadette Chirac",
        "uri" : "http://dbpedia.org/resource/Bernadette_Chirac"
      }, {
        "label" : "Leonard Woolf",
        "uri" : "http://dbpedia.org/resource/Leonard_Woolf"
      }, {
        "label" : "Loki Schmidt",
        "uri" : "http://dbpedia.org/resource/Loki_Schmidt"
      }, {
        "label" : "Richard Sennett",
        "uri" : "http://dbpedia.org/resource/Richard_Sennett"
      }, {
        "label" : "Marion Mahony Griffin",
        "uri" : "http://dbpedia.org/resource/Marion_Mahony_Griffin"
      }, {
        "label" : "Robert Gist",
        "uri" : "http://dbpedia.org/resource/Robert_Gist"
      }, {
        "label" : "Bill Gates",
        "uri" : "http://dbpedia.org/resource/Bill_Gates"
      }, {
        "label" : "Carl Sagan",
        "uri" : "http://dbpedia.org/resource/Carl_Sagan"
      }, {
        "label" : "Chiang Kai-shek",
        "uri" : "http://dbpedia.org/resource/Chiang_Kai-shek"
      }, {
        "label" : "Frank Sinatra",
        "uri" : "http://dbpedia.org/resource/Frank_Sinatra"
      }, {
        "label" : "Gene Roddenberry",
        "uri" : "http://dbpedia.org/resource/Gene_Roddenberry"
      }, {
        "label" : "Jehan Sadat",
        "uri" : "http://dbpedia.org/resource/Jehan_Sadat"
      }, {
        "label" : "Sargent Shriver",
        "uri" : "http://dbpedia.org/resource/Sargent_Shriver"
      }, {
        "label" : "Sylvia Llewelyn Davies",
        "uri" : "http://dbpedia.org/resource/Sylvia_Llewelyn_Davies"
      }, {
        "label" : "Anna Maria Corazza Bildt",
        "uri" : "http://dbpedia.org/resource/Anna_Maria_Corazza_Bildt"
      }, {
        "label" : "Nelson Mandela",
        "uri" : "http://dbpedia.org/resource/Nelson_Mandela"
      }, {
        "label" : "Janette Howard",
        "uri" : "http://dbpedia.org/resource/Janette_Howard"
      }, {
        "label" : "Erika Mann",
        "uri" : "http://dbpedia.org/resource/Erika_Mann"
      }, {
        "label" : "Lynn Abbey",
        "uri" : "http://dbpedia.org/resource/Lynn_Abbey"
      }, {
        "label" : "Jane Engelhard",
        "uri" : "http://dbpedia.org/resource/Jane_Engelhard"
      }, {
        "label" : "Morfydd Llwyn Owen",
        "uri" : "http://dbpedia.org/resource/Morfydd_Llwyn_Owen"
      }, {
        "label" : "Zoë Baird",
        "uri" : "http://dbpedia.org/resource/Zoë_Baird"
      }, {
        "label" : "Henry Hillman",
        "uri" : "http://dbpedia.org/resource/Henry_Hillman"
      }, {
        "label" : "Lavinia Spencer, Countess Spencer",
        "uri" : "http://dbpedia.org/resource/Lavinia_Spencer,_Countess_Spencer"
      }, {
        "label" : "Robin Lakoff",
        "uri" : "http://dbpedia.org/resource/Robin_Lakoff"
      }, {
        "label" : "Andrea Conte",
        "uri" : "http://dbpedia.org/resource/Andrea_Conte"
      }, {
        "label" : "Cindy McCain",
        "uri" : "http://dbpedia.org/resource/Cindy_McCain"
      }, {
        "label" : "Emma Gifford",
        "uri" : "http://dbpedia.org/resource/Emma_Gifford"
      }, {
        "label" : "Lucinda Franks",
        "uri" : "http://dbpedia.org/resource/Lucinda_Franks"
      }, {
        "label" : "Lucy Baldwin, Countess Baldwin of Bewdley",
        "uri" : "http://dbpedia.org/resource/Lucy_Baldwin,_Countess_Baldwin_of_Bewdley"
      }, {
        "label" : "Betty Bumpers",
        "uri" : "http://dbpedia.org/resource/Betty_Bumpers"
      }, {
        "label" : "Brigitte Bodenheimer",
        "uri" : "http://dbpedia.org/resource/Brigitte_Bodenheimer"
      }, {
        "label" : "Bryan Greenberg",
        "uri" : "http://dbpedia.org/resource/Bryan_Greenberg"
      }, {
        "label" : "Elizabeth Dole",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Dole"
      }, {
        "label" : "Emma Georgina Rothschild",
        "uri" : "http://dbpedia.org/resource/Emma_Georgina_Rothschild"
      }, {
        "label" : "Hester Pitt, Countess of Chatham",
        "uri" : "http://dbpedia.org/resource/Hester_Pitt,_Countess_of_Chatham"
      }, {
        "label" : "Mary Stuart, Countess of Bute",
        "uri" : "http://dbpedia.org/resource/Mary_Stuart,_Countess_of_Bute"
      }, {
        "label" : "Jane Fonda",
        "uri" : "http://dbpedia.org/resource/Jane_Fonda"
      }, {
        "label" : "Emilie Benes Brzezinski",
        "uri" : "http://dbpedia.org/resource/Emilie_Benes_Brzezinski"
      }, {
        "label" : "Anna Harrison",
        "uri" : "http://dbpedia.org/resource/Anna_Harrison"
      }, {
        "label" : "Caroline Harrison",
        "uri" : "http://dbpedia.org/resource/Caroline_Harrison"
      }, {
        "label" : "Florence Harding",
        "uri" : "http://dbpedia.org/resource/Florence_Harding"
      }, {
        "label" : "Helen Herron Taft",
        "uri" : "http://dbpedia.org/resource/Helen_Herron_Taft"
      }, {
        "label" : "Hugo van Lawick",
        "uri" : "http://dbpedia.org/resource/Hugo_van_Lawick"
      }, {
        "label" : "Nabaneeta Dev Sen",
        "uri" : "http://dbpedia.org/resource/Nabaneeta_Dev_Sen"
      }, {
        "label" : "Angélica Rivera",
        "uri" : "http://dbpedia.org/resource/Angélica_Rivera"
      }, {
        "label" : "Cornelia Wallace",
        "uri" : "http://dbpedia.org/resource/Cornelia_Wallace"
      }, {
        "label" : "Pushpavalli",
        "uri" : "http://dbpedia.org/resource/Pushpavalli"
      }, {
        "label" : "Alison White (bishop)",
        "uri" : "http://dbpedia.org/resource/Alison_White_(bishop)"
      }, {
        "label" : "Anna Nicole Smith",
        "uri" : "http://dbpedia.org/resource/Anna_Nicole_Smith"
      }, {
        "label" : "Nena von Schlebrügge",
        "uri" : "http://dbpedia.org/resource/Nena_von_Schlebrügge"
      }, {
        "label" : "Olga Scheinpflugová",
        "uri" : "http://dbpedia.org/resource/Olga_Scheinpflugová"
      }, {
        "label" : "Adrienne Barbeau",
        "uri" : "http://dbpedia.org/resource/Adrienne_Barbeau"
      }, {
        "label" : "Caroline Kennedy",
        "uri" : "http://dbpedia.org/resource/Caroline_Kennedy"
      }, {
        "label" : "Fred Thompson",
        "uri" : "http://dbpedia.org/resource/Fred_Thompson"
      }, {
        "label" : "Jesse James (customizer)",
        "uri" : "http://dbpedia.org/resource/Jesse_James_(customizer)"
      }, {
        "label" : "Julia Wolfe",
        "uri" : "http://dbpedia.org/resource/Julia_Wolfe"
      }, {
        "label" : "Marta Sahagún de Fox",
        "uri" : "http://dbpedia.org/resource/Marta_Sahagún_de_Fox"
      }, {
        "label" : "Sarah Brightman",
        "uri" : "http://dbpedia.org/resource/Sarah_Brightman"
      }, {
        "label" : "Tony Benn",
        "uri" : "http://dbpedia.org/resource/Tony_Benn"
      }, {
        "label" : "Lyudmila Putina",
        "uri" : "http://dbpedia.org/resource/Lyudmila_Putina"
      }, {
        "label" : "Nicole Farhi",
        "uri" : "http://dbpedia.org/resource/Nicole_Farhi"
      }, {
        "label" : "Samantha Bee",
        "uri" : "http://dbpedia.org/resource/Samantha_Bee"
      }, {
        "label" : "Alexis Denisof",
        "uri" : "http://dbpedia.org/resource/Alexis_Denisof"
      }, {
        "label" : "Hume Cronyn",
        "uri" : "http://dbpedia.org/resource/Hume_Cronyn"
      }, {
        "label" : "Muriel Humphrey Brown",
        "uri" : "http://dbpedia.org/resource/Muriel_Humphrey_Brown"
      }, {
        "label" : "Mary Matalin",
        "uri" : "http://dbpedia.org/resource/Mary_Matalin"
      }, {
        "label" : "Michael Huffington",
        "uri" : "http://dbpedia.org/resource/Michael_Huffington"
      }, {
        "label" : "Pentti Arajärvi",
        "uri" : "http://dbpedia.org/resource/Pentti_Arajärvi"
      }, {
        "label" : "Lisbet Palme",
        "uri" : "http://dbpedia.org/resource/Lisbet_Palme"
      }, {
        "label" : "Marisabel Rodríguez de Chávez",
        "uri" : "http://dbpedia.org/resource/Marisabel_Rodríguez_de_Chávez"
      }, {
        "label" : "Wu Shu-chen",
        "uri" : "http://dbpedia.org/resource/Wu_Shu-chen"
      }, {
        "label" : "Jacqueline Beer",
        "uri" : "http://dbpedia.org/resource/Jacqueline_Beer"
      }, {
        "label" : "Dingdong Dantes",
        "uri" : "http://dbpedia.org/resource/Dingdong_Dantes"
      }, {
        "label" : "Floride Calhoun",
        "uri" : "http://dbpedia.org/resource/Floride_Calhoun"
      }, {
        "label" : "Joan Mondale",
        "uri" : "http://dbpedia.org/resource/Joan_Mondale"
      } ]
    },
    "combination" : true
  }, {
    "id" : "138",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian agent?", "Give me the Alma Mater of Australian agents?", "Tell me the Alma Mater of a Australian agent?", "Tell me the Alma Mater of Australian agents?", "What is the Alma Mater of a Australian agent?", "What is the Alma Mater of Australian agents?", "What was the Alma Mater of a Australian agent?", "What was the Alma Mater of Australian agents?", "Which educational institution is the Alma Mater of a Australian agent?", "Which educational institution is the Alma Mater of Australian agents?", "Which educational institution was the Alma Mater of a Australian agent?", "Which educational institution was the Alma Mater of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "139",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian artist?", "Give me the Alma Mater of Australian artists?", "Tell me the Alma Mater of a Australian artist?", "Tell me the Alma Mater of Australian artists?", "What is the Alma Mater of a Australian artist?", "What is the Alma Mater of Australian artists?", "What was the Alma Mater of a Australian artist?", "What was the Alma Mater of Australian artists?", "Which educational institution is the Alma Mater of a Australian artist?", "Which educational institution is the Alma Mater of Australian artists?", "Which educational institution was the Alma Mater of a Australian artist?", "Which educational institution was the Alma Mater of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "140",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian motorcycle rider?", "Give me the Alma Mater of Australian motorcycle riders?", "Tell me the Alma Mater of a Australian motorcycle rider?", "Tell me the Alma Mater of Australian motorcycle riders?", "What is the Alma Mater of a Australian motorcycle rider?", "What is the Alma Mater of Australian motorcycle riders?", "What was the Alma Mater of a Australian motorcycle rider?", "What was the Alma Mater of Australian motorcycle riders?", "Which educational institution is the Alma Mater of a Australian motorcycle rider?", "Which educational institution is the Alma Mater of Australian motorcycle riders?", "Which educational institution was the Alma Mater of a Australian motorcycle rider?", "Which educational institution was the Alma Mater of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "141",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian scientist?", "Give me the Alma Mater of Australian scientists?", "Tell me the Alma Mater of a Australian scientist?", "Tell me the Alma Mater of Australian scientists?", "What is the Alma Mater of a Australian scientist?", "What is the Alma Mater of Australian scientists?", "What was the Alma Mater of a Australian scientist?", "What was the Alma Mater of Australian scientists?", "Which educational institution is the Alma Mater of a Australian scientist?", "Which educational institution is the Alma Mater of Australian scientists?", "Which educational institution was the Alma Mater of a Australian scientist?", "Which educational institution was the Alma Mater of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "142",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian volleyball player?", "Give me the Alma Mater of Australian volleyball players?", "Tell me the Alma Mater of a Australian volleyball player?", "Tell me the Alma Mater of Australian volleyball players?", "What is the Alma Mater of a Australian volleyball player?", "What is the Alma Mater of Australian volleyball players?", "What was the Alma Mater of a Australian volleyball player?", "What was the Alma Mater of Australian volleyball players?", "Which educational institution is the Alma Mater of a Australian volleyball player?", "Which educational institution is the Alma Mater of Australian volleyball players?", "Which educational institution was the Alma Mater of a Australian volleyball player?", "Which educational institution was the Alma Mater of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "143",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian basketball player?", "Give me the Alma Mater of Australian basketball players?", "Tell me the Alma Mater of a Australian basketball player?", "Tell me the Alma Mater of Australian basketball players?", "What is the Alma Mater of a Australian basketball player?", "What is the Alma Mater of Australian basketball players?", "What was the Alma Mater of a Australian basketball player?", "What was the Alma Mater of Australian basketball players?", "Which educational institution is the Alma Mater of a Australian basketball player?", "Which educational institution is the Alma Mater of Australian basketball players?", "Which educational institution was the Alma Mater of a Australian basketball player?", "Which educational institution was the Alma Mater of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "144",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian speedway rider?", "Give me the Alma Mater of Australian speedway riders?", "Tell me the Alma Mater of a Australian speedway rider?", "Tell me the Alma Mater of Australian speedway riders?", "What is the Alma Mater of a Australian speedway rider?", "What is the Alma Mater of Australian speedway riders?", "What was the Alma Mater of a Australian speedway rider?", "What was the Alma Mater of Australian speedway riders?", "Which educational institution is the Alma Mater of a Australian speedway rider?", "Which educational institution is the Alma Mater of Australian speedway riders?", "Which educational institution was the Alma Mater of a Australian speedway rider?", "Which educational institution was the Alma Mater of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "145",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian model?", "Give me the Alma Mater of Australian models?", "Tell me the Alma Mater of a Australian model?", "Tell me the Alma Mater of Australian models?", "What is the Alma Mater of a Australian model?", "What is the Alma Mater of Australian models?", "What was the Alma Mater of a Australian model?", "What was the Alma Mater of Australian models?", "Which educational institution is the Alma Mater of a Australian model?", "Which educational institution is the Alma Mater of Australian models?", "Which educational institution was the Alma Mater of a Australian model?", "Which educational institution was the Alma Mater of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "146",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian motorsport racer?", "Give me the Alma Mater of Australian motorsport racers?", "Tell me the Alma Mater of a Australian motorsport racer?", "Tell me the Alma Mater of Australian motorsport racers?", "What is the Alma Mater of a Australian motorsport racer?", "What is the Alma Mater of Australian motorsport racers?", "What was the Alma Mater of a Australian motorsport racer?", "What was the Alma Mater of Australian motorsport racers?", "Which educational institution is the Alma Mater of a Australian motorsport racer?", "Which educational institution is the Alma Mater of Australian motorsport racers?", "Which educational institution was the Alma Mater of a Australian motorsport racer?", "Which educational institution was the Alma Mater of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "147",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian ice hockey player?", "Give me the Alma Mater of Australian ice hockey players?", "Tell me the Alma Mater of a Australian ice hockey player?", "Tell me the Alma Mater of Australian ice hockey players?", "What is the Alma Mater of a Australian ice hockey player?", "What is the Alma Mater of Australian ice hockey players?", "What was the Alma Mater of a Australian ice hockey player?", "What was the Alma Mater of Australian ice hockey players?", "Which educational institution is the Alma Mater of a Australian ice hockey player?", "Which educational institution is the Alma Mater of Australian ice hockey players?", "Which educational institution was the Alma Mater of a Australian ice hockey player?", "Which educational institution was the Alma Mater of Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "148",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian member of parliament?", "Give me the Alma Mater of Australian member of parliaments?", "Tell me the Alma Mater of a Australian member of parliament?", "Tell me the Alma Mater of Australian member of parliaments?", "What is the Alma Mater of a Australian member of parliament?", "What is the Alma Mater of Australian member of parliaments?", "What was the Alma Mater of a Australian member of parliament?", "What was the Alma Mater of Australian member of parliaments?", "Which educational institution is the Alma Mater of a Australian member of parliament?", "Which educational institution is the Alma Mater of Australian member of parliaments?", "Which educational institution was the Alma Mater of a Australian member of parliament?", "Which educational institution was the Alma Mater of Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "149",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian cleric?", "Give me the Alma Mater of Australian clerics?", "Tell me the Alma Mater of a Australian cleric?", "Tell me the Alma Mater of Australian clerics?", "What is the Alma Mater of a Australian cleric?", "What is the Alma Mater of Australian clerics?", "What was the Alma Mater of a Australian cleric?", "What was the Alma Mater of Australian clerics?", "Which educational institution is the Alma Mater of a Australian cleric?", "Which educational institution is the Alma Mater of Australian clerics?", "Which educational institution was the Alma Mater of a Australian cleric?", "Which educational institution was the Alma Mater of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "150",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian boxer?", "Give me the Alma Mater of Australian boxers?", "Tell me the Alma Mater of a Australian boxer?", "Tell me the Alma Mater of Australian boxers?", "What is the Alma Mater of a Australian boxer?", "What is the Alma Mater of Australian boxers?", "What was the Alma Mater of a Australian boxer?", "What was the Alma Mater of Australian boxers?", "Which educational institution is the Alma Mater of a Australian boxer?", "Which educational institution is the Alma Mater of Australian boxers?", "Which educational institution was the Alma Mater of a Australian boxer?", "Which educational institution was the Alma Mater of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "151",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian cyclist?", "Give me the Alma Mater of Australian cyclists?", "Tell me the Alma Mater of a Australian cyclist?", "Tell me the Alma Mater of Australian cyclists?", "What is the Alma Mater of a Australian cyclist?", "What is the Alma Mater of Australian cyclists?", "What was the Alma Mater of a Australian cyclist?", "What was the Alma Mater of Australian cyclists?", "Which educational institution is the Alma Mater of a Australian cyclist?", "Which educational institution is the Alma Mater of Australian cyclists?", "Which educational institution was the Alma Mater of a Australian cyclist?", "Which educational institution was the Alma Mater of Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "152",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian office holder?", "Give me the Alma Mater of Australian office holders?", "Tell me the Alma Mater of a Australian office holder?", "Tell me the Alma Mater of Australian office holders?", "What is the Alma Mater of a Australian office holder?", "What is the Alma Mater of Australian office holders?", "What was the Alma Mater of a Australian office holder?", "What was the Alma Mater of Australian office holders?", "Which educational institution is the Alma Mater of a Australian office holder?", "Which educational institution is the Alma Mater of Australian office holders?", "Which educational institution was the Alma Mater of a Australian office holder?", "Which educational institution was the Alma Mater of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "153",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian economist?", "Give me the Alma Mater of Australian economists?", "Tell me the Alma Mater of a Australian economist?", "Tell me the Alma Mater of Australian economists?", "What is the Alma Mater of a Australian economist?", "What is the Alma Mater of Australian economists?", "What was the Alma Mater of a Australian economist?", "What was the Alma Mater of Australian economists?", "Which educational institution is the Alma Mater of a Australian economist?", "Which educational institution is the Alma Mater of Australian economists?", "Which educational institution was the Alma Mater of a Australian economist?", "Which educational institution was the Alma Mater of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "154",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian athlete?", "Give me the Alma Mater of Australian athletes?", "Tell me the Alma Mater of a Australian athlete?", "Tell me the Alma Mater of Australian athletes?", "What is the Alma Mater of a Australian athlete?", "What is the Alma Mater of Australian athletes?", "What was the Alma Mater of a Australian athlete?", "What was the Alma Mater of Australian athletes?", "Which educational institution is the Alma Mater of a Australian athlete?", "Which educational institution is the Alma Mater of Australian athletes?", "Which educational institution was the Alma Mater of a Australian athlete?", "Which educational institution was the Alma Mater of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "155",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian racing driver?", "Give me the Alma Mater of Australian racing drivers?", "Tell me the Alma Mater of a Australian racing driver?", "Tell me the Alma Mater of Australian racing drivers?", "What is the Alma Mater of a Australian racing driver?", "What is the Alma Mater of Australian racing drivers?", "What was the Alma Mater of a Australian racing driver?", "What was the Alma Mater of Australian racing drivers?", "Which educational institution is the Alma Mater of a Australian racing driver?", "Which educational institution is the Alma Mater of Australian racing drivers?", "Which educational institution was the Alma Mater of a Australian racing driver?", "Which educational institution was the Alma Mater of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "156",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian golf player?", "Give me the Alma Mater of Australian golf players?", "Tell me the Alma Mater of a Australian golf player?", "Tell me the Alma Mater of Australian golf players?", "What is the Alma Mater of a Australian golf player?", "What is the Alma Mater of Australian golf players?", "What was the Alma Mater of a Australian golf player?", "What was the Alma Mater of Australian golf players?", "Which educational institution is the Alma Mater of a Australian golf player?", "Which educational institution is the Alma Mater of Australian golf players?", "Which educational institution was the Alma Mater of a Australian golf player?", "Which educational institution was the Alma Mater of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "157",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian politician?", "Give me the Alma Mater of Australian politicians?", "Tell me the Alma Mater of a Australian politician?", "Tell me the Alma Mater of Australian politicians?", "What is the Alma Mater of a Australian politician?", "What is the Alma Mater of Australian politicians?", "What was the Alma Mater of a Australian politician?", "What was the Alma Mater of Australian politicians?", "Which educational institution is the Alma Mater of a Australian politician?", "Which educational institution is the Alma Mater of Australian politicians?", "Which educational institution was the Alma Mater of a Australian politician?", "Which educational institution was the Alma Mater of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "158",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian swimmer?", "Give me the Alma Mater of Australian swimmers?", "Tell me the Alma Mater of a Australian swimmer?", "Tell me the Alma Mater of Australian swimmers?", "What is the Alma Mater of a Australian swimmer?", "What is the Alma Mater of Australian swimmers?", "What was the Alma Mater of a Australian swimmer?", "What was the Alma Mater of Australian swimmers?", "Which educational institution is the Alma Mater of a Australian swimmer?", "Which educational institution is the Alma Mater of Australian swimmers?", "Which educational institution was the Alma Mater of a Australian swimmer?", "Which educational institution was the Alma Mater of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "159",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian person?", "Give me the Alma Mater of Australian persons?", "Tell me the Alma Mater of a Australian person?", "Tell me the Alma Mater of Australian persons?", "What is the Alma Mater of a Australian person?", "What is the Alma Mater of Australian persons?", "What was the Alma Mater of a Australian person?", "What was the Alma Mater of Australian persons?", "Which educational institution is the Alma Mater of a Australian person?", "Which educational institution is the Alma Mater of Australian persons?", "Which educational institution was the Alma Mater of a Australian person?", "Which educational institution was the Alma Mater of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "160",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian Christian Bishop?", "Give me the Alma Mater of Australian Christian Bishops?", "Tell me the Alma Mater of a Australian Christian Bishop?", "Tell me the Alma Mater of Australian Christian Bishops?", "What is the Alma Mater of a Australian Christian Bishop?", "What is the Alma Mater of Australian Christian Bishops?", "What was the Alma Mater of a Australian Christian Bishop?", "What was the Alma Mater of Australian Christian Bishops?", "Which educational institution is the Alma Mater of a Australian Christian Bishop?", "Which educational institution is the Alma Mater of Australian Christian Bishops?", "Which educational institution was the Alma Mater of a Australian Christian Bishop?", "Which educational institution was the Alma Mater of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "161",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian figure skater?", "Give me the Alma Mater of Australian figure skaters?", "Tell me the Alma Mater of a Australian figure skater?", "Tell me the Alma Mater of Australian figure skaters?", "What is the Alma Mater of a Australian figure skater?", "What is the Alma Mater of Australian figure skaters?", "What was the Alma Mater of a Australian figure skater?", "What was the Alma Mater of Australian figure skaters?", "Which educational institution is the Alma Mater of a Australian figure skater?", "Which educational institution is the Alma Mater of Australian figure skaters?", "Which educational institution was the Alma Mater of a Australian figure skater?", "Which educational institution was the Alma Mater of Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "162",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian writer?", "Give me the Alma Mater of Australian writers?", "Tell me the Alma Mater of a Australian writer?", "Tell me the Alma Mater of Australian writers?", "What is the Alma Mater of a Australian writer?", "What is the Alma Mater of Australian writers?", "What was the Alma Mater of a Australian writer?", "What was the Alma Mater of Australian writers?", "Which educational institution is the Alma Mater of a Australian writer?", "Which educational institution is the Alma Mater of Australian writers?", "Which educational institution was the Alma Mater of a Australian writer?", "Which educational institution was the Alma Mater of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "163",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Australian soccer player?", "Give me the Alma Mater of Australian soccer players?", "Tell me the Alma Mater of a Australian soccer player?", "Tell me the Alma Mater of Australian soccer players?", "What is the Alma Mater of a Australian soccer player?", "What is the Alma Mater of Australian soccer players?", "What was the Alma Mater of a Australian soccer player?", "What was the Alma Mater of Australian soccer players?", "Which educational institution is the Alma Mater of a Australian soccer player?", "Which educational institution is the Alma Mater of Australian soccer players?", "Which educational institution was the Alma Mater of a Australian soccer player?", "Which educational institution was the Alma Mater of Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "164",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian cleric?", "Give me the Alma Mater of Belgian clerics?", "Tell me the Alma Mater of a Belgian cleric?", "Tell me the Alma Mater of Belgian clerics?", "What is the Alma Mater of a Belgian cleric?", "What is the Alma Mater of Belgian clerics?", "What was the Alma Mater of a Belgian cleric?", "What was the Alma Mater of Belgian clerics?", "Which educational institution is the Alma Mater of a Belgian cleric?", "Which educational institution is the Alma Mater of Belgian clerics?", "Which educational institution was the Alma Mater of a Belgian cleric?", "Which educational institution was the Alma Mater of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "165",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian office holder?", "Give me the Alma Mater of Belgian office holders?", "Tell me the Alma Mater of a Belgian office holder?", "Tell me the Alma Mater of Belgian office holders?", "What is the Alma Mater of a Belgian office holder?", "What is the Alma Mater of Belgian office holders?", "What was the Alma Mater of a Belgian office holder?", "What was the Alma Mater of Belgian office holders?", "Which educational institution is the Alma Mater of a Belgian office holder?", "Which educational institution is the Alma Mater of Belgian office holders?", "Which educational institution was the Alma Mater of a Belgian office holder?", "Which educational institution was the Alma Mater of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "166",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian agent?", "Give me the Alma Mater of Belgian agents?", "Tell me the Alma Mater of a Belgian agent?", "Tell me the Alma Mater of Belgian agents?", "What is the Alma Mater of a Belgian agent?", "What is the Alma Mater of Belgian agents?", "What was the Alma Mater of a Belgian agent?", "What was the Alma Mater of Belgian agents?", "Which educational institution is the Alma Mater of a Belgian agent?", "Which educational institution is the Alma Mater of Belgian agents?", "Which educational institution was the Alma Mater of a Belgian agent?", "Which educational institution was the Alma Mater of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "167",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian economist?", "Give me the Alma Mater of Belgian economists?", "Tell me the Alma Mater of a Belgian economist?", "Tell me the Alma Mater of Belgian economists?", "What is the Alma Mater of a Belgian economist?", "What is the Alma Mater of Belgian economists?", "What was the Alma Mater of a Belgian economist?", "What was the Alma Mater of Belgian economists?", "Which educational institution is the Alma Mater of a Belgian economist?", "Which educational institution is the Alma Mater of Belgian economists?", "Which educational institution was the Alma Mater of a Belgian economist?", "Which educational institution was the Alma Mater of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "168",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorcycle rider?", "Give me the Alma Mater of Belgian motorcycle riders?", "Tell me the Alma Mater of a Belgian motorcycle rider?", "Tell me the Alma Mater of Belgian motorcycle riders?", "What is the Alma Mater of a Belgian motorcycle rider?", "What is the Alma Mater of Belgian motorcycle riders?", "What was the Alma Mater of a Belgian motorcycle rider?", "What was the Alma Mater of Belgian motorcycle riders?", "Which educational institution is the Alma Mater of a Belgian motorcycle rider?", "Which educational institution is the Alma Mater of Belgian motorcycle riders?", "Which educational institution was the Alma Mater of a Belgian motorcycle rider?", "Which educational institution was the Alma Mater of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "169",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian artist?", "Give me the Alma Mater of Belgian artists?", "Tell me the Alma Mater of a Belgian artist?", "Tell me the Alma Mater of Belgian artists?", "What is the Alma Mater of a Belgian artist?", "What is the Alma Mater of Belgian artists?", "What was the Alma Mater of a Belgian artist?", "What was the Alma Mater of Belgian artists?", "Which educational institution is the Alma Mater of a Belgian artist?", "Which educational institution is the Alma Mater of Belgian artists?", "Which educational institution was the Alma Mater of a Belgian artist?", "Which educational institution was the Alma Mater of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "170",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian athlete?", "Give me the Alma Mater of Belgian athletes?", "Tell me the Alma Mater of a Belgian athlete?", "Tell me the Alma Mater of Belgian athletes?", "What is the Alma Mater of a Belgian athlete?", "What is the Alma Mater of Belgian athletes?", "What was the Alma Mater of a Belgian athlete?", "What was the Alma Mater of Belgian athletes?", "Which educational institution is the Alma Mater of a Belgian athlete?", "Which educational institution is the Alma Mater of Belgian athletes?", "Which educational institution was the Alma Mater of a Belgian athlete?", "Which educational institution was the Alma Mater of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "171",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian scientist?", "Give me the Alma Mater of Belgian scientists?", "Tell me the Alma Mater of a Belgian scientist?", "Tell me the Alma Mater of Belgian scientists?", "What is the Alma Mater of a Belgian scientist?", "What is the Alma Mater of Belgian scientists?", "What was the Alma Mater of a Belgian scientist?", "What was the Alma Mater of Belgian scientists?", "Which educational institution is the Alma Mater of a Belgian scientist?", "Which educational institution is the Alma Mater of Belgian scientists?", "Which educational institution was the Alma Mater of a Belgian scientist?", "Which educational institution was the Alma Mater of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "172",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian architect?", "Give me the Alma Mater of Belgian architects?", "Tell me the Alma Mater of a Belgian architect?", "Tell me the Alma Mater of Belgian architects?", "What is the Alma Mater of a Belgian architect?", "What is the Alma Mater of Belgian architects?", "What was the Alma Mater of a Belgian architect?", "What was the Alma Mater of Belgian architects?", "Which educational institution is the Alma Mater of a Belgian architect?", "Which educational institution is the Alma Mater of Belgian architects?", "Which educational institution was the Alma Mater of a Belgian architect?", "Which educational institution was the Alma Mater of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "173",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian golf player?", "Give me the Alma Mater of Belgian golf players?", "Tell me the Alma Mater of a Belgian golf player?", "Tell me the Alma Mater of Belgian golf players?", "What is the Alma Mater of a Belgian golf player?", "What is the Alma Mater of Belgian golf players?", "What was the Alma Mater of a Belgian golf player?", "What was the Alma Mater of Belgian golf players?", "Which educational institution is the Alma Mater of a Belgian golf player?", "Which educational institution is the Alma Mater of Belgian golf players?", "Which educational institution was the Alma Mater of a Belgian golf player?", "Which educational institution was the Alma Mater of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "174",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian racing driver?", "Give me the Alma Mater of Belgian racing drivers?", "Tell me the Alma Mater of a Belgian racing driver?", "Tell me the Alma Mater of Belgian racing drivers?", "What is the Alma Mater of a Belgian racing driver?", "What is the Alma Mater of Belgian racing drivers?", "What was the Alma Mater of a Belgian racing driver?", "What was the Alma Mater of Belgian racing drivers?", "Which educational institution is the Alma Mater of a Belgian racing driver?", "Which educational institution is the Alma Mater of Belgian racing drivers?", "Which educational institution was the Alma Mater of a Belgian racing driver?", "Which educational institution was the Alma Mater of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "175",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian politician?", "Give me the Alma Mater of Belgian politicians?", "Tell me the Alma Mater of a Belgian politician?", "Tell me the Alma Mater of Belgian politicians?", "What is the Alma Mater of a Belgian politician?", "What is the Alma Mater of Belgian politicians?", "What was the Alma Mater of a Belgian politician?", "What was the Alma Mater of Belgian politicians?", "Which educational institution is the Alma Mater of a Belgian politician?", "Which educational institution is the Alma Mater of Belgian politicians?", "Which educational institution was the Alma Mater of a Belgian politician?", "Which educational institution was the Alma Mater of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "176",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian swimmer?", "Give me the Alma Mater of Belgian swimmers?", "Tell me the Alma Mater of a Belgian swimmer?", "Tell me the Alma Mater of Belgian swimmers?", "What is the Alma Mater of a Belgian swimmer?", "What is the Alma Mater of Belgian swimmers?", "What was the Alma Mater of a Belgian swimmer?", "What was the Alma Mater of Belgian swimmers?", "Which educational institution is the Alma Mater of a Belgian swimmer?", "Which educational institution is the Alma Mater of Belgian swimmers?", "Which educational institution was the Alma Mater of a Belgian swimmer?", "Which educational institution was the Alma Mater of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "177",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian volleyball player?", "Give me the Alma Mater of Belgian volleyball players?", "Tell me the Alma Mater of a Belgian volleyball player?", "Tell me the Alma Mater of Belgian volleyball players?", "What is the Alma Mater of a Belgian volleyball player?", "What is the Alma Mater of Belgian volleyball players?", "What was the Alma Mater of a Belgian volleyball player?", "What was the Alma Mater of Belgian volleyball players?", "Which educational institution is the Alma Mater of a Belgian volleyball player?", "Which educational institution is the Alma Mater of Belgian volleyball players?", "Which educational institution was the Alma Mater of a Belgian volleyball player?", "Which educational institution was the Alma Mater of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "178",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian person?", "Give me the Alma Mater of Belgian persons?", "Tell me the Alma Mater of a Belgian person?", "Tell me the Alma Mater of Belgian persons?", "What is the Alma Mater of a Belgian person?", "What is the Alma Mater of Belgian persons?", "What was the Alma Mater of a Belgian person?", "What was the Alma Mater of Belgian persons?", "Which educational institution is the Alma Mater of a Belgian person?", "Which educational institution is the Alma Mater of Belgian persons?", "Which educational institution was the Alma Mater of a Belgian person?", "Which educational institution was the Alma Mater of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "179",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian Christian Bishop?", "Give me the Alma Mater of Belgian Christian Bishops?", "Tell me the Alma Mater of a Belgian Christian Bishop?", "Tell me the Alma Mater of Belgian Christian Bishops?", "What is the Alma Mater of a Belgian Christian Bishop?", "What is the Alma Mater of Belgian Christian Bishops?", "What was the Alma Mater of a Belgian Christian Bishop?", "What was the Alma Mater of Belgian Christian Bishops?", "Which educational institution is the Alma Mater of a Belgian Christian Bishop?", "Which educational institution is the Alma Mater of Belgian Christian Bishops?", "Which educational institution was the Alma Mater of a Belgian Christian Bishop?", "Which educational institution was the Alma Mater of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "180",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian comics creator?", "Give me the Alma Mater of Belgian comics creators?", "Tell me the Alma Mater of a Belgian comics creator?", "Tell me the Alma Mater of Belgian comics creators?", "What is the Alma Mater of a Belgian comics creator?", "What is the Alma Mater of Belgian comics creators?", "What was the Alma Mater of a Belgian comics creator?", "What was the Alma Mater of Belgian comics creators?", "Which educational institution is the Alma Mater of a Belgian comics creator?", "Which educational institution is the Alma Mater of Belgian comics creators?", "Which educational institution was the Alma Mater of a Belgian comics creator?", "Which educational institution was the Alma Mater of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "181",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian writer?", "Give me the Alma Mater of Belgian writers?", "Tell me the Alma Mater of a Belgian writer?", "Tell me the Alma Mater of Belgian writers?", "What is the Alma Mater of a Belgian writer?", "What is the Alma Mater of Belgian writers?", "What was the Alma Mater of a Belgian writer?", "What was the Alma Mater of Belgian writers?", "Which educational institution is the Alma Mater of a Belgian writer?", "Which educational institution is the Alma Mater of Belgian writers?", "Which educational institution was the Alma Mater of a Belgian writer?", "Which educational institution was the Alma Mater of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "182",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian motorsport racer?", "Give me the Alma Mater of Belgian motorsport racers?", "Tell me the Alma Mater of a Belgian motorsport racer?", "Tell me the Alma Mater of Belgian motorsport racers?", "What is the Alma Mater of a Belgian motorsport racer?", "What is the Alma Mater of Belgian motorsport racers?", "What was the Alma Mater of a Belgian motorsport racer?", "What was the Alma Mater of Belgian motorsport racers?", "Which educational institution is the Alma Mater of a Belgian motorsport racer?", "Which educational institution is the Alma Mater of Belgian motorsport racers?", "Which educational institution was the Alma Mater of a Belgian motorsport racer?", "Which educational institution was the Alma Mater of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "183",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "SCHOOL",
    "frameType" : "NPP",
    "sentences" : [ "Give me the Alma Mater of a Belgian musical artist?", "Give me the Alma Mater of Belgian musical artists?", "Tell me the Alma Mater of a Belgian musical artist?", "Tell me the Alma Mater of Belgian musical artists?", "What is the Alma Mater of a Belgian musical artist?", "What is the Alma Mater of Belgian musical artists?", "What was the Alma Mater of a Belgian musical artist?", "What was the Alma Mater of Belgian musical artists?", "Which educational institution is the Alma Mater of a Belgian musical artist?", "Which educational institution is the Alma Mater of Belgian musical artists?", "Which educational institution was the Alma Mater of a Belgian musical artist?", "Which educational institution was the Alma Mater of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/almaMater> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "184",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of the spouse of $x?", "Tell me the birth date of the spouse of $x?", "What is the birth date of the spouse of $x?", "What was the birth date of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Andrzej Wajda",
        "uri" : "http://dbpedia.org/resource/Andrzej_Wajda"
      }, {
        "label" : "Brad Pitt",
        "uri" : "http://dbpedia.org/resource/Brad_Pitt"
      }, {
        "label" : "Carole Lombard",
        "uri" : "http://dbpedia.org/resource/Carole_Lombard"
      }, {
        "label" : "Caroline of Brunswick",
        "uri" : "http://dbpedia.org/resource/Caroline_of_Brunswick"
      }, {
        "label" : "Catherine I of Russia",
        "uri" : "http://dbpedia.org/resource/Catherine_I_of_Russia"
      }, {
        "label" : "Christopher Lambert",
        "uri" : "http://dbpedia.org/resource/Christopher_Lambert"
      }, {
        "label" : "Clark Gable",
        "uri" : "http://dbpedia.org/resource/Clark_Gable"
      }, {
        "label" : "Cnut the Great",
        "uri" : "http://dbpedia.org/resource/Cnut_the_Great"
      }, {
        "label" : "Edmond Hamilton",
        "uri" : "http://dbpedia.org/resource/Edmond_Hamilton"
      }, {
        "label" : "Elizabeth Taylor",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Taylor"
      }, {
        "label" : "Elizabeth Woodville",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Woodville"
      }, {
        "label" : "Emma of Normandy",
        "uri" : "http://dbpedia.org/resource/Emma_of_Normandy"
      }, {
        "label" : "George IV of the United Kingdom",
        "uri" : "http://dbpedia.org/resource/George_IV_of_the_United_Kingdom"
      }, {
        "label" : "Gwyneth Paltrow",
        "uri" : "http://dbpedia.org/resource/Gwyneth_Paltrow"
      }, {
        "label" : "Ingrid Bergman",
        "uri" : "http://dbpedia.org/resource/Ingrid_Bergman"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Leigh Brackett",
        "uri" : "http://dbpedia.org/resource/Leigh_Brackett"
      }, {
        "label" : "Louis XVI of France",
        "uri" : "http://dbpedia.org/resource/Louis_XVI_of_France"
      }, {
        "label" : "Marie Antoinette",
        "uri" : "http://dbpedia.org/resource/Marie_Antoinette"
      }, {
        "label" : "Peter the Great",
        "uri" : "http://dbpedia.org/resource/Peter_the_Great"
      }, {
        "label" : "Richard Burton",
        "uri" : "http://dbpedia.org/resource/Richard_Burton"
      }, {
        "label" : "Roberto Rossellini",
        "uri" : "http://dbpedia.org/resource/Roberto_Rossellini"
      }, {
        "label" : "Salman Rushdie",
        "uri" : "http://dbpedia.org/resource/Salman_Rushdie"
      }, {
        "label" : "Sylvia Plath",
        "uri" : "http://dbpedia.org/resource/Sylvia_Plath"
      }, {
        "label" : "Ted Hughes",
        "uri" : "http://dbpedia.org/resource/Ted_Hughes"
      }, {
        "label" : "Theophanu",
        "uri" : "http://dbpedia.org/resource/Theophanu"
      }, {
        "label" : "Val Kilmer",
        "uri" : "http://dbpedia.org/resource/Val_Kilmer"
      }, {
        "label" : "Vivien Leigh",
        "uri" : "http://dbpedia.org/resource/Vivien_Leigh"
      }, {
        "label" : "Camille Flammarion",
        "uri" : "http://dbpedia.org/resource/Camille_Flammarion"
      }, {
        "label" : "Chris Martin",
        "uri" : "http://dbpedia.org/resource/Chris_Martin"
      }, {
        "label" : "Céline Bara",
        "uri" : "http://dbpedia.org/resource/Céline_Bara"
      }, {
        "label" : "Dennis Quaid",
        "uri" : "http://dbpedia.org/resource/Dennis_Quaid"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John Grey of Groby",
        "uri" : "http://dbpedia.org/resource/John_Grey_of_Groby"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Padma Lakshmi",
        "uri" : "http://dbpedia.org/resource/Padma_Lakshmi"
      }, {
        "label" : "Talisa Soto",
        "uri" : "http://dbpedia.org/resource/Talisa_Soto"
      }, {
        "label" : "Aaron Spelling",
        "uri" : "http://dbpedia.org/resource/Aaron_Spelling"
      }, {
        "label" : "Adam Hochschild",
        "uri" : "http://dbpedia.org/resource/Adam_Hochschild"
      }, {
        "label" : "Alastair Dunnett",
        "uri" : "http://dbpedia.org/resource/Alastair_Dunnett"
      }, {
        "label" : "Arlie Russell Hochschild",
        "uri" : "http://dbpedia.org/resource/Arlie_Russell_Hochschild"
      }, {
        "label" : "Beata Tyszkiewicz",
        "uri" : "http://dbpedia.org/resource/Beata_Tyszkiewicz"
      }, {
        "label" : "Benjamin Bratt",
        "uri" : "http://dbpedia.org/resource/Benjamin_Bratt"
      }, {
        "label" : "Bunker Roy",
        "uri" : "http://dbpedia.org/resource/Bunker_Roy"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Cyrille Bara",
        "uri" : "http://dbpedia.org/resource/Cyrille_Bara"
      }, {
        "label" : "Dorothy Dunnett",
        "uri" : "http://dbpedia.org/resource/Dorothy_Dunnett"
      }, {
        "label" : "Ehud Olmert",
        "uri" : "http://dbpedia.org/resource/Ehud_Olmert"
      }, {
        "label" : "Elvira of Castile, Queen of León",
        "uri" : "http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León"
      }, {
        "label" : "Gemini Ganesan",
        "uri" : "http://dbpedia.org/resource/Gemini_Ganesan"
      }, {
        "label" : "Harriet Smithson",
        "uri" : "http://dbpedia.org/resource/Harriet_Smithson"
      }, {
        "label" : "James Harris Simons",
        "uri" : "http://dbpedia.org/resource/James_Harris_Simons"
      }, {
        "label" : "Lewis Craig Humphrey",
        "uri" : "http://dbpedia.org/resource/Lewis_Craig_Humphrey"
      }, {
        "label" : "Paul Hasluck",
        "uri" : "http://dbpedia.org/resource/Paul_Hasluck"
      }, {
        "label" : "Paula Dockery",
        "uri" : "http://dbpedia.org/resource/Paula_Dockery"
      }, {
        "label" : "Robert Sidney, 2nd Earl of Leicester",
        "uri" : "http://dbpedia.org/resource/Robert_Sidney,_2nd_Earl_of_Leicester"
      }, {
        "label" : "Rolly Bester",
        "uri" : "http://dbpedia.org/resource/Rolly_Bester"
      }, {
        "label" : "Ruy Guerra",
        "uri" : "http://dbpedia.org/resource/Ruy_Guerra"
      }, {
        "label" : "Clara McMillen",
        "uri" : "http://dbpedia.org/resource/Clara_McMillen"
      }, {
        "label" : "Diana Gould (dancer)",
        "uri" : "http://dbpedia.org/resource/Diana_Gould_(dancer)"
      }, {
        "label" : "Sidney Miller (actor)",
        "uri" : "http://dbpedia.org/resource/Sidney_Miller_(actor)"
      }, {
        "label" : "Sir Edward Burgh",
        "uri" : "http://dbpedia.org/resource/Sir_Edward_Burgh"
      }, {
        "label" : "Henry Morgenthau Jr.",
        "uri" : "http://dbpedia.org/resource/Henry_Morgenthau_Jr."
      }, {
        "label" : "Lydia Lopokova",
        "uri" : "http://dbpedia.org/resource/Lydia_Lopokova"
      }, {
        "label" : "Maxwell Reed",
        "uri" : "http://dbpedia.org/resource/Maxwell_Reed"
      }, {
        "label" : "Sigrid the Haughty",
        "uri" : "http://dbpedia.org/resource/Sigrid_the_Haughty"
      }, {
        "label" : "Elena Ceaușescu",
        "uri" : "http://dbpedia.org/resource/Elena_Ceaușescu"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Ruqaiya Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Ruqaiya_Sultan_Begum"
      }, {
        "label" : "Eliza Jumel",
        "uri" : "http://dbpedia.org/resource/Eliza_Jumel"
      }, {
        "label" : "Lena Herzog",
        "uri" : "http://dbpedia.org/resource/Lena_Herzog"
      }, {
        "label" : "Katie Lee (chef)",
        "uri" : "http://dbpedia.org/resource/Katie_Lee_(chef)"
      }, {
        "label" : "Elsa Pataky",
        "uri" : "http://dbpedia.org/resource/Elsa_Pataky"
      }, {
        "label" : "Maïwenn",
        "uri" : "http://dbpedia.org/resource/Maïwenn"
      }, {
        "label" : "Tom Courtenay",
        "uri" : "http://dbpedia.org/resource/Tom_Courtenay"
      }, {
        "label" : "Christian I of Denmark",
        "uri" : "http://dbpedia.org/resource/Christian_I_of_Denmark"
      }, {
        "label" : "Edward of Westminster, Prince of Wales",
        "uri" : "http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales"
      }, {
        "label" : "Joanne Woodward",
        "uri" : "http://dbpedia.org/resource/Joanne_Woodward"
      }, {
        "label" : "Lady Caroline Lamb",
        "uri" : "http://dbpedia.org/resource/Lady_Caroline_Lamb"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Maria Fitzherbert",
        "uri" : "http://dbpedia.org/resource/Maria_Fitzherbert"
      }, {
        "label" : "Mickey Deans",
        "uri" : "http://dbpedia.org/resource/Mickey_Deans"
      }, {
        "label" : "Alice Hathaway Lee Roosevelt",
        "uri" : "http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "Alfred Steele",
        "uri" : "http://dbpedia.org/resource/Alfred_Steele"
      }, {
        "label" : "Barbara Hutton",
        "uri" : "http://dbpedia.org/resource/Barbara_Hutton"
      }, {
        "label" : "Sidney Luft",
        "uri" : "http://dbpedia.org/resource/Sidney_Luft"
      }, {
        "label" : "Sylvia Ashley",
        "uri" : "http://dbpedia.org/resource/Sylvia_Ashley"
      }, {
        "label" : "Salima Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Salima_Sultan_Begum"
      }, {
        "label" : "Cecily Neville, Duchess of Warwick",
        "uri" : "http://dbpedia.org/resource/Cecily_Neville,_Duchess_of_Warwick"
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "John Jay O'Connor",
        "uri" : "http://dbpedia.org/resource/John_Jay_O'Connor"
      }, {
        "label" : "Marta Fernandez Miranda de Batista",
        "uri" : "http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista"
      }, {
        "label" : "Josephine Dillon",
        "uri" : "http://dbpedia.org/resource/Josephine_Dillon"
      }, {
        "label" : "Sunita Deshpande",
        "uri" : "http://dbpedia.org/resource/Sunita_Deshpande"
      }, {
        "label" : "Bettina Gorton",
        "uri" : "http://dbpedia.org/resource/Bettina_Gorton"
      }, {
        "label" : "Luma de Oliveira",
        "uri" : "http://dbpedia.org/resource/Luma_de_Oliveira"
      }, {
        "label" : "Tove of the Obotrites",
        "uri" : "http://dbpedia.org/resource/Tove_of_the_Obotrites"
      }, {
        "label" : "Gelli de Belen",
        "uri" : "http://dbpedia.org/resource/Gelli_de_Belen"
      }, {
        "label" : "Albia Dominica",
        "uri" : "http://dbpedia.org/resource/Albia_Dominica"
      } ]
    },
    "combination" : true
  }, {
    "id" : "185",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian agent?", "Give me the birth date of Australian agents?", "Tell me the birth date of a Australian agent?", "Tell me the birth date of Australian agents?", "What is the birth date of a Australian agent?", "What is the birth date of Australian agents?", "What was the birth date of a Australian agent?", "What was the birth date of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "186",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian artist?", "Give me the birth date of Australian artists?", "Tell me the birth date of a Australian artist?", "Tell me the birth date of Australian artists?", "What is the birth date of a Australian artist?", "What is the birth date of Australian artists?", "What was the birth date of a Australian artist?", "What was the birth date of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "187",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian motorcycle rider?", "Give me the birth date of Australian motorcycle riders?", "Tell me the birth date of a Australian motorcycle rider?", "Tell me the birth date of Australian motorcycle riders?", "What is the birth date of a Australian motorcycle rider?", "What is the birth date of Australian motorcycle riders?", "What was the birth date of a Australian motorcycle rider?", "What was the birth date of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "188",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian scientist?", "Give me the birth date of Australian scientists?", "Tell me the birth date of a Australian scientist?", "Tell me the birth date of Australian scientists?", "What is the birth date of a Australian scientist?", "What is the birth date of Australian scientists?", "What was the birth date of a Australian scientist?", "What was the birth date of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "189",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian volleyball player?", "Give me the birth date of Australian volleyball players?", "Tell me the birth date of a Australian volleyball player?", "Tell me the birth date of Australian volleyball players?", "What is the birth date of a Australian volleyball player?", "What is the birth date of Australian volleyball players?", "What was the birth date of a Australian volleyball player?", "What was the birth date of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "190",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian basketball player?", "Give me the birth date of Australian basketball players?", "Tell me the birth date of a Australian basketball player?", "Tell me the birth date of Australian basketball players?", "What is the birth date of a Australian basketball player?", "What is the birth date of Australian basketball players?", "What was the birth date of a Australian basketball player?", "What was the birth date of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "191",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian speedway rider?", "Give me the birth date of Australian speedway riders?", "Tell me the birth date of a Australian speedway rider?", "Tell me the birth date of Australian speedway riders?", "What is the birth date of a Australian speedway rider?", "What is the birth date of Australian speedway riders?", "What was the birth date of a Australian speedway rider?", "What was the birth date of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "192",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian model?", "Give me the birth date of Australian models?", "Tell me the birth date of a Australian model?", "Tell me the birth date of Australian models?", "What is the birth date of a Australian model?", "What is the birth date of Australian models?", "What was the birth date of a Australian model?", "What was the birth date of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "193",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian motorsport racer?", "Give me the birth date of Australian motorsport racers?", "Tell me the birth date of a Australian motorsport racer?", "Tell me the birth date of Australian motorsport racers?", "What is the birth date of a Australian motorsport racer?", "What is the birth date of Australian motorsport racers?", "What was the birth date of a Australian motorsport racer?", "What was the birth date of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "194",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian ice hockey player?", "Give me the birth date of Australian ice hockey players?", "Tell me the birth date of a Australian ice hockey player?", "Tell me the birth date of Australian ice hockey players?", "What is the birth date of a Australian ice hockey player?", "What is the birth date of Australian ice hockey players?", "What was the birth date of a Australian ice hockey player?", "What was the birth date of Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "195",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian member of parliament?", "Give me the birth date of Australian member of parliaments?", "Tell me the birth date of a Australian member of parliament?", "Tell me the birth date of Australian member of parliaments?", "What is the birth date of a Australian member of parliament?", "What is the birth date of Australian member of parliaments?", "What was the birth date of a Australian member of parliament?", "What was the birth date of Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "196",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian cleric?", "Give me the birth date of Australian clerics?", "Tell me the birth date of a Australian cleric?", "Tell me the birth date of Australian clerics?", "What is the birth date of a Australian cleric?", "What is the birth date of Australian clerics?", "What was the birth date of a Australian cleric?", "What was the birth date of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "197",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian boxer?", "Give me the birth date of Australian boxers?", "Tell me the birth date of a Australian boxer?", "Tell me the birth date of Australian boxers?", "What is the birth date of a Australian boxer?", "What is the birth date of Australian boxers?", "What was the birth date of a Australian boxer?", "What was the birth date of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "198",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian cyclist?", "Give me the birth date of Australian cyclists?", "Tell me the birth date of a Australian cyclist?", "Tell me the birth date of Australian cyclists?", "What is the birth date of a Australian cyclist?", "What is the birth date of Australian cyclists?", "What was the birth date of a Australian cyclist?", "What was the birth date of Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "199",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian office holder?", "Give me the birth date of Australian office holders?", "Tell me the birth date of a Australian office holder?", "Tell me the birth date of Australian office holders?", "What is the birth date of a Australian office holder?", "What is the birth date of Australian office holders?", "What was the birth date of a Australian office holder?", "What was the birth date of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "200",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian economist?", "Give me the birth date of Australian economists?", "Tell me the birth date of a Australian economist?", "Tell me the birth date of Australian economists?", "What is the birth date of a Australian economist?", "What is the birth date of Australian economists?", "What was the birth date of a Australian economist?", "What was the birth date of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "201",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian athlete?", "Give me the birth date of Australian athletes?", "Tell me the birth date of a Australian athlete?", "Tell me the birth date of Australian athletes?", "What is the birth date of a Australian athlete?", "What is the birth date of Australian athletes?", "What was the birth date of a Australian athlete?", "What was the birth date of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "202",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian racing driver?", "Give me the birth date of Australian racing drivers?", "Tell me the birth date of a Australian racing driver?", "Tell me the birth date of Australian racing drivers?", "What is the birth date of a Australian racing driver?", "What is the birth date of Australian racing drivers?", "What was the birth date of a Australian racing driver?", "What was the birth date of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "203",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian golf player?", "Give me the birth date of Australian golf players?", "Tell me the birth date of a Australian golf player?", "Tell me the birth date of Australian golf players?", "What is the birth date of a Australian golf player?", "What is the birth date of Australian golf players?", "What was the birth date of a Australian golf player?", "What was the birth date of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "204",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian politician?", "Give me the birth date of Australian politicians?", "Tell me the birth date of a Australian politician?", "Tell me the birth date of Australian politicians?", "What is the birth date of a Australian politician?", "What is the birth date of Australian politicians?", "What was the birth date of a Australian politician?", "What was the birth date of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "205",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian swimmer?", "Give me the birth date of Australian swimmers?", "Tell me the birth date of a Australian swimmer?", "Tell me the birth date of Australian swimmers?", "What is the birth date of a Australian swimmer?", "What is the birth date of Australian swimmers?", "What was the birth date of a Australian swimmer?", "What was the birth date of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "206",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian person?", "Give me the birth date of Australian persons?", "Tell me the birth date of a Australian person?", "Tell me the birth date of Australian persons?", "What is the birth date of a Australian person?", "What is the birth date of Australian persons?", "What was the birth date of a Australian person?", "What was the birth date of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "207",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian Christian Bishop?", "Give me the birth date of Australian Christian Bishops?", "Tell me the birth date of a Australian Christian Bishop?", "Tell me the birth date of Australian Christian Bishops?", "What is the birth date of a Australian Christian Bishop?", "What is the birth date of Australian Christian Bishops?", "What was the birth date of a Australian Christian Bishop?", "What was the birth date of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "208",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian figure skater?", "Give me the birth date of Australian figure skaters?", "Tell me the birth date of a Australian figure skater?", "Tell me the birth date of Australian figure skaters?", "What is the birth date of a Australian figure skater?", "What is the birth date of Australian figure skaters?", "What was the birth date of a Australian figure skater?", "What was the birth date of Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "209",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian writer?", "Give me the birth date of Australian writers?", "Tell me the birth date of a Australian writer?", "Tell me the birth date of Australian writers?", "What is the birth date of a Australian writer?", "What is the birth date of Australian writers?", "What was the birth date of a Australian writer?", "What was the birth date of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "210",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Australian soccer player?", "Give me the birth date of Australian soccer players?", "Tell me the birth date of a Australian soccer player?", "Tell me the birth date of Australian soccer players?", "What is the birth date of a Australian soccer player?", "What is the birth date of Australian soccer players?", "What was the birth date of a Australian soccer player?", "What was the birth date of Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "211",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian cleric?", "Give me the birth date of Belgian clerics?", "Tell me the birth date of a Belgian cleric?", "Tell me the birth date of Belgian clerics?", "What is the birth date of a Belgian cleric?", "What is the birth date of Belgian clerics?", "What was the birth date of a Belgian cleric?", "What was the birth date of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "212",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian office holder?", "Give me the birth date of Belgian office holders?", "Tell me the birth date of a Belgian office holder?", "Tell me the birth date of Belgian office holders?", "What is the birth date of a Belgian office holder?", "What is the birth date of Belgian office holders?", "What was the birth date of a Belgian office holder?", "What was the birth date of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "213",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian agent?", "Give me the birth date of Belgian agents?", "Tell me the birth date of a Belgian agent?", "Tell me the birth date of Belgian agents?", "What is the birth date of a Belgian agent?", "What is the birth date of Belgian agents?", "What was the birth date of a Belgian agent?", "What was the birth date of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "214",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian economist?", "Give me the birth date of Belgian economists?", "Tell me the birth date of a Belgian economist?", "Tell me the birth date of Belgian economists?", "What is the birth date of a Belgian economist?", "What is the birth date of Belgian economists?", "What was the birth date of a Belgian economist?", "What was the birth date of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "215",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorcycle rider?", "Give me the birth date of Belgian motorcycle riders?", "Tell me the birth date of a Belgian motorcycle rider?", "Tell me the birth date of Belgian motorcycle riders?", "What is the birth date of a Belgian motorcycle rider?", "What is the birth date of Belgian motorcycle riders?", "What was the birth date of a Belgian motorcycle rider?", "What was the birth date of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "216",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian artist?", "Give me the birth date of Belgian artists?", "Tell me the birth date of a Belgian artist?", "Tell me the birth date of Belgian artists?", "What is the birth date of a Belgian artist?", "What is the birth date of Belgian artists?", "What was the birth date of a Belgian artist?", "What was the birth date of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "217",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian athlete?", "Give me the birth date of Belgian athletes?", "Tell me the birth date of a Belgian athlete?", "Tell me the birth date of Belgian athletes?", "What is the birth date of a Belgian athlete?", "What is the birth date of Belgian athletes?", "What was the birth date of a Belgian athlete?", "What was the birth date of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "218",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian scientist?", "Give me the birth date of Belgian scientists?", "Tell me the birth date of a Belgian scientist?", "Tell me the birth date of Belgian scientists?", "What is the birth date of a Belgian scientist?", "What is the birth date of Belgian scientists?", "What was the birth date of a Belgian scientist?", "What was the birth date of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "219",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian architect?", "Give me the birth date of Belgian architects?", "Tell me the birth date of a Belgian architect?", "Tell me the birth date of Belgian architects?", "What is the birth date of a Belgian architect?", "What is the birth date of Belgian architects?", "What was the birth date of a Belgian architect?", "What was the birth date of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "220",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian golf player?", "Give me the birth date of Belgian golf players?", "Tell me the birth date of a Belgian golf player?", "Tell me the birth date of Belgian golf players?", "What is the birth date of a Belgian golf player?", "What is the birth date of Belgian golf players?", "What was the birth date of a Belgian golf player?", "What was the birth date of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "221",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian racing driver?", "Give me the birth date of Belgian racing drivers?", "Tell me the birth date of a Belgian racing driver?", "Tell me the birth date of Belgian racing drivers?", "What is the birth date of a Belgian racing driver?", "What is the birth date of Belgian racing drivers?", "What was the birth date of a Belgian racing driver?", "What was the birth date of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "222",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian politician?", "Give me the birth date of Belgian politicians?", "Tell me the birth date of a Belgian politician?", "Tell me the birth date of Belgian politicians?", "What is the birth date of a Belgian politician?", "What is the birth date of Belgian politicians?", "What was the birth date of a Belgian politician?", "What was the birth date of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "223",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian swimmer?", "Give me the birth date of Belgian swimmers?", "Tell me the birth date of a Belgian swimmer?", "Tell me the birth date of Belgian swimmers?", "What is the birth date of a Belgian swimmer?", "What is the birth date of Belgian swimmers?", "What was the birth date of a Belgian swimmer?", "What was the birth date of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "224",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian volleyball player?", "Give me the birth date of Belgian volleyball players?", "Tell me the birth date of a Belgian volleyball player?", "Tell me the birth date of Belgian volleyball players?", "What is the birth date of a Belgian volleyball player?", "What is the birth date of Belgian volleyball players?", "What was the birth date of a Belgian volleyball player?", "What was the birth date of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "225",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian person?", "Give me the birth date of Belgian persons?", "Tell me the birth date of a Belgian person?", "Tell me the birth date of Belgian persons?", "What is the birth date of a Belgian person?", "What is the birth date of Belgian persons?", "What was the birth date of a Belgian person?", "What was the birth date of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "226",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian Christian Bishop?", "Give me the birth date of Belgian Christian Bishops?", "Tell me the birth date of a Belgian Christian Bishop?", "Tell me the birth date of Belgian Christian Bishops?", "What is the birth date of a Belgian Christian Bishop?", "What is the birth date of Belgian Christian Bishops?", "What was the birth date of a Belgian Christian Bishop?", "What was the birth date of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "227",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian comics creator?", "Give me the birth date of Belgian comics creators?", "Tell me the birth date of a Belgian comics creator?", "Tell me the birth date of Belgian comics creators?", "What is the birth date of a Belgian comics creator?", "What is the birth date of Belgian comics creators?", "What was the birth date of a Belgian comics creator?", "What was the birth date of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "228",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian writer?", "Give me the birth date of Belgian writers?", "Tell me the birth date of a Belgian writer?", "Tell me the birth date of Belgian writers?", "What is the birth date of a Belgian writer?", "What is the birth date of Belgian writers?", "What was the birth date of a Belgian writer?", "What was the birth date of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "229",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian motorsport racer?", "Give me the birth date of Belgian motorsport racers?", "Tell me the birth date of a Belgian motorsport racer?", "Tell me the birth date of Belgian motorsport racers?", "What is the birth date of a Belgian motorsport racer?", "What is the birth date of Belgian motorsport racers?", "What was the birth date of a Belgian motorsport racer?", "What was the birth date of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "230",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth date of a Belgian musical artist?", "Give me the birth date of Belgian musical artists?", "Tell me the birth date of a Belgian musical artist?", "Tell me the birth date of Belgian musical artists?", "What is the birth date of a Belgian musical artist?", "What is the birth date of Belgian musical artists?", "What was the birth date of a Belgian musical artist?", "What was the birth date of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "231",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of the spouse of $x?", "Tell me the occupation of the spouse of $x?", "What is the occupation of the spouse of $x?", "What was the occupation of the spouse of $x?", "Which person function is the occupation of the spouse of $x?", "Which person function was the occupation of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Alfred Bester",
        "uri" : "http://dbpedia.org/resource/Alfred_Bester"
      }, {
        "label" : "Brad Pitt",
        "uri" : "http://dbpedia.org/resource/Brad_Pitt"
      }, {
        "label" : "Carole Lombard",
        "uri" : "http://dbpedia.org/resource/Carole_Lombard"
      }, {
        "label" : "Christopher Lambert",
        "uri" : "http://dbpedia.org/resource/Christopher_Lambert"
      }, {
        "label" : "Clark Gable",
        "uri" : "http://dbpedia.org/resource/Clark_Gable"
      }, {
        "label" : "Edmond Hamilton",
        "uri" : "http://dbpedia.org/resource/Edmond_Hamilton"
      }, {
        "label" : "Elizabeth Taylor",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Taylor"
      }, {
        "label" : "Gwyneth Paltrow",
        "uri" : "http://dbpedia.org/resource/Gwyneth_Paltrow"
      }, {
        "label" : "Ingrid Bergman",
        "uri" : "http://dbpedia.org/resource/Ingrid_Bergman"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Richard Burton",
        "uri" : "http://dbpedia.org/resource/Richard_Burton"
      }, {
        "label" : "Roberto Rossellini",
        "uri" : "http://dbpedia.org/resource/Roberto_Rossellini"
      }, {
        "label" : "Val Kilmer",
        "uri" : "http://dbpedia.org/resource/Val_Kilmer"
      }, {
        "label" : "Chris Martin",
        "uri" : "http://dbpedia.org/resource/Chris_Martin"
      }, {
        "label" : "Dennis Quaid",
        "uri" : "http://dbpedia.org/resource/Dennis_Quaid"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Savitri (actress)",
        "uri" : "http://dbpedia.org/resource/Savitri_(actress)"
      }, {
        "label" : "Talisa Soto",
        "uri" : "http://dbpedia.org/resource/Talisa_Soto"
      }, {
        "label" : "Aaron Spelling",
        "uri" : "http://dbpedia.org/resource/Aaron_Spelling"
      }, {
        "label" : "Alastair Dunnett",
        "uri" : "http://dbpedia.org/resource/Alastair_Dunnett"
      }, {
        "label" : "Arlie Russell Hochschild",
        "uri" : "http://dbpedia.org/resource/Arlie_Russell_Hochschild"
      }, {
        "label" : "Barbara Simons",
        "uri" : "http://dbpedia.org/resource/Barbara_Simons"
      }, {
        "label" : "Beata Tyszkiewicz",
        "uri" : "http://dbpedia.org/resource/Beata_Tyszkiewicz"
      }, {
        "label" : "Benjamin Bratt",
        "uri" : "http://dbpedia.org/resource/Benjamin_Bratt"
      }, {
        "label" : "Bunker Roy",
        "uri" : "http://dbpedia.org/resource/Bunker_Roy"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Eleanor Silliman Belknap Humphrey",
        "uri" : "http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey"
      }, {
        "label" : "Lewis Craig Humphrey",
        "uri" : "http://dbpedia.org/resource/Lewis_Craig_Humphrey"
      }, {
        "label" : "Ruy Guerra",
        "uri" : "http://dbpedia.org/resource/Ruy_Guerra"
      }, {
        "label" : "Yuri Rasovsky",
        "uri" : "http://dbpedia.org/resource/Yuri_Rasovsky"
      }, {
        "label" : "Deborah Walley",
        "uri" : "http://dbpedia.org/resource/Deborah_Walley"
      }, {
        "label" : "Sarala Roy",
        "uri" : "http://dbpedia.org/resource/Sarala_Roy"
      }, {
        "label" : "Sidney Miller (actor)",
        "uri" : "http://dbpedia.org/resource/Sidney_Miller_(actor)"
      }, {
        "label" : "Henry Morgenthau Jr.",
        "uri" : "http://dbpedia.org/resource/Henry_Morgenthau_Jr."
      }, {
        "label" : "Maxwell Reed",
        "uri" : "http://dbpedia.org/resource/Maxwell_Reed"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Kiran Juneja",
        "uri" : "http://dbpedia.org/resource/Kiran_Juneja"
      }, {
        "label" : "Lena Herzog",
        "uri" : "http://dbpedia.org/resource/Lena_Herzog"
      }, {
        "label" : "Elsa Pataky",
        "uri" : "http://dbpedia.org/resource/Elsa_Pataky"
      }, {
        "label" : "Maïwenn",
        "uri" : "http://dbpedia.org/resource/Maïwenn"
      }, {
        "label" : "Joanne Woodward",
        "uri" : "http://dbpedia.org/resource/Joanne_Woodward"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Mickey Deans",
        "uri" : "http://dbpedia.org/resource/Mickey_Deans"
      }, {
        "label" : "Gustaf Gründgens",
        "uri" : "http://dbpedia.org/resource/Gustaf_Gründgens"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "Alfred Steele",
        "uri" : "http://dbpedia.org/resource/Alfred_Steele"
      }, {
        "label" : "Ralph Forbes",
        "uri" : "http://dbpedia.org/resource/Ralph_Forbes"
      }, {
        "label" : "Sidney Luft",
        "uri" : "http://dbpedia.org/resource/Sidney_Luft"
      }, {
        "label" : "Sylvia Ashley",
        "uri" : "http://dbpedia.org/resource/Sylvia_Ashley"
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "Josephine Dillon",
        "uri" : "http://dbpedia.org/resource/Josephine_Dillon"
      }, {
        "label" : "Lucy Barker",
        "uri" : "http://dbpedia.org/resource/Lucy_Barker"
      }, {
        "label" : "Sunita Deshpande",
        "uri" : "http://dbpedia.org/resource/Sunita_Deshpande"
      }, {
        "label" : "Amy Holden Jones",
        "uri" : "http://dbpedia.org/resource/Amy_Holden_Jones"
      }, {
        "label" : "Luma de Oliveira",
        "uri" : "http://dbpedia.org/resource/Luma_de_Oliveira"
      }, {
        "label" : "Gelli de Belen",
        "uri" : "http://dbpedia.org/resource/Gelli_de_Belen"
      }, {
        "label" : "Amelia Warner",
        "uri" : "http://dbpedia.org/resource/Amelia_Warner"
      }, {
        "label" : "Bianca Jagger",
        "uri" : "http://dbpedia.org/resource/Bianca_Jagger"
      }, {
        "label" : "Daniel Massey (actor)",
        "uri" : "http://dbpedia.org/resource/Daniel_Massey_(actor)"
      }, {
        "label" : "Jack Ryan (politician)",
        "uri" : "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      }, {
        "label" : "Kay Adams-Corleone",
        "uri" : "http://dbpedia.org/resource/Kay_Adams-Corleone"
      }, {
        "label" : "Leonard Woolf",
        "uri" : "http://dbpedia.org/resource/Leonard_Woolf"
      }, {
        "label" : "Michael Wilding (actor)",
        "uri" : "http://dbpedia.org/resource/Michael_Wilding_(actor)"
      }, {
        "label" : "Robert Williams (actor)",
        "uri" : "http://dbpedia.org/resource/Robert_Williams_(actor)"
      }, {
        "label" : "Carl Koch (director)",
        "uri" : "http://dbpedia.org/resource/Carl_Koch_(director)"
      }, {
        "label" : "Hank Azaria",
        "uri" : "http://dbpedia.org/resource/Hank_Azaria"
      }, {
        "label" : "Shabnam",
        "uri" : "http://dbpedia.org/resource/Shabnam"
      }, {
        "label" : "Dilys Hamlett",
        "uri" : "http://dbpedia.org/resource/Dilys_Hamlett"
      }, {
        "label" : "Elizabeth Corday",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Corday"
      }, {
        "label" : "Marion Mahony Griffin",
        "uri" : "http://dbpedia.org/resource/Marion_Mahony_Griffin"
      }, {
        "label" : "Mary Hay (actress)",
        "uri" : "http://dbpedia.org/resource/Mary_Hay_(actress)"
      }, {
        "label" : "Russell Lloyd (film editor)",
        "uri" : "http://dbpedia.org/resource/Russell_Lloyd_(film_editor)"
      }, {
        "label" : "Tom Moore (actor)",
        "uri" : "http://dbpedia.org/resource/Tom_Moore_(actor)"
      }, {
        "label" : "Carlos the Jackal",
        "uri" : "http://dbpedia.org/resource/Carlos_the_Jackal"
      }, {
        "label" : "Rob Pike",
        "uri" : "http://dbpedia.org/resource/Rob_Pike"
      }, {
        "label" : "Helen Dallimore",
        "uri" : "http://dbpedia.org/resource/Helen_Dallimore"
      }, {
        "label" : "Proinsias Mac Aonghusa",
        "uri" : "http://dbpedia.org/resource/Proinsias_Mac_Aonghusa"
      }, {
        "label" : "Raza Jaffrey",
        "uri" : "http://dbpedia.org/resource/Raza_Jaffrey"
      }, {
        "label" : "Robert Gist",
        "uri" : "http://dbpedia.org/resource/Robert_Gist"
      }, {
        "label" : "Rutanya Alda",
        "uri" : "http://dbpedia.org/resource/Rutanya_Alda"
      }, {
        "label" : "Taryn Simon",
        "uri" : "http://dbpedia.org/resource/Taryn_Simon"
      }, {
        "label" : "Chrissie White",
        "uri" : "http://dbpedia.org/resource/Chrissie_White"
      }, {
        "label" : "Aaliyah",
        "uri" : "http://dbpedia.org/resource/Aaliyah"
      }, {
        "label" : "Bill Gates",
        "uri" : "http://dbpedia.org/resource/Bill_Gates"
      }, {
        "label" : "Calista Flockhart",
        "uri" : "http://dbpedia.org/resource/Calista_Flockhart"
      }, {
        "label" : "Chiang Kai-shek",
        "uri" : "http://dbpedia.org/resource/Chiang_Kai-shek"
      }, {
        "label" : "David Beckham",
        "uri" : "http://dbpedia.org/resource/David_Beckham"
      }, {
        "label" : "Frank Sinatra",
        "uri" : "http://dbpedia.org/resource/Frank_Sinatra"
      }, {
        "label" : "Gene Roddenberry",
        "uri" : "http://dbpedia.org/resource/Gene_Roddenberry"
      }, {
        "label" : "Jet Li",
        "uri" : "http://dbpedia.org/resource/Jet_Li"
      }, {
        "label" : "Nicole Kidman",
        "uri" : "http://dbpedia.org/resource/Nicole_Kidman"
      }, {
        "label" : "Patrick Macnee",
        "uri" : "http://dbpedia.org/resource/Patrick_Macnee"
      }, {
        "label" : "Roman Polanski",
        "uri" : "http://dbpedia.org/resource/Roman_Polanski"
      }, {
        "label" : "Stephen King",
        "uri" : "http://dbpedia.org/resource/Stephen_King"
      }, {
        "label" : "Anne Hathaway (Shakespeare's wife)",
        "uri" : "http://dbpedia.org/resource/Anne_Hathaway_(Shakespeare's_wife)"
      }, {
        "label" : "Evelyn Keyes",
        "uri" : "http://dbpedia.org/resource/Evelyn_Keyes"
      }, {
        "label" : "Gauri Shinde",
        "uri" : "http://dbpedia.org/resource/Gauri_Shinde"
      }, {
        "label" : "Ichirō Hatoyama",
        "uri" : "http://dbpedia.org/resource/Ichirō_Hatoyama"
      }, {
        "label" : "Jesse Birdsall",
        "uri" : "http://dbpedia.org/resource/Jesse_Birdsall"
      } ]
    },
    "combination" : true
  }, {
    "id" : "232",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian agent?", "Give me the occupation of Australian agents?", "Tell me the occupation of a Australian agent?", "Tell me the occupation of Australian agents?", "What is the occupation of a Australian agent?", "What is the occupation of Australian agents?", "What was the occupation of a Australian agent?", "What was the occupation of Australian agents?", "Which person function is the occupation of a Australian agent?", "Which person function is the occupation of Australian agents?", "Which person function was the occupation of a Australian agent?", "Which person function was the occupation of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "233",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian artist?", "Give me the occupation of Australian artists?", "Tell me the occupation of a Australian artist?", "Tell me the occupation of Australian artists?", "What is the occupation of a Australian artist?", "What is the occupation of Australian artists?", "What was the occupation of a Australian artist?", "What was the occupation of Australian artists?", "Which person function is the occupation of a Australian artist?", "Which person function is the occupation of Australian artists?", "Which person function was the occupation of a Australian artist?", "Which person function was the occupation of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "234",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian motorcycle rider?", "Give me the occupation of Australian motorcycle riders?", "Tell me the occupation of a Australian motorcycle rider?", "Tell me the occupation of Australian motorcycle riders?", "What is the occupation of a Australian motorcycle rider?", "What is the occupation of Australian motorcycle riders?", "What was the occupation of a Australian motorcycle rider?", "What was the occupation of Australian motorcycle riders?", "Which person function is the occupation of a Australian motorcycle rider?", "Which person function is the occupation of Australian motorcycle riders?", "Which person function was the occupation of a Australian motorcycle rider?", "Which person function was the occupation of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "235",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian scientist?", "Give me the occupation of Australian scientists?", "Tell me the occupation of a Australian scientist?", "Tell me the occupation of Australian scientists?", "What is the occupation of a Australian scientist?", "What is the occupation of Australian scientists?", "What was the occupation of a Australian scientist?", "What was the occupation of Australian scientists?", "Which person function is the occupation of a Australian scientist?", "Which person function is the occupation of Australian scientists?", "Which person function was the occupation of a Australian scientist?", "Which person function was the occupation of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "236",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian volleyball player?", "Give me the occupation of Australian volleyball players?", "Tell me the occupation of a Australian volleyball player?", "Tell me the occupation of Australian volleyball players?", "What is the occupation of a Australian volleyball player?", "What is the occupation of Australian volleyball players?", "What was the occupation of a Australian volleyball player?", "What was the occupation of Australian volleyball players?", "Which person function is the occupation of a Australian volleyball player?", "Which person function is the occupation of Australian volleyball players?", "Which person function was the occupation of a Australian volleyball player?", "Which person function was the occupation of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "237",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian basketball player?", "Give me the occupation of Australian basketball players?", "Tell me the occupation of a Australian basketball player?", "Tell me the occupation of Australian basketball players?", "What is the occupation of a Australian basketball player?", "What is the occupation of Australian basketball players?", "What was the occupation of a Australian basketball player?", "What was the occupation of Australian basketball players?", "Which person function is the occupation of a Australian basketball player?", "Which person function is the occupation of Australian basketball players?", "Which person function was the occupation of a Australian basketball player?", "Which person function was the occupation of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "238",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian speedway rider?", "Give me the occupation of Australian speedway riders?", "Tell me the occupation of a Australian speedway rider?", "Tell me the occupation of Australian speedway riders?", "What is the occupation of a Australian speedway rider?", "What is the occupation of Australian speedway riders?", "What was the occupation of a Australian speedway rider?", "What was the occupation of Australian speedway riders?", "Which person function is the occupation of a Australian speedway rider?", "Which person function is the occupation of Australian speedway riders?", "Which person function was the occupation of a Australian speedway rider?", "Which person function was the occupation of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "239",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian model?", "Give me the occupation of Australian models?", "Tell me the occupation of a Australian model?", "Tell me the occupation of Australian models?", "What is the occupation of a Australian model?", "What is the occupation of Australian models?", "What was the occupation of a Australian model?", "What was the occupation of Australian models?", "Which person function is the occupation of a Australian model?", "Which person function is the occupation of Australian models?", "Which person function was the occupation of a Australian model?", "Which person function was the occupation of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "240",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian motorsport racer?", "Give me the occupation of Australian motorsport racers?", "Tell me the occupation of a Australian motorsport racer?", "Tell me the occupation of Australian motorsport racers?", "What is the occupation of a Australian motorsport racer?", "What is the occupation of Australian motorsport racers?", "What was the occupation of a Australian motorsport racer?", "What was the occupation of Australian motorsport racers?", "Which person function is the occupation of a Australian motorsport racer?", "Which person function is the occupation of Australian motorsport racers?", "Which person function was the occupation of a Australian motorsport racer?", "Which person function was the occupation of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "241",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian ice hockey player?", "Give me the occupation of Australian ice hockey players?", "Tell me the occupation of a Australian ice hockey player?", "Tell me the occupation of Australian ice hockey players?", "What is the occupation of a Australian ice hockey player?", "What is the occupation of Australian ice hockey players?", "What was the occupation of a Australian ice hockey player?", "What was the occupation of Australian ice hockey players?", "Which person function is the occupation of a Australian ice hockey player?", "Which person function is the occupation of Australian ice hockey players?", "Which person function was the occupation of a Australian ice hockey player?", "Which person function was the occupation of Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "242",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian member of parliament?", "Give me the occupation of Australian member of parliaments?", "Tell me the occupation of a Australian member of parliament?", "Tell me the occupation of Australian member of parliaments?", "What is the occupation of a Australian member of parliament?", "What is the occupation of Australian member of parliaments?", "What was the occupation of a Australian member of parliament?", "What was the occupation of Australian member of parliaments?", "Which person function is the occupation of a Australian member of parliament?", "Which person function is the occupation of Australian member of parliaments?", "Which person function was the occupation of a Australian member of parliament?", "Which person function was the occupation of Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "243",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian cleric?", "Give me the occupation of Australian clerics?", "Tell me the occupation of a Australian cleric?", "Tell me the occupation of Australian clerics?", "What is the occupation of a Australian cleric?", "What is the occupation of Australian clerics?", "What was the occupation of a Australian cleric?", "What was the occupation of Australian clerics?", "Which person function is the occupation of a Australian cleric?", "Which person function is the occupation of Australian clerics?", "Which person function was the occupation of a Australian cleric?", "Which person function was the occupation of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "244",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian boxer?", "Give me the occupation of Australian boxers?", "Tell me the occupation of a Australian boxer?", "Tell me the occupation of Australian boxers?", "What is the occupation of a Australian boxer?", "What is the occupation of Australian boxers?", "What was the occupation of a Australian boxer?", "What was the occupation of Australian boxers?", "Which person function is the occupation of a Australian boxer?", "Which person function is the occupation of Australian boxers?", "Which person function was the occupation of a Australian boxer?", "Which person function was the occupation of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "245",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian cyclist?", "Give me the occupation of Australian cyclists?", "Tell me the occupation of a Australian cyclist?", "Tell me the occupation of Australian cyclists?", "What is the occupation of a Australian cyclist?", "What is the occupation of Australian cyclists?", "What was the occupation of a Australian cyclist?", "What was the occupation of Australian cyclists?", "Which person function is the occupation of a Australian cyclist?", "Which person function is the occupation of Australian cyclists?", "Which person function was the occupation of a Australian cyclist?", "Which person function was the occupation of Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "246",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian office holder?", "Give me the occupation of Australian office holders?", "Tell me the occupation of a Australian office holder?", "Tell me the occupation of Australian office holders?", "What is the occupation of a Australian office holder?", "What is the occupation of Australian office holders?", "What was the occupation of a Australian office holder?", "What was the occupation of Australian office holders?", "Which person function is the occupation of a Australian office holder?", "Which person function is the occupation of Australian office holders?", "Which person function was the occupation of a Australian office holder?", "Which person function was the occupation of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "247",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian economist?", "Give me the occupation of Australian economists?", "Tell me the occupation of a Australian economist?", "Tell me the occupation of Australian economists?", "What is the occupation of a Australian economist?", "What is the occupation of Australian economists?", "What was the occupation of a Australian economist?", "What was the occupation of Australian economists?", "Which person function is the occupation of a Australian economist?", "Which person function is the occupation of Australian economists?", "Which person function was the occupation of a Australian economist?", "Which person function was the occupation of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "248",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian athlete?", "Give me the occupation of Australian athletes?", "Tell me the occupation of a Australian athlete?", "Tell me the occupation of Australian athletes?", "What is the occupation of a Australian athlete?", "What is the occupation of Australian athletes?", "What was the occupation of a Australian athlete?", "What was the occupation of Australian athletes?", "Which person function is the occupation of a Australian athlete?", "Which person function is the occupation of Australian athletes?", "Which person function was the occupation of a Australian athlete?", "Which person function was the occupation of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "249",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian racing driver?", "Give me the occupation of Australian racing drivers?", "Tell me the occupation of a Australian racing driver?", "Tell me the occupation of Australian racing drivers?", "What is the occupation of a Australian racing driver?", "What is the occupation of Australian racing drivers?", "What was the occupation of a Australian racing driver?", "What was the occupation of Australian racing drivers?", "Which person function is the occupation of a Australian racing driver?", "Which person function is the occupation of Australian racing drivers?", "Which person function was the occupation of a Australian racing driver?", "Which person function was the occupation of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "250",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian golf player?", "Give me the occupation of Australian golf players?", "Tell me the occupation of a Australian golf player?", "Tell me the occupation of Australian golf players?", "What is the occupation of a Australian golf player?", "What is the occupation of Australian golf players?", "What was the occupation of a Australian golf player?", "What was the occupation of Australian golf players?", "Which person function is the occupation of a Australian golf player?", "Which person function is the occupation of Australian golf players?", "Which person function was the occupation of a Australian golf player?", "Which person function was the occupation of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "251",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian politician?", "Give me the occupation of Australian politicians?", "Tell me the occupation of a Australian politician?", "Tell me the occupation of Australian politicians?", "What is the occupation of a Australian politician?", "What is the occupation of Australian politicians?", "What was the occupation of a Australian politician?", "What was the occupation of Australian politicians?", "Which person function is the occupation of a Australian politician?", "Which person function is the occupation of Australian politicians?", "Which person function was the occupation of a Australian politician?", "Which person function was the occupation of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "252",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian swimmer?", "Give me the occupation of Australian swimmers?", "Tell me the occupation of a Australian swimmer?", "Tell me the occupation of Australian swimmers?", "What is the occupation of a Australian swimmer?", "What is the occupation of Australian swimmers?", "What was the occupation of a Australian swimmer?", "What was the occupation of Australian swimmers?", "Which person function is the occupation of a Australian swimmer?", "Which person function is the occupation of Australian swimmers?", "Which person function was the occupation of a Australian swimmer?", "Which person function was the occupation of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "253",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian person?", "Give me the occupation of Australian persons?", "Tell me the occupation of a Australian person?", "Tell me the occupation of Australian persons?", "What is the occupation of a Australian person?", "What is the occupation of Australian persons?", "What was the occupation of a Australian person?", "What was the occupation of Australian persons?", "Which person function is the occupation of a Australian person?", "Which person function is the occupation of Australian persons?", "Which person function was the occupation of a Australian person?", "Which person function was the occupation of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "254",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian Christian Bishop?", "Give me the occupation of Australian Christian Bishops?", "Tell me the occupation of a Australian Christian Bishop?", "Tell me the occupation of Australian Christian Bishops?", "What is the occupation of a Australian Christian Bishop?", "What is the occupation of Australian Christian Bishops?", "What was the occupation of a Australian Christian Bishop?", "What was the occupation of Australian Christian Bishops?", "Which person function is the occupation of a Australian Christian Bishop?", "Which person function is the occupation of Australian Christian Bishops?", "Which person function was the occupation of a Australian Christian Bishop?", "Which person function was the occupation of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "255",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian figure skater?", "Give me the occupation of Australian figure skaters?", "Tell me the occupation of a Australian figure skater?", "Tell me the occupation of Australian figure skaters?", "What is the occupation of a Australian figure skater?", "What is the occupation of Australian figure skaters?", "What was the occupation of a Australian figure skater?", "What was the occupation of Australian figure skaters?", "Which person function is the occupation of a Australian figure skater?", "Which person function is the occupation of Australian figure skaters?", "Which person function was the occupation of a Australian figure skater?", "Which person function was the occupation of Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "256",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian writer?", "Give me the occupation of Australian writers?", "Tell me the occupation of a Australian writer?", "Tell me the occupation of Australian writers?", "What is the occupation of a Australian writer?", "What is the occupation of Australian writers?", "What was the occupation of a Australian writer?", "What was the occupation of Australian writers?", "Which person function is the occupation of a Australian writer?", "Which person function is the occupation of Australian writers?", "Which person function was the occupation of a Australian writer?", "Which person function was the occupation of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "257",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Australian soccer player?", "Give me the occupation of Australian soccer players?", "Tell me the occupation of a Australian soccer player?", "Tell me the occupation of Australian soccer players?", "What is the occupation of a Australian soccer player?", "What is the occupation of Australian soccer players?", "What was the occupation of a Australian soccer player?", "What was the occupation of Australian soccer players?", "Which person function is the occupation of a Australian soccer player?", "Which person function is the occupation of Australian soccer players?", "Which person function was the occupation of a Australian soccer player?", "Which person function was the occupation of Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "258",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian cleric?", "Give me the occupation of Belgian clerics?", "Tell me the occupation of a Belgian cleric?", "Tell me the occupation of Belgian clerics?", "What is the occupation of a Belgian cleric?", "What is the occupation of Belgian clerics?", "What was the occupation of a Belgian cleric?", "What was the occupation of Belgian clerics?", "Which person function is the occupation of a Belgian cleric?", "Which person function is the occupation of Belgian clerics?", "Which person function was the occupation of a Belgian cleric?", "Which person function was the occupation of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "259",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian office holder?", "Give me the occupation of Belgian office holders?", "Tell me the occupation of a Belgian office holder?", "Tell me the occupation of Belgian office holders?", "What is the occupation of a Belgian office holder?", "What is the occupation of Belgian office holders?", "What was the occupation of a Belgian office holder?", "What was the occupation of Belgian office holders?", "Which person function is the occupation of a Belgian office holder?", "Which person function is the occupation of Belgian office holders?", "Which person function was the occupation of a Belgian office holder?", "Which person function was the occupation of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "260",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian agent?", "Give me the occupation of Belgian agents?", "Tell me the occupation of a Belgian agent?", "Tell me the occupation of Belgian agents?", "What is the occupation of a Belgian agent?", "What is the occupation of Belgian agents?", "What was the occupation of a Belgian agent?", "What was the occupation of Belgian agents?", "Which person function is the occupation of a Belgian agent?", "Which person function is the occupation of Belgian agents?", "Which person function was the occupation of a Belgian agent?", "Which person function was the occupation of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "261",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian economist?", "Give me the occupation of Belgian economists?", "Tell me the occupation of a Belgian economist?", "Tell me the occupation of Belgian economists?", "What is the occupation of a Belgian economist?", "What is the occupation of Belgian economists?", "What was the occupation of a Belgian economist?", "What was the occupation of Belgian economists?", "Which person function is the occupation of a Belgian economist?", "Which person function is the occupation of Belgian economists?", "Which person function was the occupation of a Belgian economist?", "Which person function was the occupation of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "262",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorcycle rider?", "Give me the occupation of Belgian motorcycle riders?", "Tell me the occupation of a Belgian motorcycle rider?", "Tell me the occupation of Belgian motorcycle riders?", "What is the occupation of a Belgian motorcycle rider?", "What is the occupation of Belgian motorcycle riders?", "What was the occupation of a Belgian motorcycle rider?", "What was the occupation of Belgian motorcycle riders?", "Which person function is the occupation of a Belgian motorcycle rider?", "Which person function is the occupation of Belgian motorcycle riders?", "Which person function was the occupation of a Belgian motorcycle rider?", "Which person function was the occupation of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "263",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian artist?", "Give me the occupation of Belgian artists?", "Tell me the occupation of a Belgian artist?", "Tell me the occupation of Belgian artists?", "What is the occupation of a Belgian artist?", "What is the occupation of Belgian artists?", "What was the occupation of a Belgian artist?", "What was the occupation of Belgian artists?", "Which person function is the occupation of a Belgian artist?", "Which person function is the occupation of Belgian artists?", "Which person function was the occupation of a Belgian artist?", "Which person function was the occupation of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "264",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian athlete?", "Give me the occupation of Belgian athletes?", "Tell me the occupation of a Belgian athlete?", "Tell me the occupation of Belgian athletes?", "What is the occupation of a Belgian athlete?", "What is the occupation of Belgian athletes?", "What was the occupation of a Belgian athlete?", "What was the occupation of Belgian athletes?", "Which person function is the occupation of a Belgian athlete?", "Which person function is the occupation of Belgian athletes?", "Which person function was the occupation of a Belgian athlete?", "Which person function was the occupation of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "265",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian scientist?", "Give me the occupation of Belgian scientists?", "Tell me the occupation of a Belgian scientist?", "Tell me the occupation of Belgian scientists?", "What is the occupation of a Belgian scientist?", "What is the occupation of Belgian scientists?", "What was the occupation of a Belgian scientist?", "What was the occupation of Belgian scientists?", "Which person function is the occupation of a Belgian scientist?", "Which person function is the occupation of Belgian scientists?", "Which person function was the occupation of a Belgian scientist?", "Which person function was the occupation of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "266",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian architect?", "Give me the occupation of Belgian architects?", "Tell me the occupation of a Belgian architect?", "Tell me the occupation of Belgian architects?", "What is the occupation of a Belgian architect?", "What is the occupation of Belgian architects?", "What was the occupation of a Belgian architect?", "What was the occupation of Belgian architects?", "Which person function is the occupation of a Belgian architect?", "Which person function is the occupation of Belgian architects?", "Which person function was the occupation of a Belgian architect?", "Which person function was the occupation of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "267",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian golf player?", "Give me the occupation of Belgian golf players?", "Tell me the occupation of a Belgian golf player?", "Tell me the occupation of Belgian golf players?", "What is the occupation of a Belgian golf player?", "What is the occupation of Belgian golf players?", "What was the occupation of a Belgian golf player?", "What was the occupation of Belgian golf players?", "Which person function is the occupation of a Belgian golf player?", "Which person function is the occupation of Belgian golf players?", "Which person function was the occupation of a Belgian golf player?", "Which person function was the occupation of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "268",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian racing driver?", "Give me the occupation of Belgian racing drivers?", "Tell me the occupation of a Belgian racing driver?", "Tell me the occupation of Belgian racing drivers?", "What is the occupation of a Belgian racing driver?", "What is the occupation of Belgian racing drivers?", "What was the occupation of a Belgian racing driver?", "What was the occupation of Belgian racing drivers?", "Which person function is the occupation of a Belgian racing driver?", "Which person function is the occupation of Belgian racing drivers?", "Which person function was the occupation of a Belgian racing driver?", "Which person function was the occupation of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "269",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian politician?", "Give me the occupation of Belgian politicians?", "Tell me the occupation of a Belgian politician?", "Tell me the occupation of Belgian politicians?", "What is the occupation of a Belgian politician?", "What is the occupation of Belgian politicians?", "What was the occupation of a Belgian politician?", "What was the occupation of Belgian politicians?", "Which person function is the occupation of a Belgian politician?", "Which person function is the occupation of Belgian politicians?", "Which person function was the occupation of a Belgian politician?", "Which person function was the occupation of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "270",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian swimmer?", "Give me the occupation of Belgian swimmers?", "Tell me the occupation of a Belgian swimmer?", "Tell me the occupation of Belgian swimmers?", "What is the occupation of a Belgian swimmer?", "What is the occupation of Belgian swimmers?", "What was the occupation of a Belgian swimmer?", "What was the occupation of Belgian swimmers?", "Which person function is the occupation of a Belgian swimmer?", "Which person function is the occupation of Belgian swimmers?", "Which person function was the occupation of a Belgian swimmer?", "Which person function was the occupation of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "271",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian volleyball player?", "Give me the occupation of Belgian volleyball players?", "Tell me the occupation of a Belgian volleyball player?", "Tell me the occupation of Belgian volleyball players?", "What is the occupation of a Belgian volleyball player?", "What is the occupation of Belgian volleyball players?", "What was the occupation of a Belgian volleyball player?", "What was the occupation of Belgian volleyball players?", "Which person function is the occupation of a Belgian volleyball player?", "Which person function is the occupation of Belgian volleyball players?", "Which person function was the occupation of a Belgian volleyball player?", "Which person function was the occupation of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "272",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian person?", "Give me the occupation of Belgian persons?", "Tell me the occupation of a Belgian person?", "Tell me the occupation of Belgian persons?", "What is the occupation of a Belgian person?", "What is the occupation of Belgian persons?", "What was the occupation of a Belgian person?", "What was the occupation of Belgian persons?", "Which person function is the occupation of a Belgian person?", "Which person function is the occupation of Belgian persons?", "Which person function was the occupation of a Belgian person?", "Which person function was the occupation of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "273",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian Christian Bishop?", "Give me the occupation of Belgian Christian Bishops?", "Tell me the occupation of a Belgian Christian Bishop?", "Tell me the occupation of Belgian Christian Bishops?", "What is the occupation of a Belgian Christian Bishop?", "What is the occupation of Belgian Christian Bishops?", "What was the occupation of a Belgian Christian Bishop?", "What was the occupation of Belgian Christian Bishops?", "Which person function is the occupation of a Belgian Christian Bishop?", "Which person function is the occupation of Belgian Christian Bishops?", "Which person function was the occupation of a Belgian Christian Bishop?", "Which person function was the occupation of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "274",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian comics creator?", "Give me the occupation of Belgian comics creators?", "Tell me the occupation of a Belgian comics creator?", "Tell me the occupation of Belgian comics creators?", "What is the occupation of a Belgian comics creator?", "What is the occupation of Belgian comics creators?", "What was the occupation of a Belgian comics creator?", "What was the occupation of Belgian comics creators?", "Which person function is the occupation of a Belgian comics creator?", "Which person function is the occupation of Belgian comics creators?", "Which person function was the occupation of a Belgian comics creator?", "Which person function was the occupation of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "275",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian writer?", "Give me the occupation of Belgian writers?", "Tell me the occupation of a Belgian writer?", "Tell me the occupation of Belgian writers?", "What is the occupation of a Belgian writer?", "What is the occupation of Belgian writers?", "What was the occupation of a Belgian writer?", "What was the occupation of Belgian writers?", "Which person function is the occupation of a Belgian writer?", "Which person function is the occupation of Belgian writers?", "Which person function was the occupation of a Belgian writer?", "Which person function was the occupation of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "276",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian motorsport racer?", "Give me the occupation of Belgian motorsport racers?", "Tell me the occupation of a Belgian motorsport racer?", "Tell me the occupation of Belgian motorsport racers?", "What is the occupation of a Belgian motorsport racer?", "What is the occupation of Belgian motorsport racers?", "What was the occupation of a Belgian motorsport racer?", "What was the occupation of Belgian motorsport racers?", "Which person function is the occupation of a Belgian motorsport racer?", "Which person function is the occupation of Belgian motorsport racers?", "Which person function was the occupation of a Belgian motorsport racer?", "Which person function was the occupation of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "277",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentences" : [ "Give me the occupation of a Belgian musical artist?", "Give me the occupation of Belgian musical artists?", "Tell me the occupation of a Belgian musical artist?", "Tell me the occupation of Belgian musical artists?", "What is the occupation of a Belgian musical artist?", "What is the occupation of Belgian musical artists?", "What was the occupation of a Belgian musical artist?", "What was the occupation of Belgian musical artists?", "Which person function is the occupation of a Belgian musical artist?", "Which person function is the occupation of Belgian musical artists?", "Which person function was the occupation of a Belgian musical artist?", "Which person function was the occupation of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/occupation> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "278",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of the spouse of $x?", "Tell me the birth place of the spouse of $x?", "What is the birth place of the spouse of $x?", "What was the birth place of the spouse of $x?", "Which place is the birth place of the spouse of $x?", "Which place was the birth place of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Brad Pitt",
        "uri" : "http://dbpedia.org/resource/Brad_Pitt"
      }, {
        "label" : "Carole Lombard",
        "uri" : "http://dbpedia.org/resource/Carole_Lombard"
      }, {
        "label" : "Caroline of Brunswick",
        "uri" : "http://dbpedia.org/resource/Caroline_of_Brunswick"
      }, {
        "label" : "Catherine I of Russia",
        "uri" : "http://dbpedia.org/resource/Catherine_I_of_Russia"
      }, {
        "label" : "Christopher Lambert",
        "uri" : "http://dbpedia.org/resource/Christopher_Lambert"
      }, {
        "label" : "Clark Gable",
        "uri" : "http://dbpedia.org/resource/Clark_Gable"
      }, {
        "label" : "Cnut the Great",
        "uri" : "http://dbpedia.org/resource/Cnut_the_Great"
      }, {
        "label" : "Edmond Hamilton",
        "uri" : "http://dbpedia.org/resource/Edmond_Hamilton"
      }, {
        "label" : "Elizabeth Taylor",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Taylor"
      }, {
        "label" : "Emma of Normandy",
        "uri" : "http://dbpedia.org/resource/Emma_of_Normandy"
      }, {
        "label" : "George IV of the United Kingdom",
        "uri" : "http://dbpedia.org/resource/George_IV_of_the_United_Kingdom"
      }, {
        "label" : "Gwyneth Paltrow",
        "uri" : "http://dbpedia.org/resource/Gwyneth_Paltrow"
      }, {
        "label" : "Ingrid Bergman",
        "uri" : "http://dbpedia.org/resource/Ingrid_Bergman"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Leigh Brackett",
        "uri" : "http://dbpedia.org/resource/Leigh_Brackett"
      }, {
        "label" : "Louis XVI of France",
        "uri" : "http://dbpedia.org/resource/Louis_XVI_of_France"
      }, {
        "label" : "Marie Antoinette",
        "uri" : "http://dbpedia.org/resource/Marie_Antoinette"
      }, {
        "label" : "Peter the Great",
        "uri" : "http://dbpedia.org/resource/Peter_the_Great"
      }, {
        "label" : "Richard Burton",
        "uri" : "http://dbpedia.org/resource/Richard_Burton"
      }, {
        "label" : "Roberto Rossellini",
        "uri" : "http://dbpedia.org/resource/Roberto_Rossellini"
      }, {
        "label" : "Salman Rushdie",
        "uri" : "http://dbpedia.org/resource/Salman_Rushdie"
      }, {
        "label" : "Sylvia Plath",
        "uri" : "http://dbpedia.org/resource/Sylvia_Plath"
      }, {
        "label" : "Ted Hughes",
        "uri" : "http://dbpedia.org/resource/Ted_Hughes"
      }, {
        "label" : "Theophanu",
        "uri" : "http://dbpedia.org/resource/Theophanu"
      }, {
        "label" : "Val Kilmer",
        "uri" : "http://dbpedia.org/resource/Val_Kilmer"
      }, {
        "label" : "Vivien Leigh",
        "uri" : "http://dbpedia.org/resource/Vivien_Leigh"
      }, {
        "label" : "Camille Flammarion",
        "uri" : "http://dbpedia.org/resource/Camille_Flammarion"
      }, {
        "label" : "Chris Martin",
        "uri" : "http://dbpedia.org/resource/Chris_Martin"
      }, {
        "label" : "Dennis Quaid",
        "uri" : "http://dbpedia.org/resource/Dennis_Quaid"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John Grey of Groby",
        "uri" : "http://dbpedia.org/resource/John_Grey_of_Groby"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Padma Lakshmi",
        "uri" : "http://dbpedia.org/resource/Padma_Lakshmi"
      }, {
        "label" : "Adam Hochschild",
        "uri" : "http://dbpedia.org/resource/Adam_Hochschild"
      }, {
        "label" : "Arlie Russell Hochschild",
        "uri" : "http://dbpedia.org/resource/Arlie_Russell_Hochschild"
      }, {
        "label" : "Beata Tyszkiewicz",
        "uri" : "http://dbpedia.org/resource/Beata_Tyszkiewicz"
      }, {
        "label" : "Benjamin Bratt",
        "uri" : "http://dbpedia.org/resource/Benjamin_Bratt"
      }, {
        "label" : "Bunker Roy",
        "uri" : "http://dbpedia.org/resource/Bunker_Roy"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Cyrille Bara",
        "uri" : "http://dbpedia.org/resource/Cyrille_Bara"
      }, {
        "label" : "Dorothy Dunnett",
        "uri" : "http://dbpedia.org/resource/Dorothy_Dunnett"
      }, {
        "label" : "Ehud Olmert",
        "uri" : "http://dbpedia.org/resource/Ehud_Olmert"
      }, {
        "label" : "Gemini Ganesan",
        "uri" : "http://dbpedia.org/resource/Gemini_Ganesan"
      }, {
        "label" : "Harriet Smithson",
        "uri" : "http://dbpedia.org/resource/Harriet_Smithson"
      }, {
        "label" : "Paul Hasluck",
        "uri" : "http://dbpedia.org/resource/Paul_Hasluck"
      }, {
        "label" : "Rolly Bester",
        "uri" : "http://dbpedia.org/resource/Rolly_Bester"
      }, {
        "label" : "Clara McMillen",
        "uri" : "http://dbpedia.org/resource/Clara_McMillen"
      }, {
        "label" : "Diana Gould (dancer)",
        "uri" : "http://dbpedia.org/resource/Diana_Gould_(dancer)"
      }, {
        "label" : "Sidney Miller (actor)",
        "uri" : "http://dbpedia.org/resource/Sidney_Miller_(actor)"
      }, {
        "label" : "Sir Edward Burgh",
        "uri" : "http://dbpedia.org/resource/Sir_Edward_Burgh"
      }, {
        "label" : "Lydia Lopokova",
        "uri" : "http://dbpedia.org/resource/Lydia_Lopokova"
      }, {
        "label" : "Maxwell Reed",
        "uri" : "http://dbpedia.org/resource/Maxwell_Reed"
      }, {
        "label" : "Sigrid the Haughty",
        "uri" : "http://dbpedia.org/resource/Sigrid_the_Haughty"
      }, {
        "label" : "Elena Ceaușescu",
        "uri" : "http://dbpedia.org/resource/Elena_Ceaușescu"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Ruqaiya Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Ruqaiya_Sultan_Begum"
      }, {
        "label" : "Eliza Jumel",
        "uri" : "http://dbpedia.org/resource/Eliza_Jumel"
      }, {
        "label" : "Lena Herzog",
        "uri" : "http://dbpedia.org/resource/Lena_Herzog"
      }, {
        "label" : "Katie Lee (chef)",
        "uri" : "http://dbpedia.org/resource/Katie_Lee_(chef)"
      }, {
        "label" : "Elsa Pataky",
        "uri" : "http://dbpedia.org/resource/Elsa_Pataky"
      }, {
        "label" : "Maïwenn",
        "uri" : "http://dbpedia.org/resource/Maïwenn"
      }, {
        "label" : "Edward of Westminster, Prince of Wales",
        "uri" : "http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales"
      }, {
        "label" : "Joanne Woodward",
        "uri" : "http://dbpedia.org/resource/Joanne_Woodward"
      }, {
        "label" : "Lady Caroline Lamb",
        "uri" : "http://dbpedia.org/resource/Lady_Caroline_Lamb"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Maria Fitzherbert",
        "uri" : "http://dbpedia.org/resource/Maria_Fitzherbert"
      }, {
        "label" : "Mickey Deans",
        "uri" : "http://dbpedia.org/resource/Mickey_Deans"
      }, {
        "label" : "Alice Hathaway Lee Roosevelt",
        "uri" : "http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "Alfred Steele",
        "uri" : "http://dbpedia.org/resource/Alfred_Steele"
      }, {
        "label" : "Barbara Hutton",
        "uri" : "http://dbpedia.org/resource/Barbara_Hutton"
      }, {
        "label" : "Sidney Luft",
        "uri" : "http://dbpedia.org/resource/Sidney_Luft"
      }, {
        "label" : "Sylvia Ashley",
        "uri" : "http://dbpedia.org/resource/Sylvia_Ashley"
      }, {
        "label" : "Salima Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Salima_Sultan_Begum"
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "John Jay O'Connor",
        "uri" : "http://dbpedia.org/resource/John_Jay_O'Connor"
      }, {
        "label" : "Marta Fernandez Miranda de Batista",
        "uri" : "http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista"
      }, {
        "label" : "Josephine Dillon",
        "uri" : "http://dbpedia.org/resource/Josephine_Dillon"
      }, {
        "label" : "Sunita Deshpande",
        "uri" : "http://dbpedia.org/resource/Sunita_Deshpande"
      }, {
        "label" : "Bettina Gorton",
        "uri" : "http://dbpedia.org/resource/Bettina_Gorton"
      }, {
        "label" : "Tove of the Obotrites",
        "uri" : "http://dbpedia.org/resource/Tove_of_the_Obotrites"
      }, {
        "label" : "Albia Dominica",
        "uri" : "http://dbpedia.org/resource/Albia_Dominica"
      }, {
        "label" : "Antony Armstrong-Jones, 1st Earl of Snowdon",
        "uri" : "http://dbpedia.org/resource/Antony_Armstrong-Jones,_1st_Earl_of_Snowdon"
      }, {
        "label" : "Bernadette Chirac",
        "uri" : "http://dbpedia.org/resource/Bernadette_Chirac"
      }, {
        "label" : "Bianca Jagger",
        "uri" : "http://dbpedia.org/resource/Bianca_Jagger"
      }, {
        "label" : "Daniel Massey (actor)",
        "uri" : "http://dbpedia.org/resource/Daniel_Massey_(actor)"
      }, {
        "label" : "Francis I, Holy Roman Emperor",
        "uri" : "http://dbpedia.org/resource/Francis_I,_Holy_Roman_Emperor"
      }, {
        "label" : "Kitty Carlisle",
        "uri" : "http://dbpedia.org/resource/Kitty_Carlisle"
      }, {
        "label" : "Leonard Woolf",
        "uri" : "http://dbpedia.org/resource/Leonard_Woolf"
      }, {
        "label" : "Loki Schmidt",
        "uri" : "http://dbpedia.org/resource/Loki_Schmidt"
      }, {
        "label" : "Lotte Lenya",
        "uri" : "http://dbpedia.org/resource/Lotte_Lenya"
      }, {
        "label" : "Michael Wilding (actor)",
        "uri" : "http://dbpedia.org/resource/Michael_Wilding_(actor)"
      }, {
        "label" : "Mumtaz Mahal",
        "uri" : "http://dbpedia.org/resource/Mumtaz_Mahal"
      }, {
        "label" : "Princess Charlotte of Wales",
        "uri" : "http://dbpedia.org/resource/Princess_Charlotte_of_Wales"
      }, {
        "label" : "Richard Sennett",
        "uri" : "http://dbpedia.org/resource/Richard_Sennett"
      }, {
        "label" : "Robert Williams (actor)",
        "uri" : "http://dbpedia.org/resource/Robert_Williams_(actor)"
      }, {
        "label" : "Hank Azaria",
        "uri" : "http://dbpedia.org/resource/Hank_Azaria"
      }, {
        "label" : "Owen Tudor",
        "uri" : "http://dbpedia.org/resource/Owen_Tudor"
      }, {
        "label" : "John Neville, 3rd Baron Latimer",
        "uri" : "http://dbpedia.org/resource/John_Neville,_3rd_Baron_Latimer"
      }, {
        "label" : "Kirsty Sword Gusmão",
        "uri" : "http://dbpedia.org/resource/Kirsty_Sword_Gusmão"
      } ]
    },
    "combination" : true
  }, {
    "id" : "279",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian agent?", "Give me the birth place of Australian agents?", "Tell me the birth place of a Australian agent?", "Tell me the birth place of Australian agents?", "What is the birth place of a Australian agent?", "What is the birth place of Australian agents?", "What was the birth place of a Australian agent?", "What was the birth place of Australian agents?", "Which place is the birth place of a Australian agent?", "Which place is the birth place of Australian agents?", "Which place was the birth place of a Australian agent?", "Which place was the birth place of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "280",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian artist?", "Give me the birth place of Australian artists?", "Tell me the birth place of a Australian artist?", "Tell me the birth place of Australian artists?", "What is the birth place of a Australian artist?", "What is the birth place of Australian artists?", "What was the birth place of a Australian artist?", "What was the birth place of Australian artists?", "Which place is the birth place of a Australian artist?", "Which place is the birth place of Australian artists?", "Which place was the birth place of a Australian artist?", "Which place was the birth place of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "281",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian motorcycle rider?", "Give me the birth place of Australian motorcycle riders?", "Tell me the birth place of a Australian motorcycle rider?", "Tell me the birth place of Australian motorcycle riders?", "What is the birth place of a Australian motorcycle rider?", "What is the birth place of Australian motorcycle riders?", "What was the birth place of a Australian motorcycle rider?", "What was the birth place of Australian motorcycle riders?", "Which place is the birth place of a Australian motorcycle rider?", "Which place is the birth place of Australian motorcycle riders?", "Which place was the birth place of a Australian motorcycle rider?", "Which place was the birth place of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "282",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian scientist?", "Give me the birth place of Australian scientists?", "Tell me the birth place of a Australian scientist?", "Tell me the birth place of Australian scientists?", "What is the birth place of a Australian scientist?", "What is the birth place of Australian scientists?", "What was the birth place of a Australian scientist?", "What was the birth place of Australian scientists?", "Which place is the birth place of a Australian scientist?", "Which place is the birth place of Australian scientists?", "Which place was the birth place of a Australian scientist?", "Which place was the birth place of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "283",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian volleyball player?", "Give me the birth place of Australian volleyball players?", "Tell me the birth place of a Australian volleyball player?", "Tell me the birth place of Australian volleyball players?", "What is the birth place of a Australian volleyball player?", "What is the birth place of Australian volleyball players?", "What was the birth place of a Australian volleyball player?", "What was the birth place of Australian volleyball players?", "Which place is the birth place of a Australian volleyball player?", "Which place is the birth place of Australian volleyball players?", "Which place was the birth place of a Australian volleyball player?", "Which place was the birth place of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "284",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian basketball player?", "Give me the birth place of Australian basketball players?", "Tell me the birth place of a Australian basketball player?", "Tell me the birth place of Australian basketball players?", "What is the birth place of a Australian basketball player?", "What is the birth place of Australian basketball players?", "What was the birth place of a Australian basketball player?", "What was the birth place of Australian basketball players?", "Which place is the birth place of a Australian basketball player?", "Which place is the birth place of Australian basketball players?", "Which place was the birth place of a Australian basketball player?", "Which place was the birth place of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "285",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian speedway rider?", "Give me the birth place of Australian speedway riders?", "Tell me the birth place of a Australian speedway rider?", "Tell me the birth place of Australian speedway riders?", "What is the birth place of a Australian speedway rider?", "What is the birth place of Australian speedway riders?", "What was the birth place of a Australian speedway rider?", "What was the birth place of Australian speedway riders?", "Which place is the birth place of a Australian speedway rider?", "Which place is the birth place of Australian speedway riders?", "Which place was the birth place of a Australian speedway rider?", "Which place was the birth place of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "286",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian model?", "Give me the birth place of Australian models?", "Tell me the birth place of a Australian model?", "Tell me the birth place of Australian models?", "What is the birth place of a Australian model?", "What is the birth place of Australian models?", "What was the birth place of a Australian model?", "What was the birth place of Australian models?", "Which place is the birth place of a Australian model?", "Which place is the birth place of Australian models?", "Which place was the birth place of a Australian model?", "Which place was the birth place of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "287",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian motorsport racer?", "Give me the birth place of Australian motorsport racers?", "Tell me the birth place of a Australian motorsport racer?", "Tell me the birth place of Australian motorsport racers?", "What is the birth place of a Australian motorsport racer?", "What is the birth place of Australian motorsport racers?", "What was the birth place of a Australian motorsport racer?", "What was the birth place of Australian motorsport racers?", "Which place is the birth place of a Australian motorsport racer?", "Which place is the birth place of Australian motorsport racers?", "Which place was the birth place of a Australian motorsport racer?", "Which place was the birth place of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "288",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian ice hockey player?", "Give me the birth place of Australian ice hockey players?", "Tell me the birth place of a Australian ice hockey player?", "Tell me the birth place of Australian ice hockey players?", "What is the birth place of a Australian ice hockey player?", "What is the birth place of Australian ice hockey players?", "What was the birth place of a Australian ice hockey player?", "What was the birth place of Australian ice hockey players?", "Which place is the birth place of a Australian ice hockey player?", "Which place is the birth place of Australian ice hockey players?", "Which place was the birth place of a Australian ice hockey player?", "Which place was the birth place of Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "289",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian member of parliament?", "Give me the birth place of Australian member of parliaments?", "Tell me the birth place of a Australian member of parliament?", "Tell me the birth place of Australian member of parliaments?", "What is the birth place of a Australian member of parliament?", "What is the birth place of Australian member of parliaments?", "What was the birth place of a Australian member of parliament?", "What was the birth place of Australian member of parliaments?", "Which place is the birth place of a Australian member of parliament?", "Which place is the birth place of Australian member of parliaments?", "Which place was the birth place of a Australian member of parliament?", "Which place was the birth place of Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "290",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian cleric?", "Give me the birth place of Australian clerics?", "Tell me the birth place of a Australian cleric?", "Tell me the birth place of Australian clerics?", "What is the birth place of a Australian cleric?", "What is the birth place of Australian clerics?", "What was the birth place of a Australian cleric?", "What was the birth place of Australian clerics?", "Which place is the birth place of a Australian cleric?", "Which place is the birth place of Australian clerics?", "Which place was the birth place of a Australian cleric?", "Which place was the birth place of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "291",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian boxer?", "Give me the birth place of Australian boxers?", "Tell me the birth place of a Australian boxer?", "Tell me the birth place of Australian boxers?", "What is the birth place of a Australian boxer?", "What is the birth place of Australian boxers?", "What was the birth place of a Australian boxer?", "What was the birth place of Australian boxers?", "Which place is the birth place of a Australian boxer?", "Which place is the birth place of Australian boxers?", "Which place was the birth place of a Australian boxer?", "Which place was the birth place of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "292",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian cyclist?", "Give me the birth place of Australian cyclists?", "Tell me the birth place of a Australian cyclist?", "Tell me the birth place of Australian cyclists?", "What is the birth place of a Australian cyclist?", "What is the birth place of Australian cyclists?", "What was the birth place of a Australian cyclist?", "What was the birth place of Australian cyclists?", "Which place is the birth place of a Australian cyclist?", "Which place is the birth place of Australian cyclists?", "Which place was the birth place of a Australian cyclist?", "Which place was the birth place of Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "293",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian office holder?", "Give me the birth place of Australian office holders?", "Tell me the birth place of a Australian office holder?", "Tell me the birth place of Australian office holders?", "What is the birth place of a Australian office holder?", "What is the birth place of Australian office holders?", "What was the birth place of a Australian office holder?", "What was the birth place of Australian office holders?", "Which place is the birth place of a Australian office holder?", "Which place is the birth place of Australian office holders?", "Which place was the birth place of a Australian office holder?", "Which place was the birth place of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "294",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian economist?", "Give me the birth place of Australian economists?", "Tell me the birth place of a Australian economist?", "Tell me the birth place of Australian economists?", "What is the birth place of a Australian economist?", "What is the birth place of Australian economists?", "What was the birth place of a Australian economist?", "What was the birth place of Australian economists?", "Which place is the birth place of a Australian economist?", "Which place is the birth place of Australian economists?", "Which place was the birth place of a Australian economist?", "Which place was the birth place of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "295",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian athlete?", "Give me the birth place of Australian athletes?", "Tell me the birth place of a Australian athlete?", "Tell me the birth place of Australian athletes?", "What is the birth place of a Australian athlete?", "What is the birth place of Australian athletes?", "What was the birth place of a Australian athlete?", "What was the birth place of Australian athletes?", "Which place is the birth place of a Australian athlete?", "Which place is the birth place of Australian athletes?", "Which place was the birth place of a Australian athlete?", "Which place was the birth place of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "296",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian racing driver?", "Give me the birth place of Australian racing drivers?", "Tell me the birth place of a Australian racing driver?", "Tell me the birth place of Australian racing drivers?", "What is the birth place of a Australian racing driver?", "What is the birth place of Australian racing drivers?", "What was the birth place of a Australian racing driver?", "What was the birth place of Australian racing drivers?", "Which place is the birth place of a Australian racing driver?", "Which place is the birth place of Australian racing drivers?", "Which place was the birth place of a Australian racing driver?", "Which place was the birth place of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "297",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian golf player?", "Give me the birth place of Australian golf players?", "Tell me the birth place of a Australian golf player?", "Tell me the birth place of Australian golf players?", "What is the birth place of a Australian golf player?", "What is the birth place of Australian golf players?", "What was the birth place of a Australian golf player?", "What was the birth place of Australian golf players?", "Which place is the birth place of a Australian golf player?", "Which place is the birth place of Australian golf players?", "Which place was the birth place of a Australian golf player?", "Which place was the birth place of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "298",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian politician?", "Give me the birth place of Australian politicians?", "Tell me the birth place of a Australian politician?", "Tell me the birth place of Australian politicians?", "What is the birth place of a Australian politician?", "What is the birth place of Australian politicians?", "What was the birth place of a Australian politician?", "What was the birth place of Australian politicians?", "Which place is the birth place of a Australian politician?", "Which place is the birth place of Australian politicians?", "Which place was the birth place of a Australian politician?", "Which place was the birth place of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "299",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian swimmer?", "Give me the birth place of Australian swimmers?", "Tell me the birth place of a Australian swimmer?", "Tell me the birth place of Australian swimmers?", "What is the birth place of a Australian swimmer?", "What is the birth place of Australian swimmers?", "What was the birth place of a Australian swimmer?", "What was the birth place of Australian swimmers?", "Which place is the birth place of a Australian swimmer?", "Which place is the birth place of Australian swimmers?", "Which place was the birth place of a Australian swimmer?", "Which place was the birth place of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "300",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian person?", "Give me the birth place of Australian persons?", "Tell me the birth place of a Australian person?", "Tell me the birth place of Australian persons?", "What is the birth place of a Australian person?", "What is the birth place of Australian persons?", "What was the birth place of a Australian person?", "What was the birth place of Australian persons?", "Which place is the birth place of a Australian person?", "Which place is the birth place of Australian persons?", "Which place was the birth place of a Australian person?", "Which place was the birth place of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "301",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian Christian Bishop?", "Give me the birth place of Australian Christian Bishops?", "Tell me the birth place of a Australian Christian Bishop?", "Tell me the birth place of Australian Christian Bishops?", "What is the birth place of a Australian Christian Bishop?", "What is the birth place of Australian Christian Bishops?", "What was the birth place of a Australian Christian Bishop?", "What was the birth place of Australian Christian Bishops?", "Which place is the birth place of a Australian Christian Bishop?", "Which place is the birth place of Australian Christian Bishops?", "Which place was the birth place of a Australian Christian Bishop?", "Which place was the birth place of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "302",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian figure skater?", "Give me the birth place of Australian figure skaters?", "Tell me the birth place of a Australian figure skater?", "Tell me the birth place of Australian figure skaters?", "What is the birth place of a Australian figure skater?", "What is the birth place of Australian figure skaters?", "What was the birth place of a Australian figure skater?", "What was the birth place of Australian figure skaters?", "Which place is the birth place of a Australian figure skater?", "Which place is the birth place of Australian figure skaters?", "Which place was the birth place of a Australian figure skater?", "Which place was the birth place of Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "303",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian writer?", "Give me the birth place of Australian writers?", "Tell me the birth place of a Australian writer?", "Tell me the birth place of Australian writers?", "What is the birth place of a Australian writer?", "What is the birth place of Australian writers?", "What was the birth place of a Australian writer?", "What was the birth place of Australian writers?", "Which place is the birth place of a Australian writer?", "Which place is the birth place of Australian writers?", "Which place was the birth place of a Australian writer?", "Which place was the birth place of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "304",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Australian soccer player?", "Give me the birth place of Australian soccer players?", "Tell me the birth place of a Australian soccer player?", "Tell me the birth place of Australian soccer players?", "What is the birth place of a Australian soccer player?", "What is the birth place of Australian soccer players?", "What was the birth place of a Australian soccer player?", "What was the birth place of Australian soccer players?", "Which place is the birth place of a Australian soccer player?", "Which place is the birth place of Australian soccer players?", "Which place was the birth place of a Australian soccer player?", "Which place was the birth place of Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "305",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian cleric?", "Give me the birth place of Belgian clerics?", "Tell me the birth place of a Belgian cleric?", "Tell me the birth place of Belgian clerics?", "What is the birth place of a Belgian cleric?", "What is the birth place of Belgian clerics?", "What was the birth place of a Belgian cleric?", "What was the birth place of Belgian clerics?", "Which place is the birth place of a Belgian cleric?", "Which place is the birth place of Belgian clerics?", "Which place was the birth place of a Belgian cleric?", "Which place was the birth place of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "306",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian office holder?", "Give me the birth place of Belgian office holders?", "Tell me the birth place of a Belgian office holder?", "Tell me the birth place of Belgian office holders?", "What is the birth place of a Belgian office holder?", "What is the birth place of Belgian office holders?", "What was the birth place of a Belgian office holder?", "What was the birth place of Belgian office holders?", "Which place is the birth place of a Belgian office holder?", "Which place is the birth place of Belgian office holders?", "Which place was the birth place of a Belgian office holder?", "Which place was the birth place of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "307",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian agent?", "Give me the birth place of Belgian agents?", "Tell me the birth place of a Belgian agent?", "Tell me the birth place of Belgian agents?", "What is the birth place of a Belgian agent?", "What is the birth place of Belgian agents?", "What was the birth place of a Belgian agent?", "What was the birth place of Belgian agents?", "Which place is the birth place of a Belgian agent?", "Which place is the birth place of Belgian agents?", "Which place was the birth place of a Belgian agent?", "Which place was the birth place of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "308",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian economist?", "Give me the birth place of Belgian economists?", "Tell me the birth place of a Belgian economist?", "Tell me the birth place of Belgian economists?", "What is the birth place of a Belgian economist?", "What is the birth place of Belgian economists?", "What was the birth place of a Belgian economist?", "What was the birth place of Belgian economists?", "Which place is the birth place of a Belgian economist?", "Which place is the birth place of Belgian economists?", "Which place was the birth place of a Belgian economist?", "Which place was the birth place of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "309",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorcycle rider?", "Give me the birth place of Belgian motorcycle riders?", "Tell me the birth place of a Belgian motorcycle rider?", "Tell me the birth place of Belgian motorcycle riders?", "What is the birth place of a Belgian motorcycle rider?", "What is the birth place of Belgian motorcycle riders?", "What was the birth place of a Belgian motorcycle rider?", "What was the birth place of Belgian motorcycle riders?", "Which place is the birth place of a Belgian motorcycle rider?", "Which place is the birth place of Belgian motorcycle riders?", "Which place was the birth place of a Belgian motorcycle rider?", "Which place was the birth place of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "310",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian artist?", "Give me the birth place of Belgian artists?", "Tell me the birth place of a Belgian artist?", "Tell me the birth place of Belgian artists?", "What is the birth place of a Belgian artist?", "What is the birth place of Belgian artists?", "What was the birth place of a Belgian artist?", "What was the birth place of Belgian artists?", "Which place is the birth place of a Belgian artist?", "Which place is the birth place of Belgian artists?", "Which place was the birth place of a Belgian artist?", "Which place was the birth place of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "311",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian athlete?", "Give me the birth place of Belgian athletes?", "Tell me the birth place of a Belgian athlete?", "Tell me the birth place of Belgian athletes?", "What is the birth place of a Belgian athlete?", "What is the birth place of Belgian athletes?", "What was the birth place of a Belgian athlete?", "What was the birth place of Belgian athletes?", "Which place is the birth place of a Belgian athlete?", "Which place is the birth place of Belgian athletes?", "Which place was the birth place of a Belgian athlete?", "Which place was the birth place of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "312",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian scientist?", "Give me the birth place of Belgian scientists?", "Tell me the birth place of a Belgian scientist?", "Tell me the birth place of Belgian scientists?", "What is the birth place of a Belgian scientist?", "What is the birth place of Belgian scientists?", "What was the birth place of a Belgian scientist?", "What was the birth place of Belgian scientists?", "Which place is the birth place of a Belgian scientist?", "Which place is the birth place of Belgian scientists?", "Which place was the birth place of a Belgian scientist?", "Which place was the birth place of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "313",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian architect?", "Give me the birth place of Belgian architects?", "Tell me the birth place of a Belgian architect?", "Tell me the birth place of Belgian architects?", "What is the birth place of a Belgian architect?", "What is the birth place of Belgian architects?", "What was the birth place of a Belgian architect?", "What was the birth place of Belgian architects?", "Which place is the birth place of a Belgian architect?", "Which place is the birth place of Belgian architects?", "Which place was the birth place of a Belgian architect?", "Which place was the birth place of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "314",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian golf player?", "Give me the birth place of Belgian golf players?", "Tell me the birth place of a Belgian golf player?", "Tell me the birth place of Belgian golf players?", "What is the birth place of a Belgian golf player?", "What is the birth place of Belgian golf players?", "What was the birth place of a Belgian golf player?", "What was the birth place of Belgian golf players?", "Which place is the birth place of a Belgian golf player?", "Which place is the birth place of Belgian golf players?", "Which place was the birth place of a Belgian golf player?", "Which place was the birth place of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "315",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian racing driver?", "Give me the birth place of Belgian racing drivers?", "Tell me the birth place of a Belgian racing driver?", "Tell me the birth place of Belgian racing drivers?", "What is the birth place of a Belgian racing driver?", "What is the birth place of Belgian racing drivers?", "What was the birth place of a Belgian racing driver?", "What was the birth place of Belgian racing drivers?", "Which place is the birth place of a Belgian racing driver?", "Which place is the birth place of Belgian racing drivers?", "Which place was the birth place of a Belgian racing driver?", "Which place was the birth place of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "316",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian politician?", "Give me the birth place of Belgian politicians?", "Tell me the birth place of a Belgian politician?", "Tell me the birth place of Belgian politicians?", "What is the birth place of a Belgian politician?", "What is the birth place of Belgian politicians?", "What was the birth place of a Belgian politician?", "What was the birth place of Belgian politicians?", "Which place is the birth place of a Belgian politician?", "Which place is the birth place of Belgian politicians?", "Which place was the birth place of a Belgian politician?", "Which place was the birth place of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "317",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian swimmer?", "Give me the birth place of Belgian swimmers?", "Tell me the birth place of a Belgian swimmer?", "Tell me the birth place of Belgian swimmers?", "What is the birth place of a Belgian swimmer?", "What is the birth place of Belgian swimmers?", "What was the birth place of a Belgian swimmer?", "What was the birth place of Belgian swimmers?", "Which place is the birth place of a Belgian swimmer?", "Which place is the birth place of Belgian swimmers?", "Which place was the birth place of a Belgian swimmer?", "Which place was the birth place of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "318",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian volleyball player?", "Give me the birth place of Belgian volleyball players?", "Tell me the birth place of a Belgian volleyball player?", "Tell me the birth place of Belgian volleyball players?", "What is the birth place of a Belgian volleyball player?", "What is the birth place of Belgian volleyball players?", "What was the birth place of a Belgian volleyball player?", "What was the birth place of Belgian volleyball players?", "Which place is the birth place of a Belgian volleyball player?", "Which place is the birth place of Belgian volleyball players?", "Which place was the birth place of a Belgian volleyball player?", "Which place was the birth place of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "319",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian person?", "Give me the birth place of Belgian persons?", "Tell me the birth place of a Belgian person?", "Tell me the birth place of Belgian persons?", "What is the birth place of a Belgian person?", "What is the birth place of Belgian persons?", "What was the birth place of a Belgian person?", "What was the birth place of Belgian persons?", "Which place is the birth place of a Belgian person?", "Which place is the birth place of Belgian persons?", "Which place was the birth place of a Belgian person?", "Which place was the birth place of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "320",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian Christian Bishop?", "Give me the birth place of Belgian Christian Bishops?", "Tell me the birth place of a Belgian Christian Bishop?", "Tell me the birth place of Belgian Christian Bishops?", "What is the birth place of a Belgian Christian Bishop?", "What is the birth place of Belgian Christian Bishops?", "What was the birth place of a Belgian Christian Bishop?", "What was the birth place of Belgian Christian Bishops?", "Which place is the birth place of a Belgian Christian Bishop?", "Which place is the birth place of Belgian Christian Bishops?", "Which place was the birth place of a Belgian Christian Bishop?", "Which place was the birth place of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "321",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian comics creator?", "Give me the birth place of Belgian comics creators?", "Tell me the birth place of a Belgian comics creator?", "Tell me the birth place of Belgian comics creators?", "What is the birth place of a Belgian comics creator?", "What is the birth place of Belgian comics creators?", "What was the birth place of a Belgian comics creator?", "What was the birth place of Belgian comics creators?", "Which place is the birth place of a Belgian comics creator?", "Which place is the birth place of Belgian comics creators?", "Which place was the birth place of a Belgian comics creator?", "Which place was the birth place of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "322",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian writer?", "Give me the birth place of Belgian writers?", "Tell me the birth place of a Belgian writer?", "Tell me the birth place of Belgian writers?", "What is the birth place of a Belgian writer?", "What is the birth place of Belgian writers?", "What was the birth place of a Belgian writer?", "What was the birth place of Belgian writers?", "Which place is the birth place of a Belgian writer?", "Which place is the birth place of Belgian writers?", "Which place was the birth place of a Belgian writer?", "Which place was the birth place of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "323",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian motorsport racer?", "Give me the birth place of Belgian motorsport racers?", "Tell me the birth place of a Belgian motorsport racer?", "Tell me the birth place of Belgian motorsport racers?", "What is the birth place of a Belgian motorsport racer?", "What is the birth place of Belgian motorsport racers?", "What was the birth place of a Belgian motorsport racer?", "What was the birth place of Belgian motorsport racers?", "Which place is the birth place of a Belgian motorsport racer?", "Which place is the birth place of Belgian motorsport racers?", "Which place was the birth place of a Belgian motorsport racer?", "Which place was the birth place of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "324",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "LOCATION",
    "frameType" : "NPP",
    "sentences" : [ "Give me the birth place of a Belgian musical artist?", "Give me the birth place of Belgian musical artists?", "Tell me the birth place of a Belgian musical artist?", "Tell me the birth place of Belgian musical artists?", "What is the birth place of a Belgian musical artist?", "What is the birth place of Belgian musical artists?", "What was the birth place of a Belgian musical artist?", "What was the birth place of Belgian musical artists?", "Which place is the birth place of a Belgian musical artist?", "Which place is the birth place of Belgian musical artists?", "Which place was the birth place of a Belgian musical artist?", "Which place was the birth place of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "325",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of the spouse of $x?", "Tell me the spouse of the spouse of $x?", "What is the spouse of the spouse of $x?", "What was the spouse of the spouse of $x?", "Which person is the spouse of the spouse of $x?", "Which person was the spouse of the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Andrzej Wajda",
        "uri" : "http://dbpedia.org/resource/Andrzej_Wajda"
      }, {
        "label" : "Brad Pitt",
        "uri" : "http://dbpedia.org/resource/Brad_Pitt"
      }, {
        "label" : "Carole Lombard",
        "uri" : "http://dbpedia.org/resource/Carole_Lombard"
      }, {
        "label" : "Caroline of Brunswick",
        "uri" : "http://dbpedia.org/resource/Caroline_of_Brunswick"
      }, {
        "label" : "Catherine I of Russia",
        "uri" : "http://dbpedia.org/resource/Catherine_I_of_Russia"
      }, {
        "label" : "Clark Gable",
        "uri" : "http://dbpedia.org/resource/Clark_Gable"
      }, {
        "label" : "Cnut the Great",
        "uri" : "http://dbpedia.org/resource/Cnut_the_Great"
      }, {
        "label" : "Edmond Hamilton",
        "uri" : "http://dbpedia.org/resource/Edmond_Hamilton"
      }, {
        "label" : "Elizabeth Taylor",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Taylor"
      }, {
        "label" : "Elizabeth Woodville",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Woodville"
      }, {
        "label" : "Emma of Normandy",
        "uri" : "http://dbpedia.org/resource/Emma_of_Normandy"
      }, {
        "label" : "George IV of the United Kingdom",
        "uri" : "http://dbpedia.org/resource/George_IV_of_the_United_Kingdom"
      }, {
        "label" : "Gwyneth Paltrow",
        "uri" : "http://dbpedia.org/resource/Gwyneth_Paltrow"
      }, {
        "label" : "Ingrid Bergman",
        "uri" : "http://dbpedia.org/resource/Ingrid_Bergman"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Leigh Brackett",
        "uri" : "http://dbpedia.org/resource/Leigh_Brackett"
      }, {
        "label" : "Louis XVI of France",
        "uri" : "http://dbpedia.org/resource/Louis_XVI_of_France"
      }, {
        "label" : "Marie Antoinette",
        "uri" : "http://dbpedia.org/resource/Marie_Antoinette"
      }, {
        "label" : "Peter the Great",
        "uri" : "http://dbpedia.org/resource/Peter_the_Great"
      }, {
        "label" : "Richard Burton",
        "uri" : "http://dbpedia.org/resource/Richard_Burton"
      }, {
        "label" : "Roberto Rossellini",
        "uri" : "http://dbpedia.org/resource/Roberto_Rossellini"
      }, {
        "label" : "Salman Rushdie",
        "uri" : "http://dbpedia.org/resource/Salman_Rushdie"
      }, {
        "label" : "Sylvia Plath",
        "uri" : "http://dbpedia.org/resource/Sylvia_Plath"
      }, {
        "label" : "Ted Hughes",
        "uri" : "http://dbpedia.org/resource/Ted_Hughes"
      }, {
        "label" : "Val Kilmer",
        "uri" : "http://dbpedia.org/resource/Val_Kilmer"
      }, {
        "label" : "Chris Martin",
        "uri" : "http://dbpedia.org/resource/Chris_Martin"
      }, {
        "label" : "Céline Bara",
        "uri" : "http://dbpedia.org/resource/Céline_Bara"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John Grey of Groby",
        "uri" : "http://dbpedia.org/resource/John_Grey_of_Groby"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Padma Lakshmi",
        "uri" : "http://dbpedia.org/resource/Padma_Lakshmi"
      }, {
        "label" : "Savitri (actress)",
        "uri" : "http://dbpedia.org/resource/Savitri_(actress)"
      }, {
        "label" : "Talisa Soto",
        "uri" : "http://dbpedia.org/resource/Talisa_Soto"
      }, {
        "label" : "Aaron Spelling",
        "uri" : "http://dbpedia.org/resource/Aaron_Spelling"
      }, {
        "label" : "Adam Hochschild",
        "uri" : "http://dbpedia.org/resource/Adam_Hochschild"
      }, {
        "label" : "Alastair Dunnett",
        "uri" : "http://dbpedia.org/resource/Alastair_Dunnett"
      }, {
        "label" : "Arlie Russell Hochschild",
        "uri" : "http://dbpedia.org/resource/Arlie_Russell_Hochschild"
      }, {
        "label" : "Barbara Simons",
        "uri" : "http://dbpedia.org/resource/Barbara_Simons"
      }, {
        "label" : "Beata Tyszkiewicz",
        "uri" : "http://dbpedia.org/resource/Beata_Tyszkiewicz"
      }, {
        "label" : "Benjamin Bratt",
        "uri" : "http://dbpedia.org/resource/Benjamin_Bratt"
      }, {
        "label" : "Bermudo II of León",
        "uri" : "http://dbpedia.org/resource/Bermudo_II_of_León"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Cyrille Bara",
        "uri" : "http://dbpedia.org/resource/Cyrille_Bara"
      }, {
        "label" : "Dorothy Dunnett",
        "uri" : "http://dbpedia.org/resource/Dorothy_Dunnett"
      }, {
        "label" : "Eleanor Silliman Belknap Humphrey",
        "uri" : "http://dbpedia.org/resource/Eleanor_Silliman_Belknap_Humphrey"
      }, {
        "label" : "Elvira of Castile, Queen of León",
        "uri" : "http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León"
      }, {
        "label" : "Gemini Ganesan",
        "uri" : "http://dbpedia.org/resource/Gemini_Ganesan"
      }, {
        "label" : "James Harris Simons",
        "uri" : "http://dbpedia.org/resource/James_Harris_Simons"
      }, {
        "label" : "Lewis Craig Humphrey",
        "uri" : "http://dbpedia.org/resource/Lewis_Craig_Humphrey"
      }, {
        "label" : "Rolly Bester",
        "uri" : "http://dbpedia.org/resource/Rolly_Bester"
      }, {
        "label" : "Ruy Guerra",
        "uri" : "http://dbpedia.org/resource/Ruy_Guerra"
      }, {
        "label" : "Deborah Walley",
        "uri" : "http://dbpedia.org/resource/Deborah_Walley"
      }, {
        "label" : "Henry Morgenthau Jr.",
        "uri" : "http://dbpedia.org/resource/Henry_Morgenthau_Jr."
      }, {
        "label" : "Maxwell Reed",
        "uri" : "http://dbpedia.org/resource/Maxwell_Reed"
      }, {
        "label" : "Sigrid the Haughty",
        "uri" : "http://dbpedia.org/resource/Sigrid_the_Haughty"
      }, {
        "label" : "Elena Ceaușescu",
        "uri" : "http://dbpedia.org/resource/Elena_Ceaușescu"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Eliza Jumel",
        "uri" : "http://dbpedia.org/resource/Eliza_Jumel"
      }, {
        "label" : "Raja Zarith Sofia",
        "uri" : "http://dbpedia.org/resource/Raja_Zarith_Sofia"
      }, {
        "label" : "Lena Herzog",
        "uri" : "http://dbpedia.org/resource/Lena_Herzog"
      }, {
        "label" : "Margaret of Soissons, Queen of Armenia",
        "uri" : "http://dbpedia.org/resource/Margaret_of_Soissons,_Queen_of_Armenia"
      }, {
        "label" : "Constance Towers",
        "uri" : "http://dbpedia.org/resource/Constance_Towers"
      }, {
        "label" : "Elsa Pataky",
        "uri" : "http://dbpedia.org/resource/Elsa_Pataky"
      }, {
        "label" : "Maïwenn",
        "uri" : "http://dbpedia.org/resource/Maïwenn"
      }, {
        "label" : "Christian I of Denmark",
        "uri" : "http://dbpedia.org/resource/Christian_I_of_Denmark"
      }, {
        "label" : "Edward of Westminster, Prince of Wales",
        "uri" : "http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales"
      }, {
        "label" : "Elizabeth Fry",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Fry"
      }, {
        "label" : "Joanne Woodward",
        "uri" : "http://dbpedia.org/resource/Joanne_Woodward"
      }, {
        "label" : "Lady Caroline Lamb",
        "uri" : "http://dbpedia.org/resource/Lady_Caroline_Lamb"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Maria Fitzherbert",
        "uri" : "http://dbpedia.org/resource/Maria_Fitzherbert"
      }, {
        "label" : "Mickey Deans",
        "uri" : "http://dbpedia.org/resource/Mickey_Deans"
      }, {
        "label" : "Gustaf Gründgens",
        "uri" : "http://dbpedia.org/resource/Gustaf_Gründgens"
      }, {
        "label" : "Alice Hathaway Lee Roosevelt",
        "uri" : "http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "Alfred Steele",
        "uri" : "http://dbpedia.org/resource/Alfred_Steele"
      }, {
        "label" : "Ralph Forbes",
        "uri" : "http://dbpedia.org/resource/Ralph_Forbes"
      }, {
        "label" : "Sidney Luft",
        "uri" : "http://dbpedia.org/resource/Sidney_Luft"
      }, {
        "label" : "Sylvia Ashley",
        "uri" : "http://dbpedia.org/resource/Sylvia_Ashley"
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "John Jay O'Connor",
        "uri" : "http://dbpedia.org/resource/John_Jay_O'Connor"
      }, {
        "label" : "Marta Fernandez Miranda de Batista",
        "uri" : "http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista"
      }, {
        "label" : "Josephine Dillon",
        "uri" : "http://dbpedia.org/resource/Josephine_Dillon"
      }, {
        "label" : "Lucy Barker",
        "uri" : "http://dbpedia.org/resource/Lucy_Barker"
      }, {
        "label" : "Sunita Deshpande",
        "uri" : "http://dbpedia.org/resource/Sunita_Deshpande"
      }, {
        "label" : "Bettina Gorton",
        "uri" : "http://dbpedia.org/resource/Bettina_Gorton"
      }, {
        "label" : "Luma de Oliveira",
        "uri" : "http://dbpedia.org/resource/Luma_de_Oliveira"
      }, {
        "label" : "Tove of the Obotrites",
        "uri" : "http://dbpedia.org/resource/Tove_of_the_Obotrites"
      }, {
        "label" : "Alice of Korikos",
        "uri" : "http://dbpedia.org/resource/Alice_of_Korikos"
      }, {
        "label" : "Albia Dominica",
        "uri" : "http://dbpedia.org/resource/Albia_Dominica"
      }, {
        "label" : "Amelia Warner",
        "uri" : "http://dbpedia.org/resource/Amelia_Warner"
      }, {
        "label" : "Antony Armstrong-Jones, 1st Earl of Snowdon",
        "uri" : "http://dbpedia.org/resource/Antony_Armstrong-Jones,_1st_Earl_of_Snowdon"
      }, {
        "label" : "Bernadette Chirac",
        "uri" : "http://dbpedia.org/resource/Bernadette_Chirac"
      }, {
        "label" : "Bianca Jagger",
        "uri" : "http://dbpedia.org/resource/Bianca_Jagger"
      }, {
        "label" : "Daniel Massey (actor)",
        "uri" : "http://dbpedia.org/resource/Daniel_Massey_(actor)"
      }, {
        "label" : "Ferdinand III, Holy Roman Emperor",
        "uri" : "http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor"
      }, {
        "label" : "Francis I, Holy Roman Emperor",
        "uri" : "http://dbpedia.org/resource/Francis_I,_Holy_Roman_Emperor"
      }, {
        "label" : "Jack Ryan (politician)",
        "uri" : "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      }, {
        "label" : "Jacqueline, Countess of Hainaut",
        "uri" : "http://dbpedia.org/resource/Jacqueline,_Countess_of_Hainaut"
      }, {
        "label" : "Leonard Woolf",
        "uri" : "http://dbpedia.org/resource/Leonard_Woolf"
      } ]
    },
    "combination" : true
  }, {
    "id" : "326",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian agent?", "Give me the spouse of Australian agents?", "Tell me the spouse of a Australian agent?", "Tell me the spouse of Australian agents?", "What is the spouse of a Australian agent?", "What is the spouse of Australian agents?", "What was the spouse of a Australian agent?", "What was the spouse of Australian agents?", "Which person is the spouse of a Australian agent?", "Which person is the spouse of Australian agents?", "Which person was the spouse of a Australian agent?", "Which person was the spouse of Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "327",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian artist?", "Give me the spouse of Australian artists?", "Tell me the spouse of a Australian artist?", "Tell me the spouse of Australian artists?", "What is the spouse of a Australian artist?", "What is the spouse of Australian artists?", "What was the spouse of a Australian artist?", "What was the spouse of Australian artists?", "Which person is the spouse of a Australian artist?", "Which person is the spouse of Australian artists?", "Which person was the spouse of a Australian artist?", "Which person was the spouse of Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "328",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian motorcycle rider?", "Give me the spouse of Australian motorcycle riders?", "Tell me the spouse of a Australian motorcycle rider?", "Tell me the spouse of Australian motorcycle riders?", "What is the spouse of a Australian motorcycle rider?", "What is the spouse of Australian motorcycle riders?", "What was the spouse of a Australian motorcycle rider?", "What was the spouse of Australian motorcycle riders?", "Which person is the spouse of a Australian motorcycle rider?", "Which person is the spouse of Australian motorcycle riders?", "Which person was the spouse of a Australian motorcycle rider?", "Which person was the spouse of Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "329",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian scientist?", "Give me the spouse of Australian scientists?", "Tell me the spouse of a Australian scientist?", "Tell me the spouse of Australian scientists?", "What is the spouse of a Australian scientist?", "What is the spouse of Australian scientists?", "What was the spouse of a Australian scientist?", "What was the spouse of Australian scientists?", "Which person is the spouse of a Australian scientist?", "Which person is the spouse of Australian scientists?", "Which person was the spouse of a Australian scientist?", "Which person was the spouse of Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "330",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian volleyball player?", "Give me the spouse of Australian volleyball players?", "Tell me the spouse of a Australian volleyball player?", "Tell me the spouse of Australian volleyball players?", "What is the spouse of a Australian volleyball player?", "What is the spouse of Australian volleyball players?", "What was the spouse of a Australian volleyball player?", "What was the spouse of Australian volleyball players?", "Which person is the spouse of a Australian volleyball player?", "Which person is the spouse of Australian volleyball players?", "Which person was the spouse of a Australian volleyball player?", "Which person was the spouse of Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "331",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian basketball player?", "Give me the spouse of Australian basketball players?", "Tell me the spouse of a Australian basketball player?", "Tell me the spouse of Australian basketball players?", "What is the spouse of a Australian basketball player?", "What is the spouse of Australian basketball players?", "What was the spouse of a Australian basketball player?", "What was the spouse of Australian basketball players?", "Which person is the spouse of a Australian basketball player?", "Which person is the spouse of Australian basketball players?", "Which person was the spouse of a Australian basketball player?", "Which person was the spouse of Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "332",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian speedway rider?", "Give me the spouse of Australian speedway riders?", "Tell me the spouse of a Australian speedway rider?", "Tell me the spouse of Australian speedway riders?", "What is the spouse of a Australian speedway rider?", "What is the spouse of Australian speedway riders?", "What was the spouse of a Australian speedway rider?", "What was the spouse of Australian speedway riders?", "Which person is the spouse of a Australian speedway rider?", "Which person is the spouse of Australian speedway riders?", "Which person was the spouse of a Australian speedway rider?", "Which person was the spouse of Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "333",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian model?", "Give me the spouse of Australian models?", "Tell me the spouse of a Australian model?", "Tell me the spouse of Australian models?", "What is the spouse of a Australian model?", "What is the spouse of Australian models?", "What was the spouse of a Australian model?", "What was the spouse of Australian models?", "Which person is the spouse of a Australian model?", "Which person is the spouse of Australian models?", "Which person was the spouse of a Australian model?", "Which person was the spouse of Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "334",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian motorsport racer?", "Give me the spouse of Australian motorsport racers?", "Tell me the spouse of a Australian motorsport racer?", "Tell me the spouse of Australian motorsport racers?", "What is the spouse of a Australian motorsport racer?", "What is the spouse of Australian motorsport racers?", "What was the spouse of a Australian motorsport racer?", "What was the spouse of Australian motorsport racers?", "Which person is the spouse of a Australian motorsport racer?", "Which person is the spouse of Australian motorsport racers?", "Which person was the spouse of a Australian motorsport racer?", "Which person was the spouse of Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "335",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian ice hockey player?", "Give me the spouse of Australian ice hockey players?", "Tell me the spouse of a Australian ice hockey player?", "Tell me the spouse of Australian ice hockey players?", "What is the spouse of a Australian ice hockey player?", "What is the spouse of Australian ice hockey players?", "What was the spouse of a Australian ice hockey player?", "What was the spouse of Australian ice hockey players?", "Which person is the spouse of a Australian ice hockey player?", "Which person is the spouse of Australian ice hockey players?", "Which person was the spouse of a Australian ice hockey player?", "Which person was the spouse of Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "336",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian member of parliament?", "Give me the spouse of Australian member of parliaments?", "Tell me the spouse of a Australian member of parliament?", "Tell me the spouse of Australian member of parliaments?", "What is the spouse of a Australian member of parliament?", "What is the spouse of Australian member of parliaments?", "What was the spouse of a Australian member of parliament?", "What was the spouse of Australian member of parliaments?", "Which person is the spouse of a Australian member of parliament?", "Which person is the spouse of Australian member of parliaments?", "Which person was the spouse of a Australian member of parliament?", "Which person was the spouse of Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "337",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian cleric?", "Give me the spouse of Australian clerics?", "Tell me the spouse of a Australian cleric?", "Tell me the spouse of Australian clerics?", "What is the spouse of a Australian cleric?", "What is the spouse of Australian clerics?", "What was the spouse of a Australian cleric?", "What was the spouse of Australian clerics?", "Which person is the spouse of a Australian cleric?", "Which person is the spouse of Australian clerics?", "Which person was the spouse of a Australian cleric?", "Which person was the spouse of Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "338",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian boxer?", "Give me the spouse of Australian boxers?", "Tell me the spouse of a Australian boxer?", "Tell me the spouse of Australian boxers?", "What is the spouse of a Australian boxer?", "What is the spouse of Australian boxers?", "What was the spouse of a Australian boxer?", "What was the spouse of Australian boxers?", "Which person is the spouse of a Australian boxer?", "Which person is the spouse of Australian boxers?", "Which person was the spouse of a Australian boxer?", "Which person was the spouse of Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "339",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian cyclist?", "Give me the spouse of Australian cyclists?", "Tell me the spouse of a Australian cyclist?", "Tell me the spouse of Australian cyclists?", "What is the spouse of a Australian cyclist?", "What is the spouse of Australian cyclists?", "What was the spouse of a Australian cyclist?", "What was the spouse of Australian cyclists?", "Which person is the spouse of a Australian cyclist?", "Which person is the spouse of Australian cyclists?", "Which person was the spouse of a Australian cyclist?", "Which person was the spouse of Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "340",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian office holder?", "Give me the spouse of Australian office holders?", "Tell me the spouse of a Australian office holder?", "Tell me the spouse of Australian office holders?", "What is the spouse of a Australian office holder?", "What is the spouse of Australian office holders?", "What was the spouse of a Australian office holder?", "What was the spouse of Australian office holders?", "Which person is the spouse of a Australian office holder?", "Which person is the spouse of Australian office holders?", "Which person was the spouse of a Australian office holder?", "Which person was the spouse of Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "341",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian economist?", "Give me the spouse of Australian economists?", "Tell me the spouse of a Australian economist?", "Tell me the spouse of Australian economists?", "What is the spouse of a Australian economist?", "What is the spouse of Australian economists?", "What was the spouse of a Australian economist?", "What was the spouse of Australian economists?", "Which person is the spouse of a Australian economist?", "Which person is the spouse of Australian economists?", "Which person was the spouse of a Australian economist?", "Which person was the spouse of Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "342",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian athlete?", "Give me the spouse of Australian athletes?", "Tell me the spouse of a Australian athlete?", "Tell me the spouse of Australian athletes?", "What is the spouse of a Australian athlete?", "What is the spouse of Australian athletes?", "What was the spouse of a Australian athlete?", "What was the spouse of Australian athletes?", "Which person is the spouse of a Australian athlete?", "Which person is the spouse of Australian athletes?", "Which person was the spouse of a Australian athlete?", "Which person was the spouse of Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "343",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian racing driver?", "Give me the spouse of Australian racing drivers?", "Tell me the spouse of a Australian racing driver?", "Tell me the spouse of Australian racing drivers?", "What is the spouse of a Australian racing driver?", "What is the spouse of Australian racing drivers?", "What was the spouse of a Australian racing driver?", "What was the spouse of Australian racing drivers?", "Which person is the spouse of a Australian racing driver?", "Which person is the spouse of Australian racing drivers?", "Which person was the spouse of a Australian racing driver?", "Which person was the spouse of Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "344",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian golf player?", "Give me the spouse of Australian golf players?", "Tell me the spouse of a Australian golf player?", "Tell me the spouse of Australian golf players?", "What is the spouse of a Australian golf player?", "What is the spouse of Australian golf players?", "What was the spouse of a Australian golf player?", "What was the spouse of Australian golf players?", "Which person is the spouse of a Australian golf player?", "Which person is the spouse of Australian golf players?", "Which person was the spouse of a Australian golf player?", "Which person was the spouse of Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "345",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian politician?", "Give me the spouse of Australian politicians?", "Tell me the spouse of a Australian politician?", "Tell me the spouse of Australian politicians?", "What is the spouse of a Australian politician?", "What is the spouse of Australian politicians?", "What was the spouse of a Australian politician?", "What was the spouse of Australian politicians?", "Which person is the spouse of a Australian politician?", "Which person is the spouse of Australian politicians?", "Which person was the spouse of a Australian politician?", "Which person was the spouse of Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "346",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian swimmer?", "Give me the spouse of Australian swimmers?", "Tell me the spouse of a Australian swimmer?", "Tell me the spouse of Australian swimmers?", "What is the spouse of a Australian swimmer?", "What is the spouse of Australian swimmers?", "What was the spouse of a Australian swimmer?", "What was the spouse of Australian swimmers?", "Which person is the spouse of a Australian swimmer?", "Which person is the spouse of Australian swimmers?", "Which person was the spouse of a Australian swimmer?", "Which person was the spouse of Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "347",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian person?", "Give me the spouse of Australian persons?", "Tell me the spouse of a Australian person?", "Tell me the spouse of Australian persons?", "What is the spouse of a Australian person?", "What is the spouse of Australian persons?", "What was the spouse of a Australian person?", "What was the spouse of Australian persons?", "Which person is the spouse of a Australian person?", "Which person is the spouse of Australian persons?", "Which person was the spouse of a Australian person?", "Which person was the spouse of Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "348",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian Christian Bishop?", "Give me the spouse of Australian Christian Bishops?", "Tell me the spouse of a Australian Christian Bishop?", "Tell me the spouse of Australian Christian Bishops?", "What is the spouse of a Australian Christian Bishop?", "What is the spouse of Australian Christian Bishops?", "What was the spouse of a Australian Christian Bishop?", "What was the spouse of Australian Christian Bishops?", "Which person is the spouse of a Australian Christian Bishop?", "Which person is the spouse of Australian Christian Bishops?", "Which person was the spouse of a Australian Christian Bishop?", "Which person was the spouse of Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "349",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian figure skater?", "Give me the spouse of Australian figure skaters?", "Tell me the spouse of a Australian figure skater?", "Tell me the spouse of Australian figure skaters?", "What is the spouse of a Australian figure skater?", "What is the spouse of Australian figure skaters?", "What was the spouse of a Australian figure skater?", "What was the spouse of Australian figure skaters?", "Which person is the spouse of a Australian figure skater?", "Which person is the spouse of Australian figure skaters?", "Which person was the spouse of a Australian figure skater?", "Which person was the spouse of Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "350",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian writer?", "Give me the spouse of Australian writers?", "Tell me the spouse of a Australian writer?", "Tell me the spouse of Australian writers?", "What is the spouse of a Australian writer?", "What is the spouse of Australian writers?", "What was the spouse of a Australian writer?", "What was the spouse of Australian writers?", "Which person is the spouse of a Australian writer?", "Which person is the spouse of Australian writers?", "Which person was the spouse of a Australian writer?", "Which person was the spouse of Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "351",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Australian soccer player?", "Give me the spouse of Australian soccer players?", "Tell me the spouse of a Australian soccer player?", "Tell me the spouse of Australian soccer players?", "What is the spouse of a Australian soccer player?", "What is the spouse of Australian soccer players?", "What was the spouse of a Australian soccer player?", "What was the spouse of Australian soccer players?", "Which person is the spouse of a Australian soccer player?", "Which person is the spouse of Australian soccer players?", "Which person was the spouse of a Australian soccer player?", "Which person was the spouse of Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "352",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian cleric?", "Give me the spouse of Belgian clerics?", "Tell me the spouse of a Belgian cleric?", "Tell me the spouse of Belgian clerics?", "What is the spouse of a Belgian cleric?", "What is the spouse of Belgian clerics?", "What was the spouse of a Belgian cleric?", "What was the spouse of Belgian clerics?", "Which person is the spouse of a Belgian cleric?", "Which person is the spouse of Belgian clerics?", "Which person was the spouse of a Belgian cleric?", "Which person was the spouse of Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "353",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian office holder?", "Give me the spouse of Belgian office holders?", "Tell me the spouse of a Belgian office holder?", "Tell me the spouse of Belgian office holders?", "What is the spouse of a Belgian office holder?", "What is the spouse of Belgian office holders?", "What was the spouse of a Belgian office holder?", "What was the spouse of Belgian office holders?", "Which person is the spouse of a Belgian office holder?", "Which person is the spouse of Belgian office holders?", "Which person was the spouse of a Belgian office holder?", "Which person was the spouse of Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "354",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian agent?", "Give me the spouse of Belgian agents?", "Tell me the spouse of a Belgian agent?", "Tell me the spouse of Belgian agents?", "What is the spouse of a Belgian agent?", "What is the spouse of Belgian agents?", "What was the spouse of a Belgian agent?", "What was the spouse of Belgian agents?", "Which person is the spouse of a Belgian agent?", "Which person is the spouse of Belgian agents?", "Which person was the spouse of a Belgian agent?", "Which person was the spouse of Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "355",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian economist?", "Give me the spouse of Belgian economists?", "Tell me the spouse of a Belgian economist?", "Tell me the spouse of Belgian economists?", "What is the spouse of a Belgian economist?", "What is the spouse of Belgian economists?", "What was the spouse of a Belgian economist?", "What was the spouse of Belgian economists?", "Which person is the spouse of a Belgian economist?", "Which person is the spouse of Belgian economists?", "Which person was the spouse of a Belgian economist?", "Which person was the spouse of Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "356",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorcycle rider?", "Give me the spouse of Belgian motorcycle riders?", "Tell me the spouse of a Belgian motorcycle rider?", "Tell me the spouse of Belgian motorcycle riders?", "What is the spouse of a Belgian motorcycle rider?", "What is the spouse of Belgian motorcycle riders?", "What was the spouse of a Belgian motorcycle rider?", "What was the spouse of Belgian motorcycle riders?", "Which person is the spouse of a Belgian motorcycle rider?", "Which person is the spouse of Belgian motorcycle riders?", "Which person was the spouse of a Belgian motorcycle rider?", "Which person was the spouse of Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "357",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian artist?", "Give me the spouse of Belgian artists?", "Tell me the spouse of a Belgian artist?", "Tell me the spouse of Belgian artists?", "What is the spouse of a Belgian artist?", "What is the spouse of Belgian artists?", "What was the spouse of a Belgian artist?", "What was the spouse of Belgian artists?", "Which person is the spouse of a Belgian artist?", "Which person is the spouse of Belgian artists?", "Which person was the spouse of a Belgian artist?", "Which person was the spouse of Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "358",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian athlete?", "Give me the spouse of Belgian athletes?", "Tell me the spouse of a Belgian athlete?", "Tell me the spouse of Belgian athletes?", "What is the spouse of a Belgian athlete?", "What is the spouse of Belgian athletes?", "What was the spouse of a Belgian athlete?", "What was the spouse of Belgian athletes?", "Which person is the spouse of a Belgian athlete?", "Which person is the spouse of Belgian athletes?", "Which person was the spouse of a Belgian athlete?", "Which person was the spouse of Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "359",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian scientist?", "Give me the spouse of Belgian scientists?", "Tell me the spouse of a Belgian scientist?", "Tell me the spouse of Belgian scientists?", "What is the spouse of a Belgian scientist?", "What is the spouse of Belgian scientists?", "What was the spouse of a Belgian scientist?", "What was the spouse of Belgian scientists?", "Which person is the spouse of a Belgian scientist?", "Which person is the spouse of Belgian scientists?", "Which person was the spouse of a Belgian scientist?", "Which person was the spouse of Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "360",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian architect?", "Give me the spouse of Belgian architects?", "Tell me the spouse of a Belgian architect?", "Tell me the spouse of Belgian architects?", "What is the spouse of a Belgian architect?", "What is the spouse of Belgian architects?", "What was the spouse of a Belgian architect?", "What was the spouse of Belgian architects?", "Which person is the spouse of a Belgian architect?", "Which person is the spouse of Belgian architects?", "Which person was the spouse of a Belgian architect?", "Which person was the spouse of Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "361",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian golf player?", "Give me the spouse of Belgian golf players?", "Tell me the spouse of a Belgian golf player?", "Tell me the spouse of Belgian golf players?", "What is the spouse of a Belgian golf player?", "What is the spouse of Belgian golf players?", "What was the spouse of a Belgian golf player?", "What was the spouse of Belgian golf players?", "Which person is the spouse of a Belgian golf player?", "Which person is the spouse of Belgian golf players?", "Which person was the spouse of a Belgian golf player?", "Which person was the spouse of Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "362",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian racing driver?", "Give me the spouse of Belgian racing drivers?", "Tell me the spouse of a Belgian racing driver?", "Tell me the spouse of Belgian racing drivers?", "What is the spouse of a Belgian racing driver?", "What is the spouse of Belgian racing drivers?", "What was the spouse of a Belgian racing driver?", "What was the spouse of Belgian racing drivers?", "Which person is the spouse of a Belgian racing driver?", "Which person is the spouse of Belgian racing drivers?", "Which person was the spouse of a Belgian racing driver?", "Which person was the spouse of Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "363",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian politician?", "Give me the spouse of Belgian politicians?", "Tell me the spouse of a Belgian politician?", "Tell me the spouse of Belgian politicians?", "What is the spouse of a Belgian politician?", "What is the spouse of Belgian politicians?", "What was the spouse of a Belgian politician?", "What was the spouse of Belgian politicians?", "Which person is the spouse of a Belgian politician?", "Which person is the spouse of Belgian politicians?", "Which person was the spouse of a Belgian politician?", "Which person was the spouse of Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "364",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian swimmer?", "Give me the spouse of Belgian swimmers?", "Tell me the spouse of a Belgian swimmer?", "Tell me the spouse of Belgian swimmers?", "What is the spouse of a Belgian swimmer?", "What is the spouse of Belgian swimmers?", "What was the spouse of a Belgian swimmer?", "What was the spouse of Belgian swimmers?", "Which person is the spouse of a Belgian swimmer?", "Which person is the spouse of Belgian swimmers?", "Which person was the spouse of a Belgian swimmer?", "Which person was the spouse of Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "365",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian volleyball player?", "Give me the spouse of Belgian volleyball players?", "Tell me the spouse of a Belgian volleyball player?", "Tell me the spouse of Belgian volleyball players?", "What is the spouse of a Belgian volleyball player?", "What is the spouse of Belgian volleyball players?", "What was the spouse of a Belgian volleyball player?", "What was the spouse of Belgian volleyball players?", "Which person is the spouse of a Belgian volleyball player?", "Which person is the spouse of Belgian volleyball players?", "Which person was the spouse of a Belgian volleyball player?", "Which person was the spouse of Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "366",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian person?", "Give me the spouse of Belgian persons?", "Tell me the spouse of a Belgian person?", "Tell me the spouse of Belgian persons?", "What is the spouse of a Belgian person?", "What is the spouse of Belgian persons?", "What was the spouse of a Belgian person?", "What was the spouse of Belgian persons?", "Which person is the spouse of a Belgian person?", "Which person is the spouse of Belgian persons?", "Which person was the spouse of a Belgian person?", "Which person was the spouse of Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "367",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian Christian Bishop?", "Give me the spouse of Belgian Christian Bishops?", "Tell me the spouse of a Belgian Christian Bishop?", "Tell me the spouse of Belgian Christian Bishops?", "What is the spouse of a Belgian Christian Bishop?", "What is the spouse of Belgian Christian Bishops?", "What was the spouse of a Belgian Christian Bishop?", "What was the spouse of Belgian Christian Bishops?", "Which person is the spouse of a Belgian Christian Bishop?", "Which person is the spouse of Belgian Christian Bishops?", "Which person was the spouse of a Belgian Christian Bishop?", "Which person was the spouse of Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "368",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian comics creator?", "Give me the spouse of Belgian comics creators?", "Tell me the spouse of a Belgian comics creator?", "Tell me the spouse of Belgian comics creators?", "What is the spouse of a Belgian comics creator?", "What is the spouse of Belgian comics creators?", "What was the spouse of a Belgian comics creator?", "What was the spouse of Belgian comics creators?", "Which person is the spouse of a Belgian comics creator?", "Which person is the spouse of Belgian comics creators?", "Which person was the spouse of a Belgian comics creator?", "Which person was the spouse of Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "369",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian writer?", "Give me the spouse of Belgian writers?", "Tell me the spouse of a Belgian writer?", "Tell me the spouse of Belgian writers?", "What is the spouse of a Belgian writer?", "What is the spouse of Belgian writers?", "What was the spouse of a Belgian writer?", "What was the spouse of Belgian writers?", "Which person is the spouse of a Belgian writer?", "Which person is the spouse of Belgian writers?", "Which person was the spouse of a Belgian writer?", "Which person was the spouse of Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "370",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian motorsport racer?", "Give me the spouse of Belgian motorsport racers?", "Tell me the spouse of a Belgian motorsport racer?", "Tell me the spouse of Belgian motorsport racers?", "What is the spouse of a Belgian motorsport racer?", "What is the spouse of Belgian motorsport racers?", "What was the spouse of a Belgian motorsport racer?", "What was the spouse of Belgian motorsport racers?", "Which person is the spouse of a Belgian motorsport racer?", "Which person is the spouse of Belgian motorsport racers?", "Which person was the spouse of a Belgian motorsport racer?", "Which person was the spouse of Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "371",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "NPP",
    "sentences" : [ "Give me the spouse of a Belgian musical artist?", "Give me the spouse of Belgian musical artists?", "Tell me the spouse of a Belgian musical artist?", "Tell me the spouse of Belgian musical artists?", "What is the spouse of a Belgian musical artist?", "What is the spouse of Belgian musical artists?", "What was the spouse of a Belgian musical artist?", "What was the spouse of Belgian musical artists?", "Which person is the spouse of a Belgian musical artist?", "Which person is the spouse of Belgian musical artists?", "Which person was the spouse of a Belgian musical artist?", "Which person was the spouse of Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "372",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bordered the birth place of $x?", "What borders the birth place of $x?", "Which state bordered the birth place of $x?", "Which state borders the birth place of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/State> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthPlace> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "373",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears the spouse of $x?", "What born the spouse of $x?", "Which date bears the spouse of $x?", "Which date born the spouse of $x?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/spouse> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Andrzej Wajda",
        "uri" : "http://dbpedia.org/resource/Andrzej_Wajda"
      }, {
        "label" : "Brad Pitt",
        "uri" : "http://dbpedia.org/resource/Brad_Pitt"
      }, {
        "label" : "Carole Lombard",
        "uri" : "http://dbpedia.org/resource/Carole_Lombard"
      }, {
        "label" : "Caroline of Brunswick",
        "uri" : "http://dbpedia.org/resource/Caroline_of_Brunswick"
      }, {
        "label" : "Catherine I of Russia",
        "uri" : "http://dbpedia.org/resource/Catherine_I_of_Russia"
      }, {
        "label" : "Christopher Lambert",
        "uri" : "http://dbpedia.org/resource/Christopher_Lambert"
      }, {
        "label" : "Clark Gable",
        "uri" : "http://dbpedia.org/resource/Clark_Gable"
      }, {
        "label" : "Cnut the Great",
        "uri" : "http://dbpedia.org/resource/Cnut_the_Great"
      }, {
        "label" : "Edmond Hamilton",
        "uri" : "http://dbpedia.org/resource/Edmond_Hamilton"
      }, {
        "label" : "Elizabeth Taylor",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Taylor"
      }, {
        "label" : "Elizabeth Woodville",
        "uri" : "http://dbpedia.org/resource/Elizabeth_Woodville"
      }, {
        "label" : "Emma of Normandy",
        "uri" : "http://dbpedia.org/resource/Emma_of_Normandy"
      }, {
        "label" : "George IV of the United Kingdom",
        "uri" : "http://dbpedia.org/resource/George_IV_of_the_United_Kingdom"
      }, {
        "label" : "Gwyneth Paltrow",
        "uri" : "http://dbpedia.org/resource/Gwyneth_Paltrow"
      }, {
        "label" : "Ingrid Bergman",
        "uri" : "http://dbpedia.org/resource/Ingrid_Bergman"
      }, {
        "label" : "Jennifer Aniston",
        "uri" : "http://dbpedia.org/resource/Jennifer_Aniston"
      }, {
        "label" : "Leigh Brackett",
        "uri" : "http://dbpedia.org/resource/Leigh_Brackett"
      }, {
        "label" : "Louis XVI of France",
        "uri" : "http://dbpedia.org/resource/Louis_XVI_of_France"
      }, {
        "label" : "Marie Antoinette",
        "uri" : "http://dbpedia.org/resource/Marie_Antoinette"
      }, {
        "label" : "Peter the Great",
        "uri" : "http://dbpedia.org/resource/Peter_the_Great"
      }, {
        "label" : "Richard Burton",
        "uri" : "http://dbpedia.org/resource/Richard_Burton"
      }, {
        "label" : "Roberto Rossellini",
        "uri" : "http://dbpedia.org/resource/Roberto_Rossellini"
      }, {
        "label" : "Salman Rushdie",
        "uri" : "http://dbpedia.org/resource/Salman_Rushdie"
      }, {
        "label" : "Sylvia Plath",
        "uri" : "http://dbpedia.org/resource/Sylvia_Plath"
      }, {
        "label" : "Ted Hughes",
        "uri" : "http://dbpedia.org/resource/Ted_Hughes"
      }, {
        "label" : "Theophanu",
        "uri" : "http://dbpedia.org/resource/Theophanu"
      }, {
        "label" : "Val Kilmer",
        "uri" : "http://dbpedia.org/resource/Val_Kilmer"
      }, {
        "label" : "Vivien Leigh",
        "uri" : "http://dbpedia.org/resource/Vivien_Leigh"
      }, {
        "label" : "Camille Flammarion",
        "uri" : "http://dbpedia.org/resource/Camille_Flammarion"
      }, {
        "label" : "Chris Martin",
        "uri" : "http://dbpedia.org/resource/Chris_Martin"
      }, {
        "label" : "Céline Bara",
        "uri" : "http://dbpedia.org/resource/Céline_Bara"
      }, {
        "label" : "Dennis Quaid",
        "uri" : "http://dbpedia.org/resource/Dennis_Quaid"
      }, {
        "label" : "Joanne Whalley",
        "uri" : "http://dbpedia.org/resource/Joanne_Whalley"
      }, {
        "label" : "John Grey of Groby",
        "uri" : "http://dbpedia.org/resource/John_Grey_of_Groby"
      }, {
        "label" : "Minnie Maddern Fiske",
        "uri" : "http://dbpedia.org/resource/Minnie_Maddern_Fiske"
      }, {
        "label" : "Padma Lakshmi",
        "uri" : "http://dbpedia.org/resource/Padma_Lakshmi"
      }, {
        "label" : "Talisa Soto",
        "uri" : "http://dbpedia.org/resource/Talisa_Soto"
      }, {
        "label" : "Aaron Spelling",
        "uri" : "http://dbpedia.org/resource/Aaron_Spelling"
      }, {
        "label" : "Adam Hochschild",
        "uri" : "http://dbpedia.org/resource/Adam_Hochschild"
      }, {
        "label" : "Alastair Dunnett",
        "uri" : "http://dbpedia.org/resource/Alastair_Dunnett"
      }, {
        "label" : "Arlie Russell Hochschild",
        "uri" : "http://dbpedia.org/resource/Arlie_Russell_Hochschild"
      }, {
        "label" : "Beata Tyszkiewicz",
        "uri" : "http://dbpedia.org/resource/Beata_Tyszkiewicz"
      }, {
        "label" : "Benjamin Bratt",
        "uri" : "http://dbpedia.org/resource/Benjamin_Bratt"
      }, {
        "label" : "Bunker Roy",
        "uri" : "http://dbpedia.org/resource/Bunker_Roy"
      }, {
        "label" : "Candy Spelling",
        "uri" : "http://dbpedia.org/resource/Candy_Spelling"
      }, {
        "label" : "Cyrille Bara",
        "uri" : "http://dbpedia.org/resource/Cyrille_Bara"
      }, {
        "label" : "Dorothy Dunnett",
        "uri" : "http://dbpedia.org/resource/Dorothy_Dunnett"
      }, {
        "label" : "Ehud Olmert",
        "uri" : "http://dbpedia.org/resource/Ehud_Olmert"
      }, {
        "label" : "Elvira of Castile, Queen of León",
        "uri" : "http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_León"
      }, {
        "label" : "Gemini Ganesan",
        "uri" : "http://dbpedia.org/resource/Gemini_Ganesan"
      }, {
        "label" : "Harriet Smithson",
        "uri" : "http://dbpedia.org/resource/Harriet_Smithson"
      }, {
        "label" : "James Harris Simons",
        "uri" : "http://dbpedia.org/resource/James_Harris_Simons"
      }, {
        "label" : "Lewis Craig Humphrey",
        "uri" : "http://dbpedia.org/resource/Lewis_Craig_Humphrey"
      }, {
        "label" : "Paul Hasluck",
        "uri" : "http://dbpedia.org/resource/Paul_Hasluck"
      }, {
        "label" : "Paula Dockery",
        "uri" : "http://dbpedia.org/resource/Paula_Dockery"
      }, {
        "label" : "Robert Sidney, 2nd Earl of Leicester",
        "uri" : "http://dbpedia.org/resource/Robert_Sidney,_2nd_Earl_of_Leicester"
      }, {
        "label" : "Rolly Bester",
        "uri" : "http://dbpedia.org/resource/Rolly_Bester"
      }, {
        "label" : "Ruy Guerra",
        "uri" : "http://dbpedia.org/resource/Ruy_Guerra"
      }, {
        "label" : "Clara McMillen",
        "uri" : "http://dbpedia.org/resource/Clara_McMillen"
      }, {
        "label" : "Diana Gould (dancer)",
        "uri" : "http://dbpedia.org/resource/Diana_Gould_(dancer)"
      }, {
        "label" : "Sidney Miller (actor)",
        "uri" : "http://dbpedia.org/resource/Sidney_Miller_(actor)"
      }, {
        "label" : "Sir Edward Burgh",
        "uri" : "http://dbpedia.org/resource/Sir_Edward_Burgh"
      }, {
        "label" : "Henry Morgenthau Jr.",
        "uri" : "http://dbpedia.org/resource/Henry_Morgenthau_Jr."
      }, {
        "label" : "Lydia Lopokova",
        "uri" : "http://dbpedia.org/resource/Lydia_Lopokova"
      }, {
        "label" : "Maxwell Reed",
        "uri" : "http://dbpedia.org/resource/Maxwell_Reed"
      }, {
        "label" : "Sigrid the Haughty",
        "uri" : "http://dbpedia.org/resource/Sigrid_the_Haughty"
      }, {
        "label" : "Elena Ceaușescu",
        "uri" : "http://dbpedia.org/resource/Elena_Ceaușescu"
      }, {
        "label" : "Lydia Clarke",
        "uri" : "http://dbpedia.org/resource/Lydia_Clarke"
      }, {
        "label" : "Ruqaiya Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Ruqaiya_Sultan_Begum"
      }, {
        "label" : "Eliza Jumel",
        "uri" : "http://dbpedia.org/resource/Eliza_Jumel"
      }, {
        "label" : "Lena Herzog",
        "uri" : "http://dbpedia.org/resource/Lena_Herzog"
      }, {
        "label" : "Katie Lee (chef)",
        "uri" : "http://dbpedia.org/resource/Katie_Lee_(chef)"
      }, {
        "label" : "Elsa Pataky",
        "uri" : "http://dbpedia.org/resource/Elsa_Pataky"
      }, {
        "label" : "Maïwenn",
        "uri" : "http://dbpedia.org/resource/Maïwenn"
      }, {
        "label" : "Tom Courtenay",
        "uri" : "http://dbpedia.org/resource/Tom_Courtenay"
      }, {
        "label" : "Christian I of Denmark",
        "uri" : "http://dbpedia.org/resource/Christian_I_of_Denmark"
      }, {
        "label" : "Edward of Westminster, Prince of Wales",
        "uri" : "http://dbpedia.org/resource/Edward_of_Westminster,_Prince_of_Wales"
      }, {
        "label" : "Joanne Woodward",
        "uri" : "http://dbpedia.org/resource/Joanne_Woodward"
      }, {
        "label" : "Lady Caroline Lamb",
        "uri" : "http://dbpedia.org/resource/Lady_Caroline_Lamb"
      }, {
        "label" : "Margaret Sullavan",
        "uri" : "http://dbpedia.org/resource/Margaret_Sullavan"
      }, {
        "label" : "Maria Fitzherbert",
        "uri" : "http://dbpedia.org/resource/Maria_Fitzherbert"
      }, {
        "label" : "Mickey Deans",
        "uri" : "http://dbpedia.org/resource/Mickey_Deans"
      }, {
        "label" : "Alice Hathaway Lee Roosevelt",
        "uri" : "http://dbpedia.org/resource/Alice_Hathaway_Lee_Roosevelt"
      }, {
        "label" : "Frank Bunker Gilbreth Sr.",
        "uri" : "http://dbpedia.org/resource/Frank_Bunker_Gilbreth_Sr."
      }, {
        "label" : "Alfred Steele",
        "uri" : "http://dbpedia.org/resource/Alfred_Steele"
      }, {
        "label" : "Barbara Hutton",
        "uri" : "http://dbpedia.org/resource/Barbara_Hutton"
      }, {
        "label" : "Sidney Luft",
        "uri" : "http://dbpedia.org/resource/Sidney_Luft"
      }, {
        "label" : "Sylvia Ashley",
        "uri" : "http://dbpedia.org/resource/Sylvia_Ashley"
      }, {
        "label" : "Salima Sultan Begum",
        "uri" : "http://dbpedia.org/resource/Salima_Sultan_Begum"
      }, {
        "label" : "Cecily Neville, Duchess of Warwick",
        "uri" : "http://dbpedia.org/resource/Cecily_Neville,_Duchess_of_Warwick"
      }, {
        "label" : "David Evans Shaw",
        "uri" : "http://dbpedia.org/resource/David_Evans_Shaw"
      }, {
        "label" : "John Jay O'Connor",
        "uri" : "http://dbpedia.org/resource/John_Jay_O'Connor"
      }, {
        "label" : "Marta Fernandez Miranda de Batista",
        "uri" : "http://dbpedia.org/resource/Marta_Fernandez_Miranda_de_Batista"
      }, {
        "label" : "Josephine Dillon",
        "uri" : "http://dbpedia.org/resource/Josephine_Dillon"
      }, {
        "label" : "Sunita Deshpande",
        "uri" : "http://dbpedia.org/resource/Sunita_Deshpande"
      }, {
        "label" : "Bettina Gorton",
        "uri" : "http://dbpedia.org/resource/Bettina_Gorton"
      }, {
        "label" : "Luma de Oliveira",
        "uri" : "http://dbpedia.org/resource/Luma_de_Oliveira"
      }, {
        "label" : "Tove of the Obotrites",
        "uri" : "http://dbpedia.org/resource/Tove_of_the_Obotrites"
      }, {
        "label" : "Gelli de Belen",
        "uri" : "http://dbpedia.org/resource/Gelli_de_Belen"
      }, {
        "label" : "Albia Dominica",
        "uri" : "http://dbpedia.org/resource/Albia_Dominica"
      } ]
    },
    "combination" : true
  }, {
    "id" : "374",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian agent?", "What bears Australian agents?", "What born a Australian agent?", "What born Australian agents?", "Which date bears a Australian agent?", "Which date bears Australian agents?", "Which date born a Australian agent?", "Which date born Australian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "375",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian artist?", "What bears Australian artists?", "What born a Australian artist?", "What born Australian artists?", "Which date bears a Australian artist?", "Which date bears Australian artists?", "Which date born a Australian artist?", "Which date born Australian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "376",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian motorcycle rider?", "What bears Australian motorcycle riders?", "What born a Australian motorcycle rider?", "What born Australian motorcycle riders?", "Which date bears a Australian motorcycle rider?", "Which date bears Australian motorcycle riders?", "Which date born a Australian motorcycle rider?", "Which date born Australian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "377",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian scientist?", "What bears Australian scientists?", "What born a Australian scientist?", "What born Australian scientists?", "Which date bears a Australian scientist?", "Which date bears Australian scientists?", "Which date born a Australian scientist?", "Which date born Australian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "378",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian volleyball player?", "What bears Australian volleyball players?", "What born a Australian volleyball player?", "What born Australian volleyball players?", "Which date bears a Australian volleyball player?", "Which date bears Australian volleyball players?", "Which date born a Australian volleyball player?", "Which date born Australian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "379",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian basketball player?", "What bears Australian basketball players?", "What born a Australian basketball player?", "What born Australian basketball players?", "Which date bears a Australian basketball player?", "Which date bears Australian basketball players?", "Which date born a Australian basketball player?", "Which date born Australian basketball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "380",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian speedway rider?", "What bears Australian speedway riders?", "What born a Australian speedway rider?", "What born Australian speedway riders?", "Which date bears a Australian speedway rider?", "Which date bears Australian speedway riders?", "Which date born a Australian speedway rider?", "Which date born Australian speedway riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "381",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian model?", "What bears Australian models?", "What born a Australian model?", "What born Australian models?", "Which date bears a Australian model?", "Which date bears Australian models?", "Which date born a Australian model?", "Which date born Australian models?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "382",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian motorsport racer?", "What bears Australian motorsport racers?", "What born a Australian motorsport racer?", "What born Australian motorsport racers?", "Which date bears a Australian motorsport racer?", "Which date bears Australian motorsport racers?", "Which date born a Australian motorsport racer?", "Which date born Australian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "383",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian ice hockey player?", "What bears Australian ice hockey players?", "What born a Australian ice hockey player?", "What born Australian ice hockey players?", "Which date bears a Australian ice hockey player?", "Which date bears Australian ice hockey players?", "Which date born a Australian ice hockey player?", "Which date born Australian ice hockey players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "384",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian member of parliament?", "What bears Australian member of parliaments?", "What born a Australian member of parliament?", "What born Australian member of parliaments?", "Which date bears a Australian member of parliament?", "Which date bears Australian member of parliaments?", "Which date born a Australian member of parliament?", "Which date born Australian member of parliaments?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "385",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian cleric?", "What bears Australian clerics?", "What born a Australian cleric?", "What born Australian clerics?", "Which date bears a Australian cleric?", "Which date bears Australian clerics?", "Which date born a Australian cleric?", "Which date born Australian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "386",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian boxer?", "What bears Australian boxers?", "What born a Australian boxer?", "What born Australian boxers?", "Which date bears a Australian boxer?", "Which date bears Australian boxers?", "Which date born a Australian boxer?", "Which date born Australian boxers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Boxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "387",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian cyclist?", "What bears Australian cyclists?", "What born a Australian cyclist?", "What born Australian cyclists?", "Which date bears a Australian cyclist?", "Which date bears Australian cyclists?", "Which date born a Australian cyclist?", "Which date born Australian cyclists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cyclist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "388",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian office holder?", "What bears Australian office holders?", "What born a Australian office holder?", "What born Australian office holders?", "Which date bears a Australian office holder?", "Which date bears Australian office holders?", "Which date born a Australian office holder?", "Which date born Australian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "389",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian economist?", "What bears Australian economists?", "What born a Australian economist?", "What born Australian economists?", "Which date bears a Australian economist?", "Which date bears Australian economists?", "Which date born a Australian economist?", "Which date born Australian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "390",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian athlete?", "What bears Australian athletes?", "What born a Australian athlete?", "What born Australian athletes?", "Which date bears a Australian athlete?", "Which date bears Australian athletes?", "Which date born a Australian athlete?", "Which date born Australian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "391",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian racing driver?", "What bears Australian racing drivers?", "What born a Australian racing driver?", "What born Australian racing drivers?", "Which date bears a Australian racing driver?", "Which date bears Australian racing drivers?", "Which date born a Australian racing driver?", "Which date born Australian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "392",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian golf player?", "What bears Australian golf players?", "What born a Australian golf player?", "What born Australian golf players?", "Which date bears a Australian golf player?", "Which date bears Australian golf players?", "Which date born a Australian golf player?", "Which date born Australian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "393",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian politician?", "What bears Australian politicians?", "What born a Australian politician?", "What born Australian politicians?", "Which date bears a Australian politician?", "Which date bears Australian politicians?", "Which date born a Australian politician?", "Which date born Australian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "394",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian swimmer?", "What bears Australian swimmers?", "What born a Australian swimmer?", "What born Australian swimmers?", "Which date bears a Australian swimmer?", "Which date bears Australian swimmers?", "Which date born a Australian swimmer?", "Which date born Australian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "395",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian person?", "What bears Australian persons?", "What born a Australian person?", "What born Australian persons?", "Which date bears a Australian person?", "Which date bears Australian persons?", "Which date born a Australian person?", "Which date born Australian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "396",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian Christian Bishop?", "What bears Australian Christian Bishops?", "What born a Australian Christian Bishop?", "What born Australian Christian Bishops?", "Which date bears a Australian Christian Bishop?", "Which date bears Australian Christian Bishops?", "Which date born a Australian Christian Bishop?", "Which date born Australian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "397",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian figure skater?", "What bears Australian figure skaters?", "What born a Australian figure skater?", "What born Australian figure skaters?", "Which date bears a Australian figure skater?", "Which date bears Australian figure skaters?", "Which date born a Australian figure skater?", "Which date born Australian figure skaters?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "398",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian writer?", "What bears Australian writers?", "What born a Australian writer?", "What born Australian writers?", "Which date bears a Australian writer?", "Which date bears Australian writers?", "Which date born a Australian writer?", "Which date born Australian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "399",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Australian soccer player?", "What bears Australian soccer players?", "What born a Australian soccer player?", "What born Australian soccer players?", "Which date bears a Australian soccer player?", "Which date bears Australian soccer players?", "Which date born a Australian soccer player?", "Which date born Australian soccer players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "400",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian cleric?", "What bears Belgian clerics?", "What born a Belgian cleric?", "What born Belgian clerics?", "Which date bears a Belgian cleric?", "Which date bears Belgian clerics?", "Which date born a Belgian cleric?", "Which date born Belgian clerics?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "401",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian office holder?", "What bears Belgian office holders?", "What born a Belgian office holder?", "What born Belgian office holders?", "Which date bears a Belgian office holder?", "Which date bears Belgian office holders?", "Which date born a Belgian office holder?", "Which date born Belgian office holders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "402",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian agent?", "What bears Belgian agents?", "What born a Belgian agent?", "What born Belgian agents?", "Which date bears a Belgian agent?", "Which date bears Belgian agents?", "Which date born a Belgian agent?", "Which date born Belgian agents?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "403",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian economist?", "What bears Belgian economists?", "What born a Belgian economist?", "What born Belgian economists?", "Which date bears a Belgian economist?", "Which date bears Belgian economists?", "Which date born a Belgian economist?", "Which date born Belgian economists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "404",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian motorcycle rider?", "What bears Belgian motorcycle riders?", "What born a Belgian motorcycle rider?", "What born Belgian motorcycle riders?", "Which date bears a Belgian motorcycle rider?", "Which date bears Belgian motorcycle riders?", "Which date born a Belgian motorcycle rider?", "Which date born Belgian motorcycle riders?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorcycleRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "405",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian artist?", "What bears Belgian artists?", "What born a Belgian artist?", "What born Belgian artists?", "Which date bears a Belgian artist?", "Which date bears Belgian artists?", "Which date born a Belgian artist?", "Which date born Belgian artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "406",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian athlete?", "What bears Belgian athletes?", "What born a Belgian athlete?", "What born Belgian athletes?", "Which date bears a Belgian athlete?", "Which date bears Belgian athletes?", "Which date born a Belgian athlete?", "Which date born Belgian athletes?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "407",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian scientist?", "What bears Belgian scientists?", "What born a Belgian scientist?", "What born Belgian scientists?", "Which date bears a Belgian scientist?", "Which date bears Belgian scientists?", "Which date born a Belgian scientist?", "Which date born Belgian scientists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "408",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian architect?", "What bears Belgian architects?", "What born a Belgian architect?", "What born Belgian architects?", "Which date bears a Belgian architect?", "Which date bears Belgian architects?", "Which date born a Belgian architect?", "Which date born Belgian architects?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "409",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian golf player?", "What bears Belgian golf players?", "What born a Belgian golf player?", "What born Belgian golf players?", "Which date bears a Belgian golf player?", "Which date bears Belgian golf players?", "Which date born a Belgian golf player?", "Which date born Belgian golf players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "410",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian racing driver?", "What bears Belgian racing drivers?", "What born a Belgian racing driver?", "What born Belgian racing drivers?", "Which date bears a Belgian racing driver?", "Which date bears Belgian racing drivers?", "Which date born a Belgian racing driver?", "Which date born Belgian racing drivers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "411",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian politician?", "What bears Belgian politicians?", "What born a Belgian politician?", "What born Belgian politicians?", "Which date bears a Belgian politician?", "Which date bears Belgian politicians?", "Which date born a Belgian politician?", "Which date born Belgian politicians?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "412",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian swimmer?", "What bears Belgian swimmers?", "What born a Belgian swimmer?", "What born Belgian swimmers?", "Which date bears a Belgian swimmer?", "Which date bears Belgian swimmers?", "Which date born a Belgian swimmer?", "Which date born Belgian swimmers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "413",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian volleyball player?", "What bears Belgian volleyball players?", "What born a Belgian volleyball player?", "What born Belgian volleyball players?", "Which date bears a Belgian volleyball player?", "Which date bears Belgian volleyball players?", "Which date born a Belgian volleyball player?", "Which date born Belgian volleyball players?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "414",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian person?", "What bears Belgian persons?", "What born a Belgian person?", "What born Belgian persons?", "Which date bears a Belgian person?", "Which date bears Belgian persons?", "Which date born a Belgian person?", "Which date born Belgian persons?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "415",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian Christian Bishop?", "What bears Belgian Christian Bishops?", "What born a Belgian Christian Bishop?", "What born Belgian Christian Bishops?", "Which date bears a Belgian Christian Bishop?", "Which date bears Belgian Christian Bishops?", "Which date born a Belgian Christian Bishop?", "Which date born Belgian Christian Bishops?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChristianBishop>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "416",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian comics creator?", "What bears Belgian comics creators?", "What born a Belgian comics creator?", "What born Belgian comics creators?", "Which date bears a Belgian comics creator?", "Which date bears Belgian comics creators?", "Which date born a Belgian comics creator?", "Which date born Belgian comics creators?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "417",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian writer?", "What bears Belgian writers?", "What born a Belgian writer?", "What born Belgian writers?", "Which date bears a Belgian writer?", "Which date bears Belgian writers?", "Which date born a Belgian writer?", "Which date born Belgian writers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "418",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian motorsport racer?", "What bears Belgian motorsport racers?", "What born a Belgian motorsport racer?", "What born Belgian motorsport racers?", "Which date bears a Belgian motorsport racer?", "Which date bears Belgian motorsport racers?", "Which date born a Belgian motorsport racer?", "Which date born Belgian motorsport racers?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MotorsportRacer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "419",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentences" : [ "What bears a Belgian musical artist?", "What bears Belgian musical artists?", "What born a Belgian musical artist?", "What born Belgian musical artists?", "Which date bears a Belgian musical artist?", "Which date bears Belgian musical artists?", "Which date born a Belgian musical artist?", "Which date born Belgian musical artists?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "420",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "PERSON",
    "frameType" : "VP",
    "sentences" : [ "What directed a Australian single?", "What directed Australian singles?", "What directs a Australian single?", "What directs Australian singles?", "Which person directed a Australian single?", "Which person directed Australian singles?", "Which person directs a Australian single?", "Which person directs Australian singles?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "421",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth date of $x belonged?", "When was the the birth date of $x belongs?", "When were the the birth date of $x belonged?", "When were the the birth date of $x belongs?", "Which animal was the the birth date of $x belonged?", "Which animal was the the birth date of $x belongs?", "Which animal were the the birth date of $x belonged?", "Which animal were the the birth date of $x belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthDate> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "422",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the occupation of $x belonged?", "When was the the occupation of $x belongs?", "When were the the occupation of $x belonged?", "When were the the occupation of $x belongs?", "Which animal was the the occupation of $x belonged?", "Which animal was the the occupation of $x belongs?", "Which animal were the the occupation of $x belonged?", "Which animal were the the occupation of $x belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/occupation> ?objOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Elric of Melniboné",
        "uri" : "http://dbpedia.org/resource/Elric_of_Melniboné"
      }, {
        "label" : "Behemoth (Master and Margarita)",
        "uri" : "http://dbpedia.org/resource/Behemoth_(Master_and_Margarita)"
      }, {
        "label" : "Barry Knight (politician)",
        "uri" : "http://dbpedia.org/resource/Barry_Knight_(politician)"
      }, {
        "label" : "Sixty Rayburn",
        "uri" : "http://dbpedia.org/resource/Sixty_Rayburn"
      }, {
        "label" : "Lucy Westenra",
        "uri" : "http://dbpedia.org/resource/Lucy_Westenra"
      }, {
        "label" : "Morgan le Fay",
        "uri" : "http://dbpedia.org/resource/Morgan_le_Fay"
      }, {
        "label" : "Thelma Bates",
        "uri" : "http://dbpedia.org/resource/Thelma_Bates"
      }, {
        "label" : "Sea Hag",
        "uri" : "http://dbpedia.org/resource/Sea_Hag"
      }, {
        "label" : "Max Headroom (character)",
        "uri" : "http://dbpedia.org/resource/Max_Headroom_(character)"
      }, {
        "label" : "Brusher Mills",
        "uri" : "http://dbpedia.org/resource/Brusher_Mills"
      }, {
        "label" : "Norman Thelwell",
        "uri" : "http://dbpedia.org/resource/Norman_Thelwell"
      }, {
        "label" : "Harvey Peltier Sr.",
        "uri" : "http://dbpedia.org/resource/Harvey_Peltier_Sr."
      }, {
        "label" : "Ella Dee",
        "uri" : "http://dbpedia.org/resource/Ella_Dee"
      }, {
        "label" : "Albert Stewart Meek",
        "uri" : "http://dbpedia.org/resource/Albert_Stewart_Meek"
      }, {
        "label" : "Ursula (character)",
        "uri" : "http://dbpedia.org/resource/Ursula_(character)"
      }, {
        "label" : "Sybil Leek",
        "uri" : "http://dbpedia.org/resource/Sybil_Leek"
      }, {
        "label" : "David Gessner",
        "uri" : "http://dbpedia.org/resource/David_Gessner"
      }, {
        "label" : "Geoff Holder",
        "uri" : "http://dbpedia.org/resource/Geoff_Holder"
      }, {
        "label" : "Chuck E. Cheese (character)",
        "uri" : "http://dbpedia.org/resource/Chuck_E._Cheese_(character)"
      }, {
        "label" : "List of The Neverending Story characters",
        "uri" : "http://dbpedia.org/resource/List_of_The_Neverending_Story_characters"
      }, {
        "label" : "Dave Elsey",
        "uri" : "http://dbpedia.org/resource/Dave_Elsey"
      }, {
        "label" : "Thulsa Doom",
        "uri" : "http://dbpedia.org/resource/Thulsa_Doom"
      }, {
        "label" : "Mallory (Sliders)",
        "uri" : "http://dbpedia.org/resource/Mallory_(Sliders)"
      }, {
        "label" : "Chris McKinstry",
        "uri" : "http://dbpedia.org/resource/Chris_McKinstry"
      }, {
        "label" : "Maleficent",
        "uri" : "http://dbpedia.org/resource/Maleficent"
      }, {
        "label" : "Evil Queen (Disney)",
        "uri" : "http://dbpedia.org/resource/Evil_Queen_(Disney)"
      }, {
        "label" : "Morgan W. Walker Jr.",
        "uri" : "http://dbpedia.org/resource/Morgan_W._Walker_Jr."
      }, {
        "label" : "Cecil Williamson",
        "uri" : "http://dbpedia.org/resource/Cecil_Williamson"
      }, {
        "label" : "Joe Pillow",
        "uri" : "http://dbpedia.org/resource/Joe_Pillow"
      }, {
        "label" : "Medea (The Icemark Chronicles)",
        "uri" : "http://dbpedia.org/resource/Medea_(The_Icemark_Chronicles)"
      }, {
        "label" : "Mildred Hubble",
        "uri" : "http://dbpedia.org/resource/Mildred_Hubble"
      }, {
        "label" : "La (Tarzan)",
        "uri" : "http://dbpedia.org/resource/La_(Tarzan)"
      }, {
        "label" : "Woody Woodpecker",
        "uri" : "http://dbpedia.org/resource/Woody_Woodpecker"
      }, {
        "label" : "Zelda Spellman",
        "uri" : "http://dbpedia.org/resource/Zelda_Spellman"
      }, {
        "label" : "Sabrina Spellman",
        "uri" : "http://dbpedia.org/resource/Sabrina_Spellman"
      }, {
        "label" : "Ray Lambrecht",
        "uri" : "http://dbpedia.org/resource/Ray_Lambrecht"
      }, {
        "label" : "Ethel Hallow",
        "uri" : "http://dbpedia.org/resource/Ethel_Hallow"
      }, {
        "label" : "Hilda Spellman",
        "uri" : "http://dbpedia.org/resource/Hilda_Spellman"
      }, {
        "label" : "Carl Crane",
        "uri" : "http://dbpedia.org/resource/Carl_Crane"
      }, {
        "label" : "Tom McVea",
        "uri" : "http://dbpedia.org/resource/Tom_McVea"
      }, {
        "label" : "James Heading",
        "uri" : "http://dbpedia.org/resource/James_Heading"
      }, {
        "label" : "Robert Dale (politician)",
        "uri" : "http://dbpedia.org/resource/Robert_Dale_(politician)"
      }, {
        "label" : "David Branscum",
        "uri" : "http://dbpedia.org/resource/David_Branscum"
      }, {
        "label" : "Charles Lumley Hill",
        "uri" : "http://dbpedia.org/resource/Charles_Lumley_Hill"
      }, {
        "label" : "Henry Conwell Wood",
        "uri" : "http://dbpedia.org/resource/Henry_Conwell_Wood"
      }, {
        "label" : "John Macansh",
        "uri" : "http://dbpedia.org/resource/John_Macansh"
      }, {
        "label" : "Brenham C. Crothers",
        "uri" : "http://dbpedia.org/resource/Brenham_C._Crothers"
      }, {
        "label" : "Doug Jennings (politician)",
        "uri" : "http://dbpedia.org/resource/Doug_Jennings_(politician)"
      }, {
        "label" : "Frank and John Craighead",
        "uri" : "http://dbpedia.org/resource/Frank_and_John_Craighead"
      }, {
        "label" : "George W. Littlefield",
        "uri" : "http://dbpedia.org/resource/George_W._Littlefield"
      }, {
        "label" : "Lance Harris",
        "uri" : "http://dbpedia.org/resource/Lance_Harris"
      }, {
        "label" : "James M. McLemore",
        "uri" : "http://dbpedia.org/resource/James_M._McLemore"
      }, {
        "label" : "Lorris M. Wimberly",
        "uri" : "http://dbpedia.org/resource/Lorris_M._Wimberly"
      } ]
    },
    "combination" : true
  }, {
    "id" : "423",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian amateur boxer belonged?", "When was the Australian amateur boxers belonged?", "When was the a Australian amateur boxer belongs?", "When was the Australian amateur boxers belongs?", "When were the a Australian amateur boxer belonged?", "When were the Australian amateur boxers belonged?", "When were the a Australian amateur boxer belongs?", "When were the Australian amateur boxers belongs?", "Which animal was the a Australian amateur boxer belonged?", "Which animal was the Australian amateur boxers belonged?", "Which animal was the a Australian amateur boxer belongs?", "Which animal was the Australian amateur boxers belongs?", "Which animal were the a Australian amateur boxer belonged?", "Which animal were the Australian amateur boxers belonged?", "Which animal were the a Australian amateur boxer belongs?", "Which animal were the Australian amateur boxers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmateurBoxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "424",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian comedian belonged?", "When was the Australian comedians belonged?", "When was the a Australian comedian belongs?", "When was the Australian comedians belongs?", "When were the a Australian comedian belonged?", "When were the Australian comedians belonged?", "When were the a Australian comedian belongs?", "When were the Australian comedians belongs?", "Which animal was the a Australian comedian belonged?", "Which animal was the Australian comedians belonged?", "Which animal was the a Australian comedian belongs?", "Which animal was the Australian comedians belongs?", "Which animal were the a Australian comedian belonged?", "Which animal were the Australian comedians belonged?", "Which animal were the a Australian comedian belongs?", "Which animal were the Australian comedians belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comedian>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "425",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian stadium belonged?", "When was the Australian stadiums belonged?", "When was the a Australian stadium belongs?", "When was the Australian stadiums belongs?", "When were the a Australian stadium belonged?", "When were the Australian stadiums belonged?", "When were the a Australian stadium belongs?", "When were the Australian stadiums belongs?", "Which animal was the a Australian stadium belonged?", "Which animal was the Australian stadiums belonged?", "Which animal was the a Australian stadium belongs?", "Which animal was the Australian stadiums belongs?", "Which animal were the a Australian stadium belonged?", "Which animal were the Australian stadiums belonged?", "Which animal were the a Australian stadium belongs?", "Which animal were the Australian stadiums belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "426",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian judge belonged?", "When was the Australian judges belonged?", "When was the a Australian judge belongs?", "When was the Australian judges belongs?", "When were the a Australian judge belonged?", "When were the Australian judges belonged?", "When were the a Australian judge belongs?", "When were the Australian judges belongs?", "Which animal was the a Australian judge belonged?", "Which animal was the Australian judges belonged?", "Which animal was the a Australian judge belongs?", "Which animal was the Australian judges belongs?", "Which animal were the a Australian judge belonged?", "Which animal were the Australian judges belonged?", "Which animal were the a Australian judge belongs?", "Which animal were the Australian judges belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Judge>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "427",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian human belonged?", "When was the Australian humans belonged?", "When was the a Australian human belongs?", "When was the Australian humans belongs?", "When were the a Australian human belonged?", "When were the Australian humans belonged?", "When were the a Australian human belongs?", "When were the Australian humans belongs?", "Which animal was the a Australian human belonged?", "Which animal was the Australian humans belonged?", "Which animal was the a Australian human belongs?", "Which animal was the Australian humans belongs?", "Which animal were the a Australian human belonged?", "Which animal were the Australian humans belonged?", "Which animal were the a Australian human belongs?", "Which animal were the Australian humans belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "428",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian golfer belonged?", "When was the Australian golfers belonged?", "When was the a Australian golfer belongs?", "When was the Australian golfers belongs?", "When were the a Australian golfer belonged?", "When were the Australian golfers belonged?", "When were the a Australian golfer belongs?", "When were the Australian golfers belongs?", "Which animal was the a Australian golfer belonged?", "Which animal was the Australian golfers belonged?", "Which animal was the a Australian golfer belongs?", "Which animal was the Australian golfers belongs?", "Which animal were the a Australian golfer belonged?", "Which animal were the Australian golfers belonged?", "Which animal were the a Australian golfer belongs?", "Which animal were the Australian golfers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "429",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian sports event belonged?", "When was the Australian sports events belonged?", "When was the a Australian sports event belongs?", "When was the Australian sports events belongs?", "When were the a Australian sports event belonged?", "When were the Australian sports events belonged?", "When were the a Australian sports event belongs?", "When were the Australian sports events belongs?", "Which animal was the a Australian sports event belonged?", "Which animal was the Australian sports events belonged?", "Which animal was the a Australian sports event belongs?", "Which animal was the Australian sports events belongs?", "Which animal were the a Australian sports event belonged?", "Which animal were the Australian sports events belonged?", "Which animal were the a Australian sports event belongs?", "Which animal were the Australian sports events belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "430",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian governor belonged?", "When was the Australian governors belonged?", "When was the a Australian governor belongs?", "When was the Australian governors belongs?", "When were the a Australian governor belonged?", "When were the Australian governors belonged?", "When were the a Australian governor belongs?", "When were the Australian governors belongs?", "Which animal was the a Australian governor belonged?", "Which animal was the Australian governors belonged?", "Which animal was the a Australian governor belongs?", "Which animal was the Australian governors belongs?", "Which animal were the a Australian governor belonged?", "Which animal were the Australian governors belonged?", "Which animal were the a Australian governor belongs?", "Which animal were the Australian governors belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "431",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian horse rider belonged?", "When was the Australian horse riders belonged?", "When was the a Australian horse rider belongs?", "When was the Australian horse riders belongs?", "When were the a Australian horse rider belonged?", "When were the Australian horse riders belonged?", "When were the a Australian horse rider belongs?", "When were the Australian horse riders belongs?", "Which animal was the a Australian horse rider belonged?", "Which animal was the Australian horse riders belonged?", "Which animal was the a Australian horse rider belongs?", "Which animal was the Australian horse riders belongs?", "Which animal were the a Australian horse rider belonged?", "Which animal were the Australian horse riders belonged?", "Which animal were the a Australian horse rider belongs?", "Which animal were the Australian horse riders belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HorseRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "432",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian human belonged?", "When was the Belgian humans belonged?", "When was the a Belgian human belongs?", "When was the Belgian humans belongs?", "When were the a Belgian human belonged?", "When were the Belgian humans belonged?", "When were the a Belgian human belongs?", "When were the Belgian humans belongs?", "Which animal was the a Belgian human belonged?", "Which animal was the Belgian humans belonged?", "Which animal was the a Belgian human belongs?", "Which animal was the Belgian humans belongs?", "Which animal were the a Belgian human belonged?", "Which animal were the Belgian humans belonged?", "Which animal were the a Belgian human belongs?", "Which animal were the Belgian humans belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "433",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golfer belonged?", "When was the Belgian golfers belonged?", "When was the a Belgian golfer belongs?", "When was the Belgian golfers belongs?", "When were the a Belgian golfer belonged?", "When were the Belgian golfers belonged?", "When were the a Belgian golfer belongs?", "When were the Belgian golfers belongs?", "Which animal was the a Belgian golfer belonged?", "Which animal was the Belgian golfers belonged?", "Which animal was the a Belgian golfer belongs?", "Which animal was the Belgian golfers belongs?", "Which animal were the a Belgian golfer belonged?", "Which animal were the Belgian golfers belonged?", "Which animal were the a Belgian golfer belongs?", "Which animal were the Belgian golfers belongs?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/species> ?objOfProp)\n  (triple ?objOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "434",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the birth date of $x builds?", "When was the the birth date of $x built?", "When were the the birth date of $x builds?", "When were the the birth date of $x built?", "Which date was the the birth date of $x builds?", "Which date was the the birth date of $x built?", "Which date were the the birth date of $x builds?", "Which date were the the birth date of $x built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/birthDate> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "435",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "PERSON",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the the occupation of $x builds?", "When was the the occupation of $x built?", "When were the the occupation of $x builds?", "When were the the occupation of $x built?", "Which date was the the occupation of $x builds?", "Which date was the the occupation of $x built?", "Which date were the the occupation of $x builds?", "Which date were the the occupation of $x built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfPropx <http://dbpedia.org/ontology/occupation> ?subjOfProp)\n)\n",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfPropx"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ {
        "label" : "Deaf Smith",
        "uri" : "http://dbpedia.org/resource/Deaf_Smith"
      }, {
        "label" : "Albert Graham Ingalls",
        "uri" : "http://dbpedia.org/resource/Albert_Graham_Ingalls"
      }, {
        "label" : "Francisco da Silveira Pinto da Fonseca Teixeira, 1st Count of Amarante",
        "uri" : "http://dbpedia.org/resource/Francisco_da_Silveira_Pinto_da_Fonseca_Teixeira,_1st_Count_of_Amarante"
      }, {
        "label" : "Philip Van Doren Stern",
        "uri" : "http://dbpedia.org/resource/Philip_Van_Doren_Stern"
      }, {
        "label" : "Mikhail Safonov (pilot)",
        "uri" : "http://dbpedia.org/resource/Mikhail_Safonov_(pilot)"
      }, {
        "label" : "Catharine Merrill",
        "uri" : "http://dbpedia.org/resource/Catharine_Merrill"
      }, {
        "label" : "Hall Lyons",
        "uri" : "http://dbpedia.org/resource/Hall_Lyons"
      }, {
        "label" : "Red Forman",
        "uri" : "http://dbpedia.org/resource/Red_Forman"
      }, {
        "label" : "David Wade (Louisiana)",
        "uri" : "http://dbpedia.org/resource/David_Wade_(Louisiana)"
      }, {
        "label" : "Henry Rutgers",
        "uri" : "http://dbpedia.org/resource/Henry_Rutgers"
      }, {
        "label" : "Adolph G. Metzner",
        "uri" : "http://dbpedia.org/resource/Adolph_G._Metzner"
      }, {
        "label" : "William Mason (1757–1818)",
        "uri" : "http://dbpedia.org/resource/William_Mason_(1757–1818)"
      }, {
        "label" : "Joe Teti",
        "uri" : "http://dbpedia.org/resource/Joe_Teti"
      }, {
        "label" : "Desiree Akhavan",
        "uri" : "http://dbpedia.org/resource/Desiree_Akhavan"
      }, {
        "label" : "Anagnostis Striftombolas",
        "uri" : "http://dbpedia.org/resource/Anagnostis_Striftombolas"
      }, {
        "label" : "Antonios Kalamogdartis",
        "uri" : "http://dbpedia.org/resource/Antonios_Kalamogdartis"
      }, {
        "label" : "Giannis Chondrogiannis",
        "uri" : "http://dbpedia.org/resource/Giannis_Chondrogiannis"
      }, {
        "label" : "Konstantinos Gofas",
        "uri" : "http://dbpedia.org/resource/Konstantinos_Gofas"
      }, {
        "label" : "Panagiotis Anagnostopoulos",
        "uri" : "http://dbpedia.org/resource/Panagiotis_Anagnostopoulos"
      }, {
        "label" : "Panagiotis Karatzas",
        "uri" : "http://dbpedia.org/resource/Panagiotis_Karatzas"
      }, {
        "label" : "Theodoros Papasimakopoulos",
        "uri" : "http://dbpedia.org/resource/Theodoros_Papasimakopoulos"
      }, {
        "label" : "Andreas Kontogouris",
        "uri" : "http://dbpedia.org/resource/Andreas_Kontogouris"
      }, {
        "label" : "Anagnostis Petimezas",
        "uri" : "http://dbpedia.org/resource/Anagnostis_Petimezas"
      }, {
        "label" : "Anastasios Christopoulos",
        "uri" : "http://dbpedia.org/resource/Anastasios_Christopoulos"
      }, {
        "label" : "Asimakis Fotilas",
        "uri" : "http://dbpedia.org/resource/Asimakis_Fotilas"
      }, {
        "label" : "Chrysanthos Sisinis (died 1845)",
        "uri" : "http://dbpedia.org/resource/Chrysanthos_Sisinis_(died_1845)"
      }, {
        "label" : "Dionysis Diakos",
        "uri" : "http://dbpedia.org/resource/Dionysis_Diakos"
      }, {
        "label" : "Georgios Mitzou",
        "uri" : "http://dbpedia.org/resource/Georgios_Mitzou"
      }, {
        "label" : "Georgios Sisinis",
        "uri" : "http://dbpedia.org/resource/Georgios_Sisinis"
      }, {
        "label" : "Giorgos Giannias",
        "uri" : "http://dbpedia.org/resource/Giorgos_Giannias"
      }, {
        "label" : "Ioannis Diakos",
        "uri" : "http://dbpedia.org/resource/Ioannis_Diakos"
      }, {
        "label" : "Ioannis Krestenitis (elder)",
        "uri" : "http://dbpedia.org/resource/Ioannis_Krestenitis_(elder)"
      }, {
        "label" : "Ioannis Papadiamantopoulos (elder)",
        "uri" : "http://dbpedia.org/resource/Ioannis_Papadiamantopoulos_(elder)"
      }, {
        "label" : "Konstantinos Petimezas",
        "uri" : "http://dbpedia.org/resource/Konstantinos_Petimezas"
      }, {
        "label" : "Nikolaos Petimezas",
        "uri" : "http://dbpedia.org/resource/Nikolaos_Petimezas"
      }, {
        "label" : "Panagiotakis Fotilas",
        "uri" : "http://dbpedia.org/resource/Panagiotakis_Fotilas"
      }, {
        "label" : "Petros Mitzou",
        "uri" : "http://dbpedia.org/resource/Petros_Mitzou"
      }, {
        "label" : "Stamatis Krestenitis",
        "uri" : "http://dbpedia.org/resource/Stamatis_Krestenitis"
      }, {
        "label" : "Thallis Theodoridis (elder)",
        "uri" : "http://dbpedia.org/resource/Thallis_Theodoridis_(elder)"
      }, {
        "label" : "Walter Scheler",
        "uri" : "http://dbpedia.org/resource/Walter_Scheler"
      }, {
        "label" : "Rajdeep Sardesai",
        "uri" : "http://dbpedia.org/resource/Rajdeep_Sardesai"
      }, {
        "label" : "Jenna Wortham",
        "uri" : "http://dbpedia.org/resource/Jenna_Wortham"
      }, {
        "label" : "Rachel Kaadzi Ghansah",
        "uri" : "http://dbpedia.org/resource/Rachel_Kaadzi_Ghansah"
      }, {
        "label" : "Gerhard Thyben",
        "uri" : "http://dbpedia.org/resource/Gerhard_Thyben"
      }, {
        "label" : "Louis-Nicolas Davout",
        "uri" : "http://dbpedia.org/resource/Louis-Nicolas_Davout"
      }, {
        "label" : "Rebecca Greer",
        "uri" : "http://dbpedia.org/resource/Rebecca_Greer"
      } ]
    },
    "combination" : true
  }, {
    "id" : "436",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian amateur boxer builds?", "When was the Australian amateur boxers builds?", "When was the a Australian amateur boxer built?", "When was the Australian amateur boxers built?", "When were the a Australian amateur boxer builds?", "When were the Australian amateur boxers builds?", "When were the a Australian amateur boxer built?", "When were the Australian amateur boxers built?", "Which date was the a Australian amateur boxer builds?", "Which date was the Australian amateur boxers builds?", "Which date was the a Australian amateur boxer built?", "Which date was the Australian amateur boxers built?", "Which date were the a Australian amateur boxer builds?", "Which date were the Australian amateur boxers builds?", "Which date were the a Australian amateur boxer built?", "Which date were the Australian amateur boxers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmateurBoxer>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "437",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian comedian builds?", "When was the Australian comedians builds?", "When was the a Australian comedian built?", "When was the Australian comedians built?", "When were the a Australian comedian builds?", "When were the Australian comedians builds?", "When were the a Australian comedian built?", "When were the Australian comedians built?", "Which date was the a Australian comedian builds?", "Which date was the Australian comedians builds?", "Which date was the a Australian comedian built?", "Which date was the Australian comedians built?", "Which date were the a Australian comedian builds?", "Which date were the Australian comedians builds?", "Which date were the a Australian comedian built?", "Which date were the Australian comedians built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comedian>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "438",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian stadium builds?", "When was the Australian stadiums builds?", "When was the a Australian stadium built?", "When was the Australian stadiums built?", "When were the a Australian stadium builds?", "When were the Australian stadiums builds?", "When were the a Australian stadium built?", "When were the Australian stadiums built?", "Which date was the a Australian stadium builds?", "Which date was the Australian stadiums builds?", "Which date was the a Australian stadium built?", "Which date was the Australian stadiums built?", "Which date were the a Australian stadium builds?", "Which date were the Australian stadiums builds?", "Which date were the a Australian stadium built?", "Which date were the Australian stadiums built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "439",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian judge builds?", "When was the Australian judges builds?", "When was the a Australian judge built?", "When was the Australian judges built?", "When were the a Australian judge builds?", "When were the Australian judges builds?", "When were the a Australian judge built?", "When were the Australian judges built?", "Which date was the a Australian judge builds?", "Which date was the Australian judges builds?", "Which date was the a Australian judge built?", "Which date was the Australian judges built?", "Which date were the a Australian judge builds?", "Which date were the Australian judges builds?", "Which date were the a Australian judge built?", "Which date were the Australian judges built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Judge>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "440",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian human builds?", "When was the Australian humans builds?", "When was the a Australian human built?", "When was the Australian humans built?", "When were the a Australian human builds?", "When were the Australian humans builds?", "When were the a Australian human built?", "When were the Australian humans built?", "Which date was the a Australian human builds?", "Which date was the Australian humans builds?", "Which date was the a Australian human built?", "Which date was the Australian humans built?", "Which date were the a Australian human builds?", "Which date were the Australian humans builds?", "Which date were the a Australian human built?", "Which date were the Australian humans built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "441",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian golfer builds?", "When was the Australian golfers builds?", "When was the a Australian golfer built?", "When was the Australian golfers built?", "When were the a Australian golfer builds?", "When were the Australian golfers builds?", "When were the a Australian golfer built?", "When were the Australian golfers built?", "Which date was the a Australian golfer builds?", "Which date was the Australian golfers builds?", "Which date was the a Australian golfer built?", "Which date was the Australian golfers built?", "Which date were the a Australian golfer builds?", "Which date were the Australian golfers builds?", "Which date were the a Australian golfer built?", "Which date were the Australian golfers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "442",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian sports event builds?", "When was the Australian sports events builds?", "When was the a Australian sports event built?", "When was the Australian sports events built?", "When were the a Australian sports event builds?", "When were the Australian sports events builds?", "When were the a Australian sports event built?", "When were the Australian sports events built?", "Which date was the a Australian sports event builds?", "Which date was the Australian sports events builds?", "Which date was the a Australian sports event built?", "Which date was the Australian sports events built?", "Which date were the a Australian sports event builds?", "Which date were the Australian sports events builds?", "Which date were the a Australian sports event built?", "Which date were the Australian sports events built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "443",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian governor builds?", "When was the Australian governors builds?", "When was the a Australian governor built?", "When was the Australian governors built?", "When were the a Australian governor builds?", "When were the Australian governors builds?", "When were the a Australian governor built?", "When were the Australian governors built?", "Which date was the a Australian governor builds?", "Which date was the Australian governors builds?", "Which date was the a Australian governor built?", "Which date was the Australian governors built?", "Which date were the a Australian governor builds?", "Which date were the Australian governors builds?", "Which date were the a Australian governor built?", "Which date were the Australian governors built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "444",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Australian horse rider builds?", "When was the Australian horse riders builds?", "When was the a Australian horse rider built?", "When was the Australian horse riders built?", "When were the a Australian horse rider builds?", "When were the Australian horse riders builds?", "When were the a Australian horse rider built?", "When were the Australian horse riders built?", "Which date was the a Australian horse rider builds?", "Which date was the Australian horse riders builds?", "Which date was the a Australian horse rider built?", "Which date was the Australian horse riders built?", "Which date were the a Australian horse rider builds?", "Which date were the Australian horse riders builds?", "Which date were the a Australian horse rider built?", "Which date were the Australian horse riders built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HorseRider>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "445",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian human builds?", "When was the Belgian humans builds?", "When was the a Belgian human built?", "When was the Belgian humans built?", "When were the a Belgian human builds?", "When were the Belgian humans builds?", "When were the a Belgian human built?", "When were the Belgian humans built?", "Which date was the a Belgian human builds?", "Which date was the Belgian humans builds?", "Which date was the a Belgian human built?", "Which date was the Belgian humans built?", "Which date were the a Belgian human builds?", "Which date were the Belgian humans builds?", "Which date were the a Belgian human built?", "Which date were the Belgian humans built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q5>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  }, {
    "id" : "446",
    "language" : "EN",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentences" : [ "When was the a Belgian golfer builds?", "When was the Belgian golfers builds?", "When was the a Belgian golfer built?", "When was the Belgian golfers built?", "When were the a Belgian golfer builds?", "When were the Belgian golfers builds?", "When were the a Belgian golfer built?", "When were the Belgian golfers built?", "Which date was the a Belgian golfer builds?", "Which date was the Belgian golfers builds?", "Which date was the a Belgian golfer built?", "Which date was the Belgian golfers built?", "Which date were the a Belgian golfer builds?", "Which date were the Belgian golfers builds?", "Which date were the a Belgian golfer built?", "Which date were the Belgian golfers built?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp\n  (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp)\n  (triple ?subjOfProp <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Belgium>)\n  (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.wikidata.org/entity/Q13156709>)\n)\n",
    "sentenceToSparqlParameterMapping" : null,
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "NONE",
      "bindingList" : [ ]
    },
    "combination" : true
  } ]
}